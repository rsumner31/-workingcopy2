From b122d10421d289b3dc4db260f7d8cf3cf5ae3cf8 Mon Sep 17 00:00:00 2001
From: scwang90 <scwang90@hotmaiul.com>
Date: Fri, 2 Jun 2017 21:38:59 +0800
Subject: [PATCH] 初始提交项目

---
 .gitignore                                                                                          |    6 ++++++
 app/.gitignore                                                                                      |    1 +
 app/build.gradle                                                                                    |   38 ++++++++++++++++++++++++++++++++++++++
 app/proguard-rules.pro                                                                              |   25 +++++++++++++++++++++++++
 app/src/androidTest/java/com/scwang/refreshlayout/ExampleInstrumentedTest.java                      |   26 ++++++++++++++++++++++++++
 app/src/main/AndroidManifest.xml                                                                    |   24 ++++++++++++++++++++++++
 app/src/main/java/com/scwang/refreshlayout/ScrollingActivity.java                                   |   51 +++++++++++++++++++++++++++++++++++++++++++++++++++
 app/src/main/res/drawable/ic_main.xml                                                               |   78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 app/src/main/res/layout/activity_scrolling.xml                                                      |   58 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 app/src/main/res/layout/content_scrolling.xml                                                       |   17 +++++++++++++++++
 app/src/main/res/menu/menu_scrolling.xml                                                            |   10 ++++++++++
 app/src/main/res/mipmap-hdpi/ic_launcher.png                                                        | Bin 0 -> 3418 bytes
 app/src/main/res/mipmap-hdpi/ic_launcher_round.png                                                  | Bin 0 -> 4208 bytes
 app/src/main/res/mipmap-mdpi/ic_launcher.png                                                        | Bin 0 -> 2206 bytes
 app/src/main/res/mipmap-mdpi/ic_launcher_round.png                                                  | Bin 0 -> 2555 bytes
 app/src/main/res/mipmap-xhdpi/ic_launcher.png                                                       | Bin 0 -> 4842 bytes
 app/src/main/res/mipmap-xhdpi/ic_launcher_round.png                                                 | Bin 0 -> 6114 bytes
 app/src/main/res/mipmap-xxhdpi/ic_launcher.png                                                      | Bin 0 -> 7718 bytes
 app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png                                                | Bin 0 -> 10056 bytes
 app/src/main/res/mipmap-xxxhdpi/ic_launcher.png                                                     | Bin 0 -> 10486 bytes
 app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png                                               | Bin 0 -> 14696 bytes
 app/src/main/res/values/colors.xml                                                                  |    6 ++++++
 app/src/main/res/values/dimens.xml                                                                  |    5 +++++
 app/src/main/res/values/strings.xml                                                                 |   93 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 app/src/main/res/values/styles.xml                                                                  |   20 ++++++++++++++++++++
 app/src/test/java/com/scwang/refreshlayout/ExampleUnitTest.java                                     |   17 +++++++++++++++++
 build.gradle                                                                                        |   25 +++++++++++++++++++++++++
 gradlew                                                                                             |  160 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 gradlew.bat                                                                                         |   90 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-footer/.gitignore                                                                           |    1 +
 refresh-footer/build.gradle                                                                         |   48 ++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-footer/proguard-rules.pro                                                                   |   25 +++++++++++++++++++++++++
 refresh-footer/src/androidTest/java/com/scwang/smartrefreshfooter/ExampleInstrumentedTest.java      |   26 ++++++++++++++++++++++++++
 refresh-footer/src/main/AndroidManifest.xml                                                         |   10 ++++++++++
 refresh-footer/src/main/res/values/attrs.xml                                                        |    5 +++++
 refresh-footer/src/main/res/values/strings.xml                                                      |    3 +++
 refresh-footer/src/test/java/com/scwang/smartrefreshfooter/ExampleUnitTest.java                     |   17 +++++++++++++++++
 refresh-header/.gitignore                                                                           |    1 +
 refresh-header/build.gradle                                                                         |   48 ++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-header/proguard-rules.pro                                                                   |   25 +++++++++++++++++++++++++
 refresh-header/src/androidTest/java/com/scwang/smartrefreshheader/ExampleInstrumentedTest.java      |   26 ++++++++++++++++++++++++++
 refresh-header/src/main/AndroidManifest.xml                                                         |   10 ++++++++++
 refresh-header/src/main/java/com/scwang/smartrefreshheader/PhoenixHeader.java                       |  338 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-header/src/main/java/com/scwang/smartrefreshheader/TaurusHeader.java                        |  599 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-header/src/main/res/values/attrs.xml                                                        |   15 +++++++++++++++
 refresh-header/src/main/res/values/strings.xml                                                      |    3 +++
 refresh-header/src/test/java/com/scwang/smartrefreshheader/ExampleUnitTest.java                     |   17 +++++++++++++++++
 refresh-layout/.gitignore                                                                           |    1 +
 refresh-layout/build.gradle                                                                         |   47 +++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/proguard-rules.pro                                                                   |   25 +++++++++++++++++++++++++
 refresh-layout/src/androidTest/java/com/scwang/smartrefreshlayout/ExampleInstrumentedTest.java      |   26 ++++++++++++++++++++++++++
 refresh-layout/src/main/AndroidManifest.xml                                                         |   10 ++++++++++
 refresh-layout/src/main/java/android/support/v4/view/PagerAdapterWrapper.java                       |  130 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/SmartRefreshLayout.java                  |
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshContent.java                  |   22 ++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshFooter.java                   |   12 ++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshHeader.java                   |   12 ++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshInternal.java                 |   21 +++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/SizeDefinition.java                  |   11 +++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/RefreshState.java               |    5 +++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/SpinnerStyle.java               |   11 +++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseFooter.java    |  129 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseView.java      |  200 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/classics/ClassicsFooter.java      |  139 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/BezierHeader.java          |  220 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RippleView.java            |   59 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundDotView.java          |   54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundProgressView.java     |   97 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/WaveView.java              |   73 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/classics/ClassicsHeader.java      |  174 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshBottomWrapper.java           |   72 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshContentWrapper.java          |  247 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshHeaderWrapper.java           |   73 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/CircleImageView.java            |  158 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/MaterialProgressDrawable.java   |
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Box.java               |   42 ++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/IntegerParser.java     |  177 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Length.java            |   66 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/NumberParser.java      |  280 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsDrawable.java     |  166 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsView.java         |  130 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/TextScanner.java       |
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Unit.java              |   13 +++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnLoadmoreListener.java         |   12 ++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnMultiPurposeListener.java     |   21 +++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshListener.java          |   12 ++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshLoadmoreListener.java  |    9 +++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnStateChangedListener.java     |   13 +++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/SimpleMultiPurposeListener.java |   69 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/util/DensityUtil.java                    |   40 ++++++++++++++++++++++++++++++++++++++++
 refresh-layout/src/main/res/values/attrs.xml                                                        |   30 ++++++++++++++++++++++++++++++
 refresh-layout/src/main/res/values/strings.xml                                                      |    3 +++
 refresh-layout/src/test/java/com/scwang/smartrefreshlayout/ExampleUnitTest.java                     |   17 +++++++++++++++++
 settings.gradle                                                                                     |    1 +
 94 files changed, 7756 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 app/.gitignore
 create mode 100644 app/build.gradle
 create mode 100644 app/proguard-rules.pro
 create mode 100644 app/src/androidTest/java/com/scwang/refreshlayout/ExampleInstrumentedTest.java
 create mode 100644 app/src/main/AndroidManifest.xml
 create mode 100644 app/src/main/java/com/scwang/refreshlayout/ScrollingActivity.java
 create mode 100644 app/src/main/res/drawable/ic_main.xml
 create mode 100644 app/src/main/res/layout/activity_scrolling.xml
 create mode 100644 app/src/main/res/layout/content_scrolling.xml
 create mode 100644 app/src/main/res/menu/menu_scrolling.xml
 create mode 100644 app/src/main/res/mipmap-hdpi/ic_launcher.png
 create mode 100644 app/src/main/res/mipmap-hdpi/ic_launcher_round.png
 create mode 100644 app/src/main/res/mipmap-mdpi/ic_launcher.png
 create mode 100644 app/src/main/res/mipmap-mdpi/ic_launcher_round.png
 create mode 100644 app/src/main/res/mipmap-xhdpi/ic_launcher.png
 create mode 100644 app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
 create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_launcher.png
 create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
 create mode 100644 app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
 create mode 100644 app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
 create mode 100644 app/src/main/res/values/colors.xml
 create mode 100644 app/src/main/res/values/dimens.xml
 create mode 100644 app/src/main/res/values/strings.xml
 create mode 100644 app/src/main/res/values/styles.xml
 create mode 100644 app/src/test/java/com/scwang/refreshlayout/ExampleUnitTest.java
 create mode 100644 build.gradle
 create mode 100644 gradlew
 create mode 100644 gradlew.bat
 create mode 100644 refresh-footer/.gitignore
 create mode 100644 refresh-footer/build.gradle
 create mode 100644 refresh-footer/proguard-rules.pro
 create mode 100644 refresh-footer/src/androidTest/java/com/scwang/smartrefreshfooter/ExampleInstrumentedTest.java
 create mode 100644 refresh-footer/src/main/AndroidManifest.xml
 create mode 100644 refresh-footer/src/main/res/values/attrs.xml
 create mode 100644 refresh-footer/src/main/res/values/strings.xml
 create mode 100644 refresh-footer/src/test/java/com/scwang/smartrefreshfooter/ExampleUnitTest.java
 create mode 100644 refresh-header/.gitignore
 create mode 100644 refresh-header/build.gradle
 create mode 100644 refresh-header/proguard-rules.pro
 create mode 100644 refresh-header/src/androidTest/java/com/scwang/smartrefreshheader/ExampleInstrumentedTest.java
 create mode 100644 refresh-header/src/main/AndroidManifest.xml
 create mode 100644 refresh-header/src/main/java/com/scwang/smartrefreshheader/PhoenixHeader.java
 create mode 100644 refresh-header/src/main/java/com/scwang/smartrefreshheader/TaurusHeader.java
 create mode 100644 refresh-header/src/main/res/values/attrs.xml
 create mode 100644 refresh-header/src/main/res/values/strings.xml
 create mode 100644 refresh-header/src/test/java/com/scwang/smartrefreshheader/ExampleUnitTest.java
 create mode 100644 refresh-layout/.gitignore
 create mode 100644 refresh-layout/build.gradle
 create mode 100644 refresh-layout/proguard-rules.pro
 create mode 100644 refresh-layout/src/androidTest/java/com/scwang/smartrefreshlayout/ExampleInstrumentedTest.java
 create mode 100644 refresh-layout/src/main/AndroidManifest.xml
 create mode 100644 refresh-layout/src/main/java/android/support/v4/view/PagerAdapterWrapper.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/SmartRefreshLayout.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshContent.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshFooter.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshHeader.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshInternal.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/SizeDefinition.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/RefreshState.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/SpinnerStyle.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseFooter.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/classics/ClassicsFooter.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/BezierHeader.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RippleView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundDotView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundProgressView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/WaveView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/classics/ClassicsHeader.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshBottomWrapper.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshContentWrapper.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshHeaderWrapper.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/CircleImageView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/MaterialProgressDrawable.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Box.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/IntegerParser.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Length.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/NumberParser.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsDrawable.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsView.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/TextScanner.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Unit.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnLoadmoreListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnMultiPurposeListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshLoadmoreListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnStateChangedListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/SimpleMultiPurposeListener.java
 create mode 100644 refresh-layout/src/main/java/com/scwang/smartrefreshlayout/util/DensityUtil.java
 create mode 100644 refresh-layout/src/main/res/values/attrs.xml
 create mode 100644 refresh-layout/src/main/res/values/strings.xml
 create mode 100644 refresh-layout/src/test/java/com/scwang/smartrefreshlayout/ExampleUnitTest.java
 create mode 100644 settings.gradle

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..7796316
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,6 @@
+*.iml
+.gradle
+gradle
+/local.properties
+/.idea
+/build
diff --git a/app/.gitignore b/app/.gitignore
new file mode 100644
index 0000000..796b96d
--- /dev/null
+++ b/app/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/app/build.gradle b/app/build.gradle
new file mode 100644
index 0000000..ea6be02
--- /dev/null
+++ b/app/build.gradle
@@ -0,0 +1,38 @@
+apply plugin: 'com.android.application'
+apply plugin: 'me.tatarka.retrolambda'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "25.0.3"
+    defaultConfig {
+        applicationId "com.scwang.refreshlayout"
+        minSdkVersion 14
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    compile 'com.android.support:design:25.3.1'
+    testCompile 'junit:junit:4.12'
+    compile project(':refresh-footer')
+    compile project(':refresh-header')
+    compile project(':refresh-layout')
+}
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
index 0000000..8fe066b
--- /dev/null
+++ b/app/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in E:\Android\android-sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/app/src/androidTest/java/com/scwang/refreshlayout/ExampleInstrumentedTest.java b/app/src/androidTest/java/com/scwang/refreshlayout/ExampleInstrumentedTest.java
new file mode 100644
index 0000000..966b0d9
--- /dev/null
+++ b/app/src/androidTest/java/com/scwang/refreshlayout/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package com.scwang.refreshlayout;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.scwang.refreshlayout", appContext.getPackageName());
+    }
+}
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..cfa6ddb
--- /dev/null
+++ b/app/src/main/AndroidManifest.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.scwang.refreshlayout">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity
+            android:name=".ScrollingActivity"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme.NoActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/app/src/main/java/com/scwang/refreshlayout/ScrollingActivity.java b/app/src/main/java/com/scwang/refreshlayout/ScrollingActivity.java
new file mode 100644
index 0000000..9f60fa2
--- /dev/null
+++ b/app/src/main/java/com/scwang/refreshlayout/ScrollingActivity.java
@@ -0,0 +1,51 @@
+package com.scwang.refreshlayout;
+
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.Snackbar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.view.Menu;
+import android.view.MenuItem;
+
+public class ScrollingActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_scrolling);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+        fab.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
+                        .setAction("Action", null).show();
+            }
+        });
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.menu_scrolling, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.action_settings) {
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/app/src/main/res/drawable/ic_main.xml b/app/src/main/res/drawable/ic_main.xml
new file mode 100644
index 0000000..32c3088
--- /dev/null
+++ b/app/src/main/res/drawable/ic_main.xml
@@ -0,0 +1,78 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="822dp"
+        android:height="404dp"
+        android:viewportWidth="822.0"
+        android:viewportHeight="404.0">
+    <path
+        android:pathData="m293.5,403c-3.3,-0.4 -10.3,-0.8 -15.5,-0.9 -10.8,-0.1 -63.6,-4.7 -81,-7 -4.1,-0.5 -14.7,-1.9 -23.5,-3.1C144.6,388.2 96.7,379.9 64.5,373.1 52.1,370.4 12.6,360.6 8.5,359.1 6.8,358.5 4.3,357.8 2.8,357.5 0.1,357 0,356.7 0,351 0,340.7 4.1,326.7 11.3,312.6 25.1,285.4 48.2,264 84.5,244.5c4.9,-2.7 9.7,-5.4 10.5,-6.1 0.8,-0.7 3.3,-1.7 5.5,-2.3 2.2,-0.5 8.7,-2.8 14.5,-5.1 5.8,-2.2 14.2,-5.2 18.8,-6.6l8.3,-2.5 0,-4.4c0,-3.8 -0.3,-4.4 -2.3,-4.7 -2.8,-0.4 -3.6,-4.2 -1.4,-6.7 0.8,-0.9 4.2,-7 7.6,-13.5l6.1,-11.8 -0.3,-11.7L151.5,157.5l-4.7,-0.3c-3,-0.2 -4.9,-0.8 -5.2,-1.8 -0.3,-0.8 2.1,-7 5.3,-13.7 3.2,-6.7 6.6,-13.9 7.4,-16 0.9,-2.1 2.2,-4 3,-4.3 0.8,-0.3 20.5,-0.6 43.8,-0.7 40.8,-0.2 42.3,-0.2 42.7,-2.1 0.2,-1.1 -0.6,-2.6 -1.9,-3.6 -1.5,-1.1 -2,-2.3 -1.6,-3.4 0.5,-1.4 2,-1.6 9.4,-1.4 8.1,0.3 8.8,0.5 9.1,2.4 0.2,1.4 -0.3,2.3 -1.8,2.7 -1.4,0.4 -2.1,1.4 -2.1,3.1 0,2.5 0.2,2.6 6.4,2.6 4,0 6.8,0.5 7.5,1.3 0.6,0.7 3.7,6.9 6.9,13.8 10.1,22 9.2,27.8 9.2,-55.9L285,7 282.5,6C279.9,5 279.6,4.3 280.6,1.6 281.1,0.2 286.8,0 334.5,0 382.2,0 387.9,0.2 388.4,1.6 389.4,4.3 389.1,5 386.5,6l-2.5,1 0,90 0,90 2.8,0.7c3.5,0.8 12,5.1 15.1,7.5 1.9,1.5 4.1,1.9 11.7,1.9 8.9,0 9.4,-0.1 9.9,-2.3 0.3,-1.2 0.4,-18.7 0.3,-38.8l-0.3,-36.5 -5,-0.5c-4.3,-0.4 -5,-0.8 -5.3,-2.8 -0.2,-1.3 0.3,-3.1 1.1,-4 0.8,-0.9 3,-5.3 4.8,-9.7l3.3,-8 0.4,-20.3 0.4,-20.3 -3.1,-1.1C416.8,51.7 415.9,48.5 418.2,46.2 419.5,44.9 441.4,44.4 444.4,45.6 446.8,46.5 446.5,51.7 444,53c-2.6,1.4 -2.9,8.5 -0.4,9.4C444.5,62.7 473,63 507.1,63l61.9,0 1.4,2.3c0.8,1.2 4.2,10 7.7,19.4 5,13.5 6.7,17.3 8.4,17.7 1.1,0.3 19.9,0.6 41.8,0.6L668,103l0,-2.5c0,-1.3 -0.7,-2.9 -1.6,-3.3 -0.9,-0.5 -1.4,-1.8 -1.2,-2.8 0.3,-1.6 1.4,-1.9 7.3,-2.2C680.8,91.8 684,92.5 684,94.5c0,0.8 -1.1,2 -2.5,2.7 -1.7,0.8 -2.5,1.8 -2.3,3.2 0.3,1.8 1.1,2.1 6.4,2.4 4.2,0.2 6.6,0.8 7.6,2 0.8,0.9 4.1,7.3 7.3,14.2 3.2,6.9 6.4,13.4 7.1,14.6 1.8,2.7 0.7,5.4 -2,5.4 -4.8,0 -4.7,-0.7 -4.4,39.4l0.3,37.8 4.2,1.2c2.3,0.7 5.8,2.3 7.8,3.5l3.7,2.3 4.3,-2.1C724.8,219.5 727.5,219 734.2,219c7.8,0 8.8,0.2 12.5,2.9 3.9,2.8 9,8.7 11.1,12.6 0.7,1.4 3.1,2.5 8.1,3.7 6.9,1.6 13.6,5.3 17.6,9.8 1.5,1.7 2,3.6 2,8.2 0,6.5 -1.6,8.8 -6.2,8.8 -1.3,0 -2.3,0.4 -2.3,0.8 0,0.4 2.7,3.5 6.1,6.8 12.5,12.3 25.8,32.2 32.5,48.8 4.5,11.1 5.5,15.8 6.2,27.2 0.5,9 0.5,9.1 -2.1,10.3 -1.5,0.7 -3.7,1.2 -5,1.2 -1.3,0 -7,1.1 -12.7,2.4 -40.3,9.4 -102.1,20.1 -157.3,27 -58.3,7.3 -89.6,10.4 -132,12.8 -21.4,1.2 -210.4,1.9 -219,0.8zM191.7,276.3c1.5,-1.1 1.5,-1.3 -0.5,-1.3 -2.2,0 -2.2,0.1 -2,18.3l0.2,18.3 0.3,-17c0.2,-14.5 0.5,-17.2 2,-18.3zM267,293c0,-17.5 -0.1,-18 -2.1,-18 -1.9,0 -2,0.1 -0.5,2.2 1.2,1.8 1.6,5.3 1.6,18 0,8.7 0.2,15.8 0.5,15.8 0.3,0 0.5,-8.1 0.5,-18zM162.7,286.3c-0.3,-0.3 -1,-0.2 -1.6,0.2 -0.8,0.5 -0.7,1.1 0.2,2.3 1.2,1.4 1.3,1.4 1.6,-0.2 0.2,-1 0.1,-2 -0.2,-2.3zM171,288c0,-0.6 -0.5,-1 -1.1,-1 -0.6,0 -0.8,0.4 -0.4,1 0.3,0.6 0.8,1 1.1,1 0.2,0 0.4,-0.4 0.4,-1zM111.6,286.9c1,-1.7 -1.3,-3.6 -2.7,-2.2C107.7,285.9 108.5,288 110,288c0.5,0 1.2,-0.5 1.6,-1.1zM121.9,287.1C123.5,286.1 122.5,284 120.5,284c-1.7,0 -2.8,1.7 -2,3 0.8,1.2 1.6,1.2 3.4,0.1zM129,286c0,-0.6 -0.4,-1 -1,-1 -0.6,0 -1,0.4 -1,1 0,0.6 0.4,1 1,1 0.6,0 1,-0.4 1,-1zM543.3,235.3c1.1,-1.1 25.2,-1.1 26.3,-0 0.5,0.5 1.1,11 1.4,23.5l0.5,22.7 -0,-25 -0,-25 -15.3,-0.3 -15.3,-0.3 0.2,26.3 0.2,26.3 0.5,-23.7c0.3,-13 0.9,-24 1.4,-24.5zM163.2,279.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM438.5,268c-0.3,-0.6 -0.8,-1 -1.1,-1 -0.2,0 -0.4,0.4 -0.4,1 0,0.6 0.5,1 1.1,1 0.6,0 0.8,-0.4 0.4,-1zM454,267.1c-1.3,-2.4 -1.3,-10 -0.1,-12 0.6,-1 2.9,-1.4 7.5,-1.4C465,253.6 468,253.3 468,252.8 468,252.4 465.2,252 461.7,252c-3.6,0 -6.8,-0.5 -7.5,-1.2 -1.5,-1.5 -1.6,-9.2 -0.2,-11.9C454.9,237.3 454.7,237 452.5,237c-2.2,0 -2.4,0.3 -1.5,1.9 1.6,2.9 1.3,10.6 -0.4,12 -0.9,0.8 -3.8,1.1 -7.5,0.9 -4.9,-0.3 -6,-0 -6,1.2 -0,1.2 1.3,1.4 6.6,1.2 4.8,-0.2 6.9,0 7.5,1 1.2,1.9 1.1,9.6 -0.2,11.9C450.1,268.7 450.3,269 452.5,269c2.2,0 2.4,-0.3 1.5,-1.9zM486.5,268c-0.3,-0.6 -0.8,-1 -1.1,-1 -0.2,0 -0.4,0.4 -0.4,1 0,0.6 0.5,1 1.1,1 0.6,0 0.8,-0.4 0.4,-1zM502,267.1c-1.3,-2.4 -1.3,-10 -0.1,-12 0.6,-1 2.9,-1.4 7.5,-1.4 4,-0 6.6,-0.5 6.6,-1.1 0,-0.7 -2.2,-0.9 -6,-0.7 -3.7,0.2 -6.6,-0.1 -7.5,-0.9 -1.7,-1.4 -2,-9.1 -0.4,-12 0.9,-1.7 0.7,-1.9 -1.7,-1.9 -2.1,0 -2.5,0.3 -1.5,1.2 1.4,1.4 1.6,10.6 0.3,12.7 -0.6,1 -2.6,1.3 -7.5,1 -5.5,-0.3 -6.6,-0.2 -6.6,1.1 -0,1.3 1.4,1.5 7.3,1.5l7.3,0 0.3,5.8c0.2,3.4 -0.2,6.4 -0.9,7.3 -1,1.2 -0.7,1.4 1.5,1.4 2.3,0 2.5,-0.2 1.6,-1.9zM163.5,252c-0.3,-0.6 -1,-0.8 -1.6,-0.4 -1.4,0.9 -1.1,1.5 0.6,1.5 0.9,0 1.3,-0.5 0.9,-1zM192.2,252.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM221.2,252.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM251.2,252.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM280.2,252.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM289,251.9c0,-0.6 -0.4,-0.8 -1,-0.4 -0.6,0.3 -1,0.8 -1,1.1 0,0.2 0.4,0.4 1,0.4 0.6,0 1,-0.5 1,-1.1zM230,244.8c-0,-2.6 -0.2,-2.9 -1,-1.6 -0.5,0.9 -0.7,2.4 -0.4,3.3 0.9,2.5 1.4,1.9 1.4,-1.7zM170.7,243.8c-0.3,-0.7 -0.5,-0.1 -0.5,1.3 0,1.4 0.2,1.9 0.5,1.3 0.3,-0.7 0.3,-1.8 0,-2.5zM213.1,243.3c-0.9,-1.6 -1.1,-1.5 -1.1,1.1 -0,2.2 0.3,2.7 1.1,1.8 0.8,-0.8 0.8,-1.6 0,-3zM260,244.4C260,243.6 259.5,243 259,243c-0.6,0 -1,0.9 -1,2.1 0,1.1 0.4,1.8 1,1.4 0.6,-0.3 1,-1.3 1,-2.1zM289,244.8c0,-1.6 -0.3,-1.9 -1.1,-1.1 -0.6,0.6 -0.8,1.6 -0.4,2.2C288.5,247.6 289,247.2 289,244.8zM155,244.4C155,244.2 154.6,244 154,244c-0.6,0 -1,0.5 -1,1.1 0,0.6 0.4,0.8 1,0.4 0.6,-0.3 1,-0.8 1,-1.1zM184.5,243.9C183.6,242.5 183,242.8 183,244.6c0,0.9 0.5,1.3 1,0.9 0.6,-0.3 0.8,-1 0.4,-1.6zM193,244.5c0,-0.8 -0.4,-1.5 -1,-1.5 -0.6,0 -1,0.7 -1,1.5 0,0.8 0.4,1.5 1,1.5 0.6,0 1,-0.7 1,-1.5zM201,244.4c0,-0.9 -0.4,-1.3 -1,-0.9 -0.6,0.3 -1,1 -1,1.6 0,0.5 0.4,0.9 1,0.9 0.6,0 1,-0.7 1,-1.6zM222,244.5c0,-0.8 -0.4,-1.5 -1,-1.5 -0.6,0 -1,0.7 -1,1.5 0,0.8 0.4,1.5 1,1.5 0.6,0 1,-0.7 1,-1.5zM243,245.1c0,-0.5 -0.4,-1.2 -1,-1.6 -0.6,-0.3 -1,0.1 -1,0.9 0,0.9 0.4,1.6 1,1.6 0.6,0 1,-0.4 1,-0.9zM251.3,244.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM271.6,243.3c-0.3,-0.3 -0.6,0.3 -0.5,1.3 0,1.2 0.3,1.4 0.6,0.6 0.3,-0.7 0.3,-1.6 -0.1,-1.9zM280.4,243.9c-0.3,-0.5 -1,-0.7 -1.5,-0.4 -0.5,0.3 -0.7,1 -0.4,1.5 0.3,0.5 1,0.7 1.5,0.4 0.5,-0.3 0.7,-1 0.4,-1.5zM438.5,238c0.3,-0.6 0.2,-1 -0.4,-1 -0.6,0 -1.3,0.4 -1.6,1 -0.3,0.6 -0.2,1 0.4,1 0.6,0 1.3,-0.4 1.6,-1zM487,237.4C487,237.2 486.5,237 486,237c-0.6,0 -1,0.5 -1,1.1 0,0.6 0.4,0.8 1,0.4 0.6,-0.3 1,-0.8 1,-1.1zM200.6,234.3c-1.1,-1.1 -1.8,0.6 -1.1,2.5 0.7,1.7 0.8,1.7 1.2,-0 0.2,-1 0.2,-2.1 -0.2,-2.4zM214,235.5c0,-0.8 -0.4,-1.7 -1,-2 -0.6,-0.4 -1,0.5 -1,2 0,1.5 0.4,2.4 1,2 0.6,-0.3 1,-1.2 1,-2zM230,235.3c-0,-2.4 -0.2,-2.5 -1.1,-1 -0.6,1 -0.7,2.2 -0.4,2.8 1,1.7 1.5,1.1 1.5,-1.8zM251.2,234.8c-1.5,-1.5 -2.7,-0.4 -1.8,1.8 0.5,1.3 0.9,1.4 1.8,0.5 0.9,-0.9 0.9,-1.4 -0,-2.4zM288.6,234.3c-1.1,-1.1 -1.8,0.6 -1.1,2.5 0.7,1.7 0.8,1.7 1.2,-0 0.2,-1 0.2,-2.1 -0.2,-2.4zM325,237c0,-0.6 -4.2,-1 -10.5,-1 -8.9,0 -10.6,-0.3 -11.5,-1.8 -0.9,-1.5 -1,-1.4 -1,1L302,238l11.5,0c7,0 11.5,-0.4 11.5,-1zM155,235.5c0,-0.8 -0.4,-1.5 -1,-1.5 -0.6,0 -1,0.7 -1,1.5 0,0.8 0.4,1.5 1,1.5 0.6,0 1,-0.7 1,-1.5zM163.8,235.2C164,234.5 163.5,234 162.6,234 161.7,234 161,234.7 161,235.6c0,1.8 2.2,1.5 2.8,-0.4zM172,236.3c-0,-0.4 -0.4,-1.4 -0.9,-2.1 -0.7,-1.1 -1,-1.1 -1.4,0.2 -0.3,0.8 -0.3,1.8 0,2.1 0.8,0.8 2.3,0.7 2.2,-0.2zM183.6,234.3c-0.3,-0.3 -0.6,0.3 -0.5,1.3 0,1.2 0.3,1.4 0.6,0.6 0.3,-0.7 0.3,-1.6 -0.1,-1.9zM193,235.5c0,-0.8 -0.7,-1.5 -1.5,-1.5 -0.8,0 -1.5,0.7 -1.5,1.5 0,0.8 0.7,1.5 1.5,1.5 0.8,0 1.5,-0.7 1.5,-1.5zM222.3,235.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM242.5,234.9C241.6,233.5 241,233.8 241,235.6c0,0.9 0.5,1.3 1,0.9 0.6,-0.3 0.8,-1 0.4,-1.6zM259.3,234.4c-0.4,-1 -0.9,-1.2 -1.6,-0.6 -1.1,1.1 -0,3.4 1.3,2.6 0.5,-0.3 0.6,-1.2 0.3,-2.1zM272.5,234.9C271.6,233.5 271,233.8 271,235.6c0,0.9 0.5,1.3 1,0.9 0.6,-0.3 0.8,-1 0.4,-1.6zM280.4,234.9c-0.3,-0.5 -1,-0.7 -1.5,-0.4 -0.5,0.3 -0.7,1 -0.4,1.5 0.3,0.5 1,0.7 1.5,0.4 0.5,-0.3 0.7,-1 0.4,-1.5zM163.2,227.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM192.2,227.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM221.2,227.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM251.2,227.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM280.2,227.3c-0.7,-0.3 -1.6,-0.3 -1.9,0.1 -0.3,0.3 0.3,0.6 1.3,0.5 1.2,-0 1.4,-0.3 0.6,-0.6zM486.3,214.5c-0.3,-0.8 -0.8,-1.3 -1.1,-1.1 -0.3,0.3 -0.2,1 0.2,1.5 1,1.6 1.6,1.3 0.9,-0.5zM534.2,213.8c-0.7,-0.7 -1.2,-0.8 -1.2,-0.2 0,1.3 1.2,2.5 1.9,1.9 0.3,-0.3 -0,-1 -0.7,-1.7zM453.3,209.7c-0.3,-3.3 -0.1,-6.2 0.7,-7.6 1.1,-2 1.8,-2.2 7.6,-1.9 4.4,0.2 6.4,-0 6.4,-0.8 -0,-0.8 -1.8,-1 -5.8,-0.6C454.8,199.4 453,197.9 453,191c0,-2.7 0.4,-5.1 1,-5.5 1.9,-1.1 1,-2.5 -1.5,-2.5 -2.2,0 -2.4,0.3 -1.5,1.9 0.6,1.1 1,4.2 1,7 0,4 -0.4,5.3 -2,6.1 -2,1.1 -9.9,0.8 -11.9,-0.4 -0.7,-0.4 -1.1,0 -1.1,1.2 0,1.7 0.7,1.8 6.3,1.5 8.1,-0.5 9.1,0.6 8.5,8.8 -0.3,4.3 -0.1,6 0.8,6 0.9,0 1.1,-1.5 0.7,-5.3zM501.3,209.7c-0.3,-3.3 -0.1,-6.2 0.7,-7.6 1.1,-2 1.8,-2.2 7.6,-1.9 4.4,0.2 6.4,-0 6.4,-0.8 -0,-0.8 -1.8,-1 -5.8,-0.6C502.8,199.4 501,197.9 501,191c0,-2.7 0.4,-5.1 1,-5.5 1.9,-1.1 1,-2.5 -1.5,-2.5 -2.2,0 -2.4,0.3 -1.5,1.9 0.6,1.1 1,4.2 1,7 0,5.7 -1.4,7.1 -7.5,7.1 -2,0 -4.5,-0.5 -5.6,-1C485.3,197.1 485,197.3 485,198.8c0,1.6 0.7,1.8 6.3,1.4 8.1,-0.5 9.1,0.6 8.5,8.8 -0.3,4.3 -0.1,6 0.8,6 0.9,0 1.1,-1.5 0.7,-5.3zM550,213.1c-1.3,-2.5 -1.3,-7.2 -0,-10.6 1,-2.5 1.3,-2.6 7.5,-2.3 4.2,0.2 6.5,-0 6.5,-0.7 -0,-0.7 -2,-0.9 -5.5,-0.6 -7.4,0.6 -9.4,-1.1 -9,-7.6 0.1,-2.6 0.6,-5.5 1,-6.4 0.6,-1.3 0.3,-1.8 -1.2,-1.8 -1.7,0 -1.9,0.6 -1.5,6.7 0.4,5.6 0.1,6.9 -1.4,8 -2.2,1.6 -8.8,1.8 -11.5,0.3C533.3,197.1 533,197.3 533,198.8c0,1.6 0.7,1.8 6.3,1.4 8.1,-0.5 9.1,0.6 8.5,8.8 -0.4,5.3 -0.2,6 1.4,6 1.5,0 1.7,-0.3 0.8,-1.9zM593,209c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,208.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM592.8,199.2C593.1,197.6 592.6,197 591.1,197c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,199.2C603.1,197.4 602.7,197 600.6,197 598.7,197 598,197.5 598,198.8c0,3.9 4.3,4.2 4.8,0.4zM686.8,199.2C686.5,197.4 682,196.1 682,197.9c0,1 2.8,3 4.3,3.1 0.5,0 0.7,-0.8 0.5,-1.7zM675.7,197.3c-1,-0.3 -2.3,-0.2 -3,0 -0.7,0.3 0.1,0.5 1.8,0.5 1.6,-0 2.2,-0.2 1.2,-0.5zM638.8,195c4.1,0 8.3,0.5 9.4,1.1 1.7,0.9 2,0.8 1.7,-0.8C649.5,193.7 648.4,193.5 639.5,193.5c-9.2,0 -10,0.2 -10.3,2 -0.3,1.6 -0.1,1.8 0.9,0.8 0.8,-0.8 4.1,-1.3 8.7,-1.3zM318.1,186.2c7,0.2 12.5,-0 12.3,-0.4C330.1,185.3 323.6,185 315.9,185 302.5,185 302,185.1 302,187.1c0,1.9 0.1,2 1.6,0.4 1.4,-1.4 3.6,-1.6 14.4,-1.3zM593,184c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,185.1C630.4,183.5 628.9,181 626.9,181 625.5,181 625,181.7 625,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,185.1C649.4,183.5 647.9,181 645.9,181 644.5,181 644,181.7 644,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,183.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM438.5,184c0.3,-0.6 0.2,-1 -0.4,-1 -0.6,0 -1.3,0.4 -1.6,1 -0.3,0.6 -0.2,1 0.4,1 0.6,0 1.3,-0.4 1.6,-1zM486.5,184c0.3,-0.6 0.2,-1 -0.4,-1 -0.6,0 -1.3,0.4 -1.6,1 -0.3,0.6 -0.2,1 0.4,1 0.6,0 1.3,-0.4 1.6,-1zM535,183.4C535,183.2 534.5,183 534,183c-0.6,0 -1,0.5 -1,1.1 0,0.6 0.4,0.8 1,0.4 0.6,-0.3 1,-0.8 1,-1.1zM592.8,174.2C593.1,172.6 592.6,172 591.1,172c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,174.2C603.1,172.4 602.7,172 600.6,172 598.7,172 598,172.5 598,173.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,174.2C620.1,172.4 619.7,172 617.6,172 615.7,172 615,172.5 615,173.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,175.4C630.2,173.3 629.3,172 626.9,172 625.5,172 625,172.7 625,174.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,175.4C649.2,173.3 648.3,172 645.9,172 644.5,172 644,172.7 644,174.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,174.2C658.1,172.4 657.7,172 655.6,172 653.7,172 653,172.5 653,173.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,174.2C677.1,172.4 676.7,172 674.6,172 672.7,172 672,172.5 672,173.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,174.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM285,163.4c0,-6.8 -0.3,-8.4 -1.3,-7.6 -0.7,0.6 -2.4,1.2 -3.8,1.4 -2.4,0.3 -2.5,0.7 -2.8,7.6l-0.3,7.3 4,0 4,0 0,-8.6zM168.8,167.2C169.1,165.4 168.7,165 166.6,165 164.7,165 164,165.5 164,166.8c0,3.9 4.3,4.2 4.8,0.4zM177.8,167.2C178.1,165.6 177.6,165 176.1,165c-2.6,0 -3.6,1.7 -2.1,3.6 1.6,2 3.4,1.3 3.8,-1.4zM194.9,169.1C196.8,167.9 195.5,165 193,165 191.7,165 191,165.7 191,166.8c0,3 1.4,3.8 3.9,2.3zM204.8,167.2C205.1,165.4 204.7,165 202.6,165 200.7,165 200,165.5 200,166.8c0,3.9 4.3,4.2 4.8,0.4zM223.8,167.2C224.1,165.4 223.7,165 221.6,165 219.7,165 219,165.5 219,166.8c0,3.9 4.3,4.2 4.8,0.4zM233.8,167.2C234.1,165.4 233.7,165 231.6,165 229.7,165 229,165.5 229,166.8c0,3.9 4.3,4.2 4.8,0.4zM252.8,167.2C253.1,165.4 252.7,165 250.6,165 248.7,165 248,165.5 248,166.8c0,3.9 4.3,4.2 4.8,0.4zM261.8,167.2C262.1,165.4 261.7,165 259.6,165 257.7,165 257,165.5 257,166.8c0,3.9 4.3,4.2 4.8,0.4zM593,159c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,160.1C630.4,158.5 628.9,156 626.9,156 625.5,156 625,156.7 625,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,160.1C649.4,158.5 647.9,156 645.9,156 644.5,156 644,156.7 644,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,158.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM438.5,157.1C438.2,156.5 437.4,156 436.8,156c-0.7,0 -0.6,0.6 0.2,1.5 1.4,1.7 2.6,1.3 1.5,-0.5zM454.1,156.9c-0.2,-0.8 -0.6,-3.7 -0.8,-6.5 -0.5,-6.6 0.8,-7.7 8.7,-7.3 4.3,0.2 6,-0 6,-0.9 -0,-0.9 -2,-1.3 -6.9,-1.3 -5.4,0 -7,-0.4 -7.5,-1.6 -1,-2.5 -0.7,-9.4 0.4,-11.5 0.9,-1.7 0.7,-1.9 -2.1,-1.9 -2.9,0 -3,0.1 -1.5,1.6 1.2,1.2 1.5,3.1 1.3,7.3L451.5,140.5l-7.3,0c-5.9,0 -7.3,0.3 -7.3,1.6 0,1.3 1,1.5 6,1.1 7.8,-0.6 9,0.5 9,7.4 0,2.9 -0.5,5.6 -1,5.9 -1.5,0.9 -0.1,2.7 1.9,2.2 0.9,-0.2 1.5,-1 1.2,-1.8zM486.2,156.8c-0.7,-0.7 -1.2,-0.8 -1.2,-0.2 0,1.3 1.2,2.5 1.9,1.9 0.3,-0.3 -0,-1 -0.7,-1.7zM502.1,156.9c-1.1,-3.7 -1.1,-9.9 -0.1,-11.9 1.1,-2 1.8,-2.2 7.6,-1.9 4.6,0.2 6.4,-0 6.4,-0.9 -0,-0.9 -1.9,-1.3 -6.3,-1.3 -3.6,0 -6.8,-0.5 -7.5,-1.2 -1.4,-1.4 -1.6,-10.4 -0.2,-11.3 1.9,-1.2 1,-2.5 -1.6,-2.5 -2.1,0 -2.4,0.3 -1.4,1.4 0.7,0.8 1.1,3.8 0.9,7.3L499.5,140.5l-7.3,0c-5.9,0 -7.3,0.3 -7.3,1.6 0,1.3 1,1.5 6,1.1 8.4,-0.6 9.4,0.4 8.7,9.1 -0.4,5.9 -0.3,6.8 1.1,6.5 0.9,-0.2 1.4,-1 1.2,-1.8zM534.2,156.8c-0.7,-0.7 -1.2,-0.8 -1.2,-0.2 0,1.3 1.2,2.5 1.9,1.9 0.3,-0.3 -0,-1 -0.7,-1.7zM550.1,156.9c-1.1,-3.5 -1.1,-9.9 -0.1,-11.9 1.1,-2 1.8,-2.2 7.6,-1.9 4.6,0.2 6.4,-0 6.4,-0.9 -0,-0.9 -1.9,-1.3 -6.4,-1.3 -3.9,0 -6.8,-0.5 -7.4,-1.3 -1.4,-1.7 -0.9,-10.2 0.7,-12.2C552.1,126.2 551.9,126 549,126c-2.7,0 -3,0.2 -2.1,1.4 0.7,0.8 1.1,3.8 0.9,7.3L547.5,140.5l-7.3,0c-5.9,0 -7.3,0.3 -7.3,1.5 0,1.3 1.1,1.5 6.6,1.1 8,-0.5 8.5,0 8.3,8.3 -0.2,7.6 -0.2,7.8 1.3,7.2 0.7,-0.3 1.1,-1.1 0.8,-1.8zM592.8,149.2C593.1,147.6 592.6,147 591.1,147c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,149.2C603.1,147.4 602.7,147 600.6,147 598.7,147 598,147.5 598,148.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,149.2C620.1,147.4 619.7,147 617.6,147 615.7,147 615,147.5 615,148.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,150.4C630.2,148.3 629.3,147 626.9,147 625.5,147 625,147.7 625,149.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,150.4C649.2,148.3 648.3,147 645.9,147 644.5,147 644,147.7 644,149.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,149.2C658.1,147.4 657.7,147 655.6,147 653.7,147 653,147.5 653,148.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,149.2C677.1,147.4 676.7,147 674.6,147 672.7,147 672,147.5 672,148.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,149.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM438.5,127c0.3,-0.6 0.2,-1 -0.4,-1 -0.6,0 -1.3,0.4 -1.6,1 -0.3,0.6 -0.2,1 0.4,1 0.6,0 1.3,-0.4 1.6,-1zM468,127c0,-0.6 -0.5,-1 -1.1,-1 -0.6,0 -0.8,0.4 -0.4,1 0.3,0.6 0.8,1 1.1,1 0.2,0 0.4,-0.4 0.4,-1zM487,126.4C487,126.2 486.5,126 486,126c-0.6,0 -1,0.5 -1,1.1 0,0.6 0.4,0.8 1,0.4 0.6,-0.3 1,-0.8 1,-1.1zM516,127c0,-0.6 -0.5,-1 -1.1,-1 -0.6,0 -0.8,0.4 -0.4,1 0.3,0.6 0.8,1 1.1,1 0.2,0 0.4,-0.4 0.4,-1zM535,126.4C535,126.2 534.5,126 534,126c-0.6,0 -1,0.5 -1,1.1 0,0.6 0.4,0.8 1,0.4 0.6,-0.3 1,-0.8 1,-1.1zM476.2,102c-0.3,-3.2 -0,-5.5 0.8,-6.5 1,-1.2 1,-1.8 0,-3 -0.8,-1 -1.1,-3.3 -0.8,-6.5C476.6,82.3 476.4,81 475.4,81c-1,0 -1.2,1.2 -0.7,4.8 0.4,3.7 0.2,5.2 -1.1,6.5 -1.6,1.6 -1.6,1.8 0,3.4 1.3,1.3 1.6,2.8 1.1,6.5 -0.4,3.6 -0.2,4.8 0.7,4.8 1,0 1.2,-1.3 0.8,-5zM533.2,101.5c-0.4,-4.4 -0.1,-5.6 1.1,-6.1 1.5,-0.6 1.4,-0.8 -0.1,-2.8 -1.6,-2.1 -1.7,-2.2 -3.5,-0.4 -1.7,1.7 -1.7,2 -0.2,3.5 1.3,1.3 1.5,2.8 1.1,6.5 -0.4,3.5 -0.2,4.8 0.7,4.8 0.9,0 1.2,-1.4 0.8,-5.5zM487.8,93c-0.2,-0.6 -0.9,-0.6 -1.8,0 -1.3,0.9 -1.3,1.1 0,1.9 1.5,1 2.5,-0 1.8,-1.9zM544.8,93c-0.2,-0.6 -0.9,-0.6 -1.8,0 -1.3,0.9 -1.3,1.1 0,1.9 1.5,1 2.5,-0 1.8,-1.9zM466,94c0,-0.6 -0.7,-1 -1.6,-1 -0.9,0 -1.3,0.4 -0.9,1 0.3,0.6 1,1 1.6,1C465.6,95 466,94.6 466,94zM523,94.1c0,-0.5 -0.7,-1.2 -1.5,-1.5 -0.9,-0.4 -1.5,-0 -1.5,0.9C520,94.3 520.7,95 521.5,95c0.8,0 1.5,-0.4 1.5,-0.9zM533.3,84.8C533.8,81.8 533.6,81 532.3,81c-1.1,0 -1.4,0.6 -1,2.3 0.3,1.2 0.6,3.1 0.6,4.2 0,2.9 0.7,1.6 1.3,-2.7z"
+        android:fillColor="#f7f0d2"/>
+    <path
+        android:pathData="m319.9,403.6c-0.2,-0.2 -10.8,-0.9 -23.4,-1.5C264.4,400.5 211.5,396 190,392.9 176.4,391 169.6,390.1 164,389.5 146.6,387.5 89.2,377.2 58.5,370.5 48,368.2 13.9,359.5 10.5,358.2 8.9,357.6 5.8,356.8 3.8,356.5 0.2,355.9 0,355.7 0,352.3 0,350.3 0.4,347.3 0.9,345.6 1.4,343.9 2.8,338.9 3.9,334.5 6.2,325.8 14.1,308.7 19.2,301.2 33.4,280.2 53.3,263.1 81,248c6.3,-3.5 12.4,-7.1 13.5,-8.1 1.1,-1 4.1,-2.3 6.7,-2.9 2.6,-0.6 8,-2.3 12,-3.9 4,-1.6 11.8,-4.3 17.3,-6.1 5.5,-1.8 10.6,-3.7 11.3,-4.3 0.7,-0.5 1.3,-3 1.3,-5.4 0,-3.8 -0.4,-4.5 -2.5,-5.4 -3,-1.2 -3.1,-2.6 -0.4,-6.5 1.1,-1.6 4.3,-7.4 7,-12.7L152,183l0,-13c0,-14.4 0.5,-13.4 -7,-14.3 -1.5,-0.2 -2.4,-0.9 -2.3,-1.8 0.3,-3.2 14.2,-31.4 15.9,-32.3 1.2,-0.7 15.9,-0.8 42.4,-0.3 22.3,0.4 41.4,0.4 42.3,0 2.4,-0.9 2.1,-5.7 -0.4,-7.2C239.5,112 241.8,111 250.1,111c6.6,0 7.9,0.3 7.9,1.6 0,0.9 -0.9,1.8 -2.1,2.1 -1.6,0.4 -2,1.2 -1.8,3.7 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 6.9,0.7 7.2,1 0.3,0.3 3.3,6.6 6.7,14 3.4,7.4 6.6,13.9 7,14.4 1.7,1.9 0.9,3.5 -2.6,5l-3.5,1.5 0.3,7.3 0.3,7.3 4.8,0.3 4.8,0.3 0,-83.5 0,-83.5 -2.3,-0.7C281.1,4.6 280,3.2 280.7,1.3 281.1,0.2 290.9,0 334.6,0 387.5,0 388,0 388,2c0,1.2 -1,2.5 -2.5,3.2l-2.5,1.1 0.3,90.4 0.3,90.4 5.5,2.2c3,1.2 8.2,3.9 11.5,5.9l6,3.7 9,-0.7 9,-0.7 0,-39.5 0,-39.5 -4.8,-0.3c-6,-0.4 -6.6,-1.8 -3.4,-7.4 1.4,-2.4 3.7,-7.8 5.1,-12 2.5,-7.4 2.6,-8.5 2.4,-27L423.5,52.6 421,52c-1.8,-0.4 -2.5,-1.2 -2.5,-3l0,-2.5 12.6,-0.3c10.7,-0.2 12.8,-0 14,1.4 1.2,1.4 1,1.9 -1.4,3.9 -2.4,1.9 -2.7,2.8 -2.5,6.6L441.5,62.5l63.4,0.7c34.8,0.4 63.7,1 64.2,1.5 0.5,0.5 3.3,7.7 6.4,16.1 3.1,8.4 6.2,16.8 7,18.6l1.4,3.3 41.7,0.7c31.4,0.5 42,0.4 43.1,-0.5C670.6,101.2 670.3,98.2 668,97c-1.1,-0.6 -2,-1.7 -2,-2.6 0,-1.2 1.4,-1.5 8.2,-1.2 8.3,0.3 11.6,2 6.3,3.4 -2.2,0.6 -2.6,1.1 -2.3,3.8 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 7.1,0.9 7.7,1.5 0.5,0.6 3.3,6.2 6.1,12.5 2.9,6.3 6.1,13 7.3,14.9 2,3.3 2,3.4 0.2,4.8C705.5,138.4 703.8,139 702.8,139 701.1,139 701,141.1 701,178.4l0,39.4 3.3,0.6c1.8,0.3 5.4,1.9 8.1,3.5l4.9,2.9 5.4,-2.5c4.6,-2.1 6.6,-2.4 12.7,-2.1 6.2,0.3 7.9,0.8 11.1,3.2 2.1,1.6 5.2,4.9 6.9,7.4 4.5,6.6 6.3,8.2 9.1,8.2 4.5,0 13.6,4.1 17.6,7.9C783.6,250.3 784,251.2 784,255.6 784,261.6 782.8,263 777.8,263c-2.2,0 -3.8,0.5 -3.8,1.1 0,0.6 4.4,5.7 9.8,11.3 13.7,14.2 24.3,30.5 31,47.5 3.4,8.6 7.2,24.5 7.2,30 0,4.8 -0.1,5 -2.8,5 -1.5,0 -5.7,0.7 -9.3,1.5 -94.1,21 -208,36.7 -301.5,41.5 -10.4,0.5 -25.1,1.4 -32.6,2 -13,1 -155.1,1.5 -156.1,0.6zM96,315.5c-0.3,-0.4 -3.5,-0.8 -7.3,-0.9 -6.1,-0.1 -7.6,0.2 -6.3,1.4 0.7,0.7 14.1,0.2 13.6,-0.6zM114.9,315.4c0.2,-0.2 -2,-0.3 -5,-0.3 -4.1,0.1 -4.8,0.3 -2.9,0.9 2.2,0.7 6.8,0.3 7.9,-0.6zM119.5,316c0.3,-0.6 -0.4,-1 -1.7,-1 -1.9,0 -2,0.2 -0.8,1 1.9,1.2 1.8,1.2 2.5,0zM128.9,315.4C129.1,315.2 127.7,315 125.6,315c-2.2,0 -3.5,0.4 -3.1,1 0.5,0.9 5.2,0.4 6.4,-0.6zM142.3,315C141.9,314.7 139,314.6 136,314.9l-5.5,0.5 5,0.6c5.3,0.6 8.2,0.2 6.8,-0.9zM169,315.4c0,-1.2 -0.6,-1.5 -2.3,-1 -1.2,0.3 -4.7,0.7 -7.8,0.8L153.5,315.3 160,316c3.6,0.4 7.1,0.7 7.8,0.8 0.7,0.1 1.3,-0.6 1.3,-1.4zM150.3,315.3c-1.2,-0.2 -3.3,-0.2 -4.5,0 -1.2,0.2 -0.2,0.4 2.3,0.4 2.5,0 3.5,-0.2 2.3,-0.4zM191.2,294.5 L191.5,277.5l36.5,0 36.5,0 0.5,17.5c0.7,24.1 2.5,22.8 2.5,-1.8l0,-18.8 -39.5,0 -39.5,0 -0.3,18c-0.2,9.9 -0,18.6 0.3,19.4 1.5,4 2.5,-2 2.7,-17.4zM168.7,309c-0.2,-0.8 -1.2,-1.4 -2.3,-1.3 -1.1,0.1 -6.9,0.2 -13,0.2 -6.1,-0 -11.9,-0 -13,0 -1.1,0 -9.8,0.1 -19.3,0.1 -10.1,0 -17.3,0.4 -17.3,1 0,0.6 9.5,1.1 23.3,1.2 41.1,0.5 41.8,0.5 41.5,-1.2zM97.8,308.8C97.5,308.1 96.8,307.5 96.2,307.6 95.5,307.7 92.1,307.8 88.5,307.9c-9.5,0.2 -8.1,2.2 1.6,2.2 6,0 8,-0.3 7.7,-1.3zM103,309c0,-0.6 -0.9,-1 -2,-1 -1.1,0 -2,0.4 -2,1 0,0.6 0.9,1 2,1 1.1,0 2,-0.4 2,-1zM171.6,297.1c0.5,-0.5 0.7,-5 0.4,-10.3l-0.5,-9.3 -7.5,-0.3C151.7,276.7 152,276.5 152,287.4c0,5.1 0.3,9.6 0.7,10 1,1 17.8,0.8 18.9,-0.3zM155,292.5c0,-3.1 2.6,-4.3 4.7,-2.2 2.1,2.1 0.9,4.7 -2.2,4.7C155.5,295 155,294.5 155,292.5zM164.3,293.4c-0.3,-0.9 0.1,-2.3 1,-3.2 1.5,-1.5 1.8,-1.5 3.3,0C170.7,292.3 169.7,295 167,295c-1.1,0 -2.3,-0.7 -2.7,-1.6zM155.4,284.5c-0.8,-2.1 0.3,-4.5 2,-4.5 0.8,0 2,0.7 2.7,1.5 1,1.2 1,1.8 0,3 -0.7,0.8 -1.9,1.5 -2.7,1.5 -0.8,0 -1.7,-0.7 -2,-1.5zM164.4,284.6c-1,-2.6 0.4,-4.7 2.9,-4.4 1.7,0.2 2.3,1 2.3,2.8 0,1.8 -0.6,2.6 -2.3,2.8 -1.4,0.2 -2.5,-0.3 -2.9,-1.3zM113.9,295.2c1.1,-0.1 1,-0.5 -0.4,-1.5 -2.8,-2.1 -1.6,-5.2 1.9,-5.2 3.4,0 4.5,2.4 2,4.8 -1.4,1.4 -1.4,1.6 0.2,2 3.5,1 12.8,0.2 12.7,-1.1 -0.3,-3.3 -0.5,-3.5 -2.4,-1.8 -2.1,1.9 -4.7,1.5 -5.7,-1 -1,-2.7 1.3,-4 4.6,-2.8 3.7,1.4 4.1,0.4 3.3,-7.1C129.8,277 129.4,276 127.9,276 126.8,276 126,276.5 126,277c0,0.6 0.4,1 0.9,1 1.7,0 2.2,3.4 0.6,4.9 -1.2,1.2 -1.9,1.3 -3.3,0.4 -1.8,-1.2 -2,-2.6 -0.7,-5.6 0.6,-1.5 0.1,-1.8 -3,-1.8 -3.1,0 -3.6,0.3 -3,1.8 1.7,4.2 -0.4,7.3 -4,5.9 -1.4,-0.5 -1.6,-1.4 -1.1,-4.2 0.6,-3.4 0.6,-3.5 -2.5,-3.5 -2.6,0 -3,0.3 -2.4,1.8 1.2,3 1.1,4.4 -0.8,5.6 -1.3,0.9 -2.2,0.8 -3.8,-0.1 -1.7,-1 -2.1,-1 -2.6,0.2 -1.3,3.4 0,5.1 3.8,4.8 2.6,-0.2 3.8,0.1 4.2,1.4 1.3,3.4 -3.5,5.9 -6.2,3.3 -1.4,-1.4 -2.7,-0.5 -1.9,1.4 0.5,1.2 7,1.6 13.7,0.9zM565.3,289.3c-5.1,-0.2 -13.4,-0.2 -18.5,0 -5.1,0.2 -0.9,0.3 9.3,0.3 10.2,0 14.3,-0.1 9.3,-0.3zM543.2,261.9c-0.2,-17.4 0,-24.5 0.9,-25.5 1.7,-2 23.2,-2 24.8,-0 0.8,1 1.1,8.3 0.9,25.5 -0.2,18.3 0,24.1 0.9,24.1 2,-0 2.4,-5.5 2.1,-31L572.5,230.5l-16.5,0 -16.5,0 -0.3,22.5c-0.4,26.3 0.2,33 2.6,33 1.5,0 1.7,-2.1 1.4,-24.1zM104,276.9c0,-1.2 -2.7,-1.1 -3.5,0.1 -1.1,1.7 0.5,3.2 2.1,1.9 0.8,-0.6 1.4,-1.6 1.4,-2zM469.8,254.1c0.2,-11.4 -0.1,-16.8 -0.9,-17.8 -0.9,-1.1 -4.4,-1.4 -17.3,-1.1L435.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L469.5,270.5 469.8,254.1zM439.2,261.3 L439.5,255.5l5,0 5,0 0,5.5 0,5.5 -5.3,0.3 -5.3,0.3 0.3,-5.8zM455.7,259.9c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L455.5,255.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM439.6,250.2C439.3,249.9 439,247.2 439,244.3l0,-5.4 5.3,0.3 5.3,0.3 0,5.5 0,5.5 -4.7,0.1c-2.6,0.1 -4.9,-0.1 -5.3,-0.4zM455.4,249.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L455.5,239.5l5.5,0 5.5,0 0.3,4.9c0.2,3.2 -0.1,5.2 -1,5.7 -2.2,1.4 -9.8,1 -10.4,-0.5zM517.8,255c0.2,-8.5 0,-16.5 -0.3,-17.8 -0.6,-2.3 -0.6,-2.3 -17.3,-2L483.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L517.5,270.5 517.8,255zM487.4,265.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L487.5,255.5l5,0 5,0 0.3,5.8 0.3,5.8 -5.1,0c-3.4,0 -5.3,-0.5 -5.6,-1.4zM503.4,265.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L503.5,255.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM487.6,250.3C487.3,249.9 487,247.3 487,244.3L487,239l5.4,0 5.4,0 0.4,4.8c0.2,2.6 0,5.3 -0.5,5.9 -0.9,1.2 -9.1,1.7 -10.2,0.6zM503.4,249.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L503.5,239.5l5.5,0 5.5,0 0.3,4.9c0.2,3.2 -0.1,5.2 -1,5.7 -2.2,1.4 -9.8,1 -10.4,-0.5zM336.6,263.3c-5.5,-7 -10.8,-19.3 -11,-25.8 -0.1,-1.8 -0.9,-2 -10.5,-2.3 -6.8,-0.2 -10.7,-0.7 -11.2,-1.5 -0.4,-0.7 -0.8,-5.8 -0.8,-11.5 -0,-6 -0.4,-10.3 -1,-10.3 -0.6,0 -1,10.7 -1,28.5l-0,28.5 20,0 20,0 -4.5,-5.8zM171.8,253.6c1.5,-0.9 1.7,-17.2 0.3,-21C170.5,228.5 167,226 162.7,226 154.3,226 152,229.8 152,243.9c0,5.9 0.4,10.1 1,10.3 2,0.7 17.5,0.2 18.7,-0.5zM155.4,250.5c-0.8,-2.1 0.3,-4.5 2,-4.5 2,0 3.8,2.5 3.1,4.4 -0.8,2 -4.3,2.1 -5,0.1zM164.7,251.3c-1.3,-1.3 -0.7,-4.1 1,-4.8 0.9,-0.4 2.3,-0 3,0.7 0.7,0.7 1.1,2.1 0.7,3 -0.6,1.7 -3.5,2.3 -4.8,1zM155.4,241.5c-0.8,-2.1 0.3,-4.5 2,-4.5 2,0 3.8,2.5 3.1,4.4 -0.8,2 -4.3,2.1 -5,0.1zM164.4,241.5c-0.9,-2.3 0.4,-4.5 2.5,-4.5 2,0 3.7,3.2 2.6,5 -1,1.5 -4.5,1.2 -5.1,-0.5zM156.2,231.8c0.2,-1.4 1.1,-2.4 2.6,-2.6 2.5,-0.4 3,1.6 1,3.6 -2,2 -4,1.4 -3.6,-1zM164.6,232.4c-1.2,-1.2 -1.4,-2 -0.6,-2.8 1.3,-1.3 4.5,0.4 4.5,2.4 0,2 -2.1,2.2 -3.9,0.4zM200.8,254.2c0.9,-0.1 1.3,-3.1 1.3,-11.1 0,-10.6 -0.1,-11 -2.9,-14C196.7,226.5 195.4,226 191.8,226c-3.6,0 -4.9,0.6 -7.3,3 -2.8,2.9 -2.9,3.5 -3.2,13.2 -0.1,5.6 0.1,10.6 0.6,11.2 0.8,0.9 14.1,1.5 18.8,0.8zM184.3,250.4c-0.3,-0.9 0.1,-2.3 1,-3.2 1.5,-1.5 1.8,-1.5 3.3,0C190.7,249.3 189.7,252 187,252c-1.1,0 -2.3,-0.7 -2.7,-1.6zM194,250.5c-1.1,-1.3 -1.1,-1.8 0.2,-3.1 2,-2 5,-0.8 4.6,2 -0.4,2.6 -3,3.3 -4.8,1.1zM184.4,241.5c-0.3,-0.9 0,-2.3 0.8,-3.1 2,-2 5,-0.7 4.6,2 -0.4,2.7 -4.5,3.5 -5.4,1.1zM193.6,241.4c-0.8,-2.2 1.7,-4.9 3.9,-4 1,0.4 1.5,1.5 1.3,2.9 -0.4,2.8 -4.3,3.6 -5.2,1.1zM185,232.8c0,-0.8 0.5,-1.9 1.2,-2.6 2,-2 4,-1.4 3.6,1 -0.4,2.5 -4.8,3.9 -4.8,1.5zM194,232.5c-0.9,-1.1 -1,-1.8 -0.2,-2.6 1.6,-1.6 4.2,-0.2 4.2,2.1 0,2.4 -2.2,2.7 -4,0.5zM230.3,254c0.4,-0 0.8,-5 0.8,-11.1 0,-10.9 -0,-11.1 -2.9,-14C225.8,226.6 224.3,226 221,226c-3.3,0 -4.8,0.6 -7.1,2.9 -2.9,2.9 -2.9,3.1 -2.9,13.8 0,6 0.2,11.1 0.5,11.4 0.4,0.4 8.2,0.3 18.8,-0.1zM214.2,249.3c0.2,-2.1 0.9,-2.8 2.3,-2.8 3.1,0 2.8,4.9 -0.3,5.3 -2,0.3 -2.3,-0 -2,-2.5zM223.7,251.4c-1,-1 -0.9,-4.1 0.2,-4.8 1.8,-1.1 4.2,0.7 3.9,2.8 -0.3,2.1 -2.8,3.3 -4.1,2zM214.2,240.3c0.2,-2.1 0.9,-2.8 2.3,-2.8 3.1,0 2.8,4.9 -0.3,5.3 -2,0.3 -2.3,-0 -2,-2.5zM223.2,241.7c-0.9,-1 -0.8,-1.8 0.2,-3.2 1.8,-2.5 4.9,-1.3 4.4,1.7 -0.4,2.6 -3,3.5 -4.6,1.5zM215.2,231.8c0.2,-1.3 1.1,-2.5 2.2,-2.7 1.4,-0.3 1.8,0.2 1.5,2 -0.2,1.3 -1.1,2.5 -2.2,2.7 -1.4,0.3 -1.8,-0.2 -1.5,-2zM223,232c-0.9,-1.6 -0.7,-2.1 0.6,-2.7 1.8,-0.7 4.8,2.3 3.8,3.8 -0.9,1.5 -3.3,0.9 -4.4,-1.2zM260,253.4c0.8,-0.8 1,-4.5 0.8,-11.2 -0.3,-9.5 -0.5,-10.2 -3.3,-13.1 -4.9,-5.1 -13.2,-3.8 -16.4,2.6 -1.4,2.7 -1.5,22 -0.1,22.5 2.6,0.9 18,0.2 19,-0.8zM243.7,251.3c-1.3,-1.3 -0.7,-4.1 1,-4.8 0.9,-0.4 2.3,-0 3,0.7 0.7,0.7 1.1,2.1 0.7,3 -0.6,1.7 -3.5,2.3 -4.8,1zM252.7,251.3c-1.3,-1.3 -0.7,-4.4 1,-5 1.9,-0.7 4.5,2.2 3.7,4.3 -0.6,1.4 -3.5,1.9 -4.7,0.7zM253.1,242.7c-1.6,-1.6 -1.4,-4.7 0.5,-5.4 2.1,-0.8 4.7,1.9 3.9,3.9 -0.8,2.1 -3,2.9 -4.3,1.5zM243.4,241.5c-0.8,-2.1 0.3,-4.5 2,-4.5 2,0 4,2.7 3.3,4.5 -0.7,2 -4.5,2 -5.3,0zM244,232.1c0,-2.2 2.9,-3.6 4.3,-2.2 0.7,0.7 0.6,1.5 -0.3,2.5C246.3,234.6 244,234.4 244,232.1zM252.7,233.3C251.5,232.1 252,229 253.4,229c1.8,0 4,2.7 3.1,4 -0.7,1.2 -2.9,1.4 -3.9,0.4zM288.8,254.2c1.9,-0.2 1.7,-19.4 -0.3,-23.2 -3,-5.8 -10.4,-6.8 -15.6,-2.1 -3.2,2.8 -3.2,2.9 -3.4,13.5 -0.2,7.9 0.1,10.9 1.1,11.4 1.1,0.6 14.3,0.9 18.2,0.4zM272.6,250.4c-0.8,-2.2 1.7,-4.9 3.9,-4 1,0.4 1.5,1.5 1.3,2.9 -0.4,2.8 -4.3,3.6 -5.2,1.1zM281.4,250.5c-0.3,-0.9 0,-2.3 0.8,-3.1 2,-2 5,-0.7 4.6,2 -0.4,2.7 -4.5,3.5 -5.4,1.1zM272.6,241.4c-0.8,-2.2 1.7,-4.9 3.9,-4 1,0.4 1.5,1.5 1.3,2.9 -0.4,2.8 -4.3,3.6 -5.2,1.1zM281.6,241.4c-0.8,-2.2 1.7,-4.9 3.9,-4 1,0.4 1.5,1.5 1.3,2.9 -0.4,2.8 -4.3,3.6 -5.2,1.1zM273.5,233c-0.8,-1.3 1.3,-4 3.1,-4 1.7,0 1.8,2.2 0.2,3.8 -1.5,1.5 -2.5,1.5 -3.3,0.2zM282,232.5C280.7,230.9 281.4,229 283.5,229c1.6,0 3.7,3.4 2.8,4.4 -1.1,1.1 -3,0.7 -4.3,-0.8zM630.5,198.2c0.5,-2.2 0.9,-2.3 8.8,-2L647.5,196.5l0.3,7.5c0.2,4.1 0.7,7.9 1.3,8.5 0.7,0.7 0.9,-2.4 0.7,-9L649.5,193.5 639.3,193.2 629,192.9l0.2,13.8c0.2,11.9 0.2,12.4 0.5,3.8 0.2,-5.5 0.5,-11 0.8,-12.3zM469.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -27.2,-1.4 -32.9,-0.9 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L469.5,216.5l0.3,-16.4zM440,213.2C439.5,213 439,210.4 439,207.4L439,202l5.5,0 5.5,0 0,5.4 0,5.4 -4.5,0.4c-2.5,0.2 -4.9,0.2 -5.5,0zM459.7,213.2 L455,212.9 455,207.4 455,202 461,202 467,202 467,207.4c0,6.1 -0.2,6.3 -7.3,5.8zM438.7,195.8c-0.3,-0.7 -0.2,-3.3 0.1,-5.8l0.6,-4.5 5,0 5,0 0.3,5.8 0.3,5.8 -5.4,0c-3.4,0 -5.6,-0.5 -5.9,-1.3zM455.4,195.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8 0.3,-4.2 0.5,-4.4 3.7,-4.7 1.9,-0.2 4.5,-0.1 5.8,0.3 2.2,0.6 2.4,1 2.1,5.8L466.5,196.5l-5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM517.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -26.4,-1.4 -32.9,-0.8 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L517.5,216.5l0.3,-16.4zM488,213.2C487.5,213 487,210.4 487,207.4L487,202l5.5,0 5.5,0 0,5.4 0,5.4 -4.5,0.4c-2.5,0.2 -4.9,0.2 -5.5,0zM507.7,213.2 L503,212.9 503,207.4 503,202 509,202 515,202 515,207.4c0,6.1 -0.2,6.3 -7.3,5.8zM487.4,195.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L487.5,185.5l5,0 5,0 0.6,4.5c0.3,2.5 0.4,5.1 0.1,5.8 -0.7,1.8 -10.2,1.7 -10.8,-0.1zM503.4,195.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8 0.3,-4.2 0.5,-4.4 3.7,-4.7 1.9,-0.2 4.5,-0.1 5.8,0.3 2.2,0.6 2.4,1 2.1,5.8L514.5,196.5l-5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM565.8,200.1c0.2,-9 -0.1,-16.8 -0.5,-17.2 -1.1,-1.1 -31.4,-1.5 -33,-0.5 -0.9,0.6 -1.3,5.1 -1.3,17.1 0,9 0.3,16.6 0.7,17 0.4,0.4 8.1,0.6 17.3,0.4L565.5,216.5 565.8,200.1zM536.1,213.2C535.5,213 535,210.5 535,207.4L535,202l5.5,0c3,0 5.5,0.3 5.6,0.8 0,0.4 0.2,2.8 0.3,5.3l0.2,4.5 -4.6,0.5c-2.6,0.3 -5.1,0.4 -5.8,0.2zM556,213 L551.5,212.5l0,-5 0,-5 5.8,-0.3 5.8,-0.3 0,5.4c0,6.1 -0.4,6.5 -7,5.7zM530.9,195.1c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L535.5,185.5l4.3,-0.3c5.6,-0.4 6.8,0.7 6.7,6.5L546.5,196.5l-5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM546.9,195.1c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L551.5,185.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM331.6,185.3c-0.4,-1 -3.7,-1.3 -15.3,-1.1L301.5,184.5l-0.3,8.9c-0.2,5.2 0.1,9.3 0.8,9.9 0.7,0.7 1,-1.3 1,-6.5 0,-5.3 0.4,-7.9 1.4,-8.7 0.9,-0.8 5.4,-1.1 13.3,-0.9L329.5,187.5 329.8,198c0.1,5.8 0.6,11.2 1,12 0.8,1.7 1.6,-22.6 0.8,-24.7zM593,209c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,208.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM592.8,199.2C593.1,197.6 592.6,197 591.1,197c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,199.2C603.1,197.4 602.7,197 600.6,197 598.7,197 598,197.5 598,198.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,199.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.7,-0.2 -2.3,0.2 -2.3,1.6 0,1 0.3,2.2 0.7,2.6 1.3,1.3 3.8,0.1 3.8,-1.9zM677,198.5c0,-0.9 -0.9,-1.5 -2.5,-1.5 -1.6,0 -2.5,0.6 -2.5,1.5 0,0.9 0.9,1.5 2.5,1.5 1.6,0 2.5,-0.6 2.5,-1.5zM593,184c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,185.1C630.4,183.5 628.9,181 626.9,181 625.5,181 625,181.7 625,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,185.1C649.4,183.5 647.9,181 645.9,181 644.5,181 644,181.7 644,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,183.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,174.2C593.1,172.6 592.6,172 591.1,172c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,174.2C603.1,172.4 602.7,172 600.6,172 598.7,172 598,172.5 598,173.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,174.2C620.1,172.4 619.7,172 617.6,172 615.7,172 615,172.5 615,173.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,175.4C630.2,173.3 629.3,172 626.9,172 625.5,172 625,172.7 625,174.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,175.4C649.2,173.3 648.3,172 645.9,172 644.5,172 644,172.7 644,174.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,174.2C658.1,172.4 657.7,172 655.6,172 653.7,172 653,172.5 653,173.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,174.2C677.1,172.4 676.7,172 674.6,172 672.7,172 672,172.5 672,173.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,174.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM168.8,167.2C169.1,165.4 168.7,165 166.6,165 164.7,165 164,165.5 164,166.8c0,3.9 4.3,4.2 4.8,0.4zM177.8,167.2C178.1,165.6 177.6,165 176.1,165c-2.6,0 -3.6,1.7 -2.1,3.6 1.6,2 3.4,1.3 3.8,-1.4zM194.9,169.1C196.8,167.9 195.5,165 193,165 191.7,165 191,165.7 191,166.8c0,3 1.4,3.8 3.9,2.3zM204.8,167.2C205.1,165.4 204.7,165 202.6,165 200.7,165 200,165.5 200,166.8c0,3.9 4.3,4.2 4.8,0.4zM223.8,167.2C224.1,165.4 223.7,165 221.6,165 219.7,165 219,165.5 219,166.8c0,3.9 4.3,4.2 4.8,0.4zM233.8,167.2C234.1,165.4 233.7,165 231.6,165 229.7,165 229,165.5 229,166.8c0,3.9 4.3,4.2 4.8,0.4zM252.8,167.2C253.1,165.4 252.7,165 250.6,165 248.7,165 248,165.5 248,166.8c0,3.9 4.3,4.2 4.8,0.4zM261.8,167.2C262.1,165.4 261.7,165 259.6,165 257.7,165 257,165.5 257,166.8c0,3.9 4.3,4.2 4.8,0.4zM468.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM440,156.2C439.5,156 439,153.4 439,150.4L439,145l5.5,0 5.5,0 0,5.4 0,5.4 -4.5,0.4c-2.5,0.2 -4.9,0.2 -5.5,0zM455,150.7l0,-5.4 4.8,-0.4c7,-0.6 7.4,-0.3 7,5.6L466.5,155.5l-5.8,0.3 -5.8,0.3 0,-5.4zM439.3,138.6c-0.5,-0.8 -0.7,-3.6 -0.5,-6.1l0.4,-4.6 5.1,0.3 5.1,0.3 0,5.5 0,5.5 -4.7,0.3c-3.4,0.2 -4.9,-0.1 -5.5,-1.2zM455.4,138.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L455.5,128.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM516.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM488,156.2C487.5,156 487,153.4 487,150.4L487,145l5.5,0 5.5,0 0,5.4 0,5.4 -4.5,0.4c-2.5,0.2 -4.9,0.2 -5.5,0zM503,150.6l0,-5.4 4.8,-0.4c6.9,-0.6 7.3,-0.3 7.3,5.8l0,5.4 -6,0 -6,0 0,-5.4zM487.4,138.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L487.5,128.5l5,0 5,0 0.6,4.5c0.3,2.5 0.2,5.1 -0.4,5.8 -1.4,1.7 -9.7,1.6 -10.3,-0.1zM503.4,138.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L503.5,128.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM564.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM536.1,156.2C535.5,156 535,153.5 535,150.4L535,145l5.5,0c3,0 5.5,0.3 5.6,0.8 0,0.4 0.2,2.8 0.3,5.3l0.2,4.5 -4.6,0.5c-2.6,0.3 -5.1,0.4 -5.8,0.2zM551.4,154.6c-0.3,-0.8 -0.4,-3.1 -0.2,-5.3 0.3,-3.7 0.4,-3.9 4.8,-4.5 6.5,-0.9 7,-0.4 7,5.7l0,5.4 -5.5,0c-3.8,0 -5.7,-0.4 -6.1,-1.4zM535.4,138.6c-0.3,-0.8 -0.4,-3.3 -0.2,-5.8L535.5,128.5l5.3,-0.3c3.1,-0.2 5.3,0.1 5.4,0.8 1.2,10 0.7,11.1 -5.2,11.1 -3.3,0 -5.1,-0.5 -5.5,-1.4zM551.4,138.7c-0.3,-0.8 -0.4,-3.4 -0.2,-5.8L551.5,128.5l5.5,0 5.5,0 0,5.5 0,5.5 -5.3,0.3c-3.9,0.2 -5.4,-0.1 -5.8,-1.1zM593,159c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,160.1C630.4,158.5 628.9,156 626.9,156 625.5,156 625,156.7 625,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,160.1C649.4,158.5 647.9,156 645.9,156 644.5,156 644,156.7 644,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,158.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,149.2C593.1,147.6 592.6,147 591.1,147c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,149.2C603.1,147.4 602.7,147 600.6,147 598.7,147 598,147.5 598,148.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,149.2C620.1,147.4 619.7,147 617.6,147 615.7,147 615,147.5 615,148.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,150.4C630.2,148.3 629.3,147 626.9,147 625.5,147 625,147.7 625,149.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,150.4C649.2,148.3 648.3,147 645.9,147 644.5,147 644,147.7 644,149.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,149.2C658.1,147.4 657.7,147 655.6,147 653.7,147 653,147.5 653,148.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,149.2C677.1,147.4 676.7,147 674.6,147 672.7,147 672,147.5 672,148.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,149.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM489,94 L489,79.9 475.8,80.2 462.5,80.5 462.2,92.9c-0.2,6.8 -0.1,13 0.2,13.7 0.4,1 3.7,1.3 13.5,1.3L489,108 489,94zM440.2,104.1c-2,-0.6 -2.6,-1.4 -2.8,-4.4 -0.3,-3.2 0,-3.8 2.2,-4.3 4.6,-1.2 6.1,-0.2 6.5,4 0.2,2.4 -0.2,4.2 -1,4.7 -1.5,0.9 -1.4,0.9 -4.8,-0zM451.1,103.3C476.9,97.9 477.8,96 482,96c3.5,0 5.2,2.1 4.8,5.7 -0.3,2.5 -0.7,2.8 -4.6,3.1 -2.3,0.2 -4.3,-0.1 -4.4,-0.5zM465.1,90.6c-0.7,-0.8 -1.1,-2.8 -0.9,-4.3 0.3,-2.5 0.7,-2.8 4.6,-3.1l4.3,-0.3 -0.3,4.3c-0.3,4 -0.5,4.3 -3.4,4.6 -1.8,0.2 -3.6,-0.3 -4.3,-1.2zM478.7,91.3c-0.5,-0.8 -0.9,-5 -0.8,-7.1 0.1,-0.9 1.4,-1.2 4.4,-1 4.6,0.3 5.5,1.7 4.3,6.4C486.1,91.6 485.3,92 482.5,92c-1.9,0 -3.6,-0.3 -3.9,-0.8zM546.2,106.8c0.2,-0.7 0.3,-6.7 0.1,-13.3 -0.2,-6.6 -0.3,-12.3 -0.3,-12.8C546,80.3 539.9,80 532.5,80l-13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14C520,107.7 526.1,108 533.1,108c9.3,0 12.8,-0.3 13.1,-1.3zM524,105.1c-2,-0.6 -2.6,-1.4 -2.8,-4.4 -0.3,-3.2 0,-3.8 2.2,-4.3 4.4,-1.1 6.1,-0.2 6.5,3.4 0.2,1.8 -0.2,4 -0.9,4.7 -1.3,1.6 -1.3,1.6 -4.9,0.5zM534.9,104.3c-0,-0.4 -0.2,-1.9 -0.4,-3.3 -0.4,-3.3 1.1,-5 4.5,-5 3.5,0 5.2,2.1 4.8,5.7 -0.3,2.5 -0.7,2.8 -4.6,3.1 -2.3,0.2 -4.3,-0.1 -4.3,-0.5zM522.2,91.2c-0.8,-0.5 -1.2,-2.2 -1,-4.3 0.3,-3.2 0.5,-3.4 4.6,-3.7l4.3,-0.3 -0.3,4.3c-0.3,4 -0.5,4.3 -3.3,4.6 -1.6,0.1 -3.6,-0.1 -4.3,-0.6zM535.7,91.3c-0.5,-0.9 -1,-4.9 -0.8,-7.1 0.1,-0.9 1.4,-1.2 4.4,-1 4.2,0.3 4.3,0.3 4.3,4.3 0,3.9 -0.1,4 -3.7,4.3 -2,0.2 -3.9,-0.1 -4.1,-0.5z"
+        android:fillColor="#fce9ac"/>
+    <path
+        android:pathData="m319.9,403.6c-0.3,-0.3 -10.8,-1 -23.5,-1.6 -32,-1.5 -85,-6 -106.5,-9.1 -13.6,-1.9 -20.4,-2.8 -26,-3.5 -9.2,-1.1 -58.6,-9.4 -74,-12.5C51.2,369.2 16.8,360.9 11.1,358 8.9,356.9 5.4,356 3.4,356l-3.6,0 0.5,-4.3C1.6,340.1 7.4,322.4 13.6,311.1 27,286.7 51.9,263.6 82.5,247.4c4.9,-2.6 10.1,-5.8 11.5,-7.1 1.4,-1.3 4.8,-2.8 7.5,-3.3 2.7,-0.5 6.8,-1.7 9,-2.7 2.2,-0.9 10.3,-3.8 18,-6.4l14,-4.7 0.3,-5.2c0.3,-4.7 0.1,-5.2 -2.3,-6.1 -3.1,-1.2 -3.2,-2.6 -0.5,-6.5 1.1,-1.6 4.3,-7.4 7,-12.7L152,183l0,-13c0,-14.4 0.5,-13.4 -7,-14.3 -1.5,-0.2 -2.4,-0.9 -2.3,-1.8 0.3,-3.2 14.2,-31.4 15.9,-32.3 1.2,-0.7 15.9,-0.8 42.4,-0.3 22.3,0.4 41.4,0.4 42.3,0 2.4,-0.9 2.1,-5.7 -0.4,-7.2C239.5,112 241.8,111 250.1,111c6.6,0 7.9,0.3 7.9,1.6 0,0.9 -0.9,1.8 -2.1,2.1 -1.6,0.4 -2,1.2 -1.8,3.7 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 6.9,0.7 7.2,1 0.3,0.3 3.3,6.6 6.7,14 3.4,7.4 6.6,13.9 7,14.4 1.7,1.9 0.9,3.5 -2.6,5l-3.5,1.5 0.3,7.3 0.3,7.3 4.8,0.3 4.8,0.3 0,-83.5 0,-83.5 -2.3,-0.7C281.1,4.6 280,3.2 280.7,1.3 281.1,0.2 290.9,0 334.6,0 387.5,0 388,0 388,2c0,1.2 -1,2.5 -2.5,3.2l-2.5,1.1 0.3,90.5 0.3,90.5 5.5,2.1c3,1.2 8.1,3.8 11.2,5.9l5.7,3.8 9.3,-0.9L424.5,197.5l0,-39.5 0,-39.5 -4.8,-0.3c-6,-0.4 -6.6,-1.8 -3.4,-7.4 1.4,-2.4 3.7,-7.8 5.1,-12 2.5,-7.4 2.6,-8.5 2.4,-27L423.5,52.6 421,52c-1.8,-0.4 -2.5,-1.2 -2.5,-3l0,-2.5 12.6,-0.3c10.7,-0.2 12.8,-0 14,1.4 1.2,1.4 1,1.9 -1.4,3.9 -2.4,1.9 -2.7,2.8 -2.5,6.6L441.5,62.5l63.4,0.7c34.8,0.4 63.7,1 64.2,1.5 0.5,0.5 3.3,7.7 6.4,16.1 3.1,8.4 6.2,16.8 7,18.6l1.4,3.3 41.7,0.7c31.4,0.5 42,0.4 43.1,-0.5C670.6,101.2 670.3,98.2 668,97c-1.1,-0.6 -2,-1.7 -2,-2.6 0,-1.2 1.4,-1.5 8.2,-1.2 8.3,0.3 11.6,2 6.3,3.4 -2.2,0.6 -2.6,1.1 -2.3,3.8 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 7.1,0.9 7.7,1.5 0.5,0.6 3.3,6.2 6.1,12.5 2.9,6.3 6.1,13 7.3,14.9 2,3.3 2,3.4 0.2,4.8 -1,0.7 -2.7,1.4 -3.7,1.4 -1.7,0 -1.8,1.9 -1.6,39.6l0.3,39.6 5.3,1.8c2.9,1 6.1,2.5 7.1,3.4 2.4,2.2 4.3,2.1 9.1,-0.4 5.1,-2.7 16.1,-3 20.5,-0.7 3.2,1.7 8.5,7 12.8,13 2,2.8 3.7,3.9 6.4,4.3 6.9,1.1 12.4,3.7 16.8,7.9 3.9,3.7 4.4,4.7 4.4,8.7 0,5.5 -1.3,6.9 -6.2,6.9 -2.4,0 -3.8,0.5 -3.8,1.3 0,0.7 2.5,3.7 5.6,6.8 23.1,22.6 40.4,55.7 42.1,80.7l0.4,6.3 -3.2,0c-1.7,0 -8.9,1.3 -15.8,2.9C733.9,376.9 631.5,391.9 547,398.5c-51.7,4.1 -71.3,4.7 -149,5.1 -42.7,0.2 -77.8,0.2 -78,-0.1zM97.5,315.5c0,-0.5 -3.5,-0.9 -7.7,-1 -4.5,-0 -7.7,0.4 -7.8,1 -0,0.6 3.2,1 7.7,1 4.3,-0 7.8,-0.4 7.8,-1zM102.4,316.1c0.3,-0.5 -0.1,-1.1 -0.9,-1.5 -1.6,-0.6 -2.9,0.6 -1.8,1.7 0.9,0.9 2.1,0.8 2.7,-0.3zM151,315.5c-0.4,-0.6 -35,-1 -44,-0.4l-3.5,0.2 2.9,0.6c4,0.9 45.2,0.5 44.6,-0.4zM169,315.6c0,-1.9 -1.7,-2.9 -2.5,-1.5 -0.4,0.6 -3,1 -5.8,0.9 -2.8,-0.1 -5.8,-0 -6.6,0.1 -1.3,0.2 1.4,0.6 13.3,1.7 1,0.1 1.8,-0.5 1.8,-1.3zM191,294.9 L191.5,277.5 228,277.5 264.5,277.5 264.8,295.3c0.2,13.5 0.6,17.7 1.5,17.4 0.9,-0.3 1.2,-5.3 1.2,-19.3l0,-18.9 -39.5,0 -39.5,0 -0.3,19.3c-0.2,15.3 -0,19.3 1,18.9 0.9,-0.3 1.4,-5 1.8,-17.8zM102.8,309.5c1.3,-1.3 -1.4,-1.7 -10.8,-1.9 -8.3,-0.1 -10.1,0.1 -10.1,1.3 -0,1.3 1.7,1.5 10.2,1.3 5.6,-0.1 10.4,-0.5 10.7,-0.8zM168.8,309c-0.2,-1.3 -2.7,-1.5 -16.3,-1.3 -8.8,0.1 -19.7,0.4 -24.3,0.6 -4.5,0.2 -8.4,0.1 -8.7,-0.2 -0.7,-1.2 -14.9,-0.6 -15.3,0.6 -0.5,1.4 8.1,1.8 42,1.8 19.7,0 22.7,-0.2 22.5,-1.5zM171.6,297.1c0.5,-0.5 0.7,-5 0.4,-10.3l-0.5,-9.3 -7.5,-0.3C151.7,276.7 152,276.5 152,287.4c0,5.1 0.3,9.6 0.7,10 1,1 17.8,0.8 18.9,-0.3zM156.6,293.1c-0.3,-0.5 -0.2,-1.2 0.4,-1.5 0.5,-0.3 1.2,-0.2 1.5,0.4 0.3,0.5 0.2,1.2 -0.4,1.5 -0.5,0.3 -1.2,0.2 -1.5,-0.4zM166,292.5c0,-0.8 0.4,-1.5 1,-1.5 0.6,0 1,0.7 1,1.5 0,0.8 -0.4,1.5 -1,1.5 -0.6,0 -1,-0.7 -1,-1.5zM156,283c0,-0.6 0.7,-1 1.5,-1 0.8,0 1.5,0.4 1.5,1 0,0.6 -0.7,1 -1.5,1 -0.8,0 -1.5,-0.4 -1.5,-1zM166,282.5c0,-0.8 0.4,-1.5 1,-1.5 0.6,0 1,0.7 1,1.5 0,0.8 -0.4,1.5 -1,1.5 -0.6,0 -1,-0.7 -1,-1.5zM130.5,286 L130.5,276.5 115.5,276.5 100.5,276.5 100.2,284.9c-0.2,4.6 -0.1,9 0.2,9.8 0.4,1.1 3.6,1.3 15.3,1.1L130.5,295.5l0,-9.5zM104,291c0,-0.6 0.7,-1 1.6,-1 0.9,0 1.3,0.4 0.9,1 -0.3,0.6 -1,1 -1.6,1C104.4,292 104,291.5 104,291zM114,290.4c0,-1.8 2.2,-1.5 2.8,0.4 0.2,0.7 -0.3,1.2 -1.2,1.2C114.7,292 114,291.3 114,290.4zM124.5,291c-0.3,-0.6 -0.1,-1 0.4,-1 0.6,0 1.1,0.4 1.1,1 0,0.6 -0.2,1 -0.4,1 -0.2,0 -0.7,-0.4 -1.1,-1zM114,281c0,-0.6 0.7,-1 1.5,-1 0.8,0 1.5,0.4 1.5,1 0,0.6 -0.7,1 -1.5,1 -0.8,0 -1.5,-0.4 -1.5,-1zM124,281.6c0,-0.2 0.4,-0.7 1,-1.1 0.6,-0.3 1,-0.1 1,0.4 0,0.6 -0.4,1.1 -1,1.1 -0.6,0 -1,-0.2 -1,-0.4zM565.3,289.3c-5.1,-0.2 -13.4,-0.2 -18.5,0 -5.1,0.2 -0.9,0.3 9.3,0.3 10.2,0 14.3,-0.1 9.3,-0.3zM543.2,261.9c-0.2,-17.4 0,-24.5 0.9,-25.5 1.7,-2 23.2,-2 24.8,-0 0.8,1 1.1,8.3 0.9,25.5 -0.2,18.3 0,24.1 0.9,24.1 2,-0 2.4,-5.5 2.1,-31L572.5,230.5l-16.5,0 -16.5,0 -0.3,22.5c-0.4,26.3 0.2,33 2.6,33 1.5,0 1.7,-2.1 1.4,-24.1zM469.8,254.1c0.2,-11.4 -0.1,-16.8 -0.9,-17.8 -0.9,-1.1 -4.4,-1.4 -17.3,-1.1L435.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L469.5,270.5 469.8,254.1zM517.8,255c0.2,-8.5 0,-16.5 -0.3,-17.8 -0.6,-2.3 -0.6,-2.3 -17.3,-2L483.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L517.5,270.5 517.8,255zM505,242.1C505,241.5 505.5,241 506,241c0.6,0 1,0.2 1,0.4 0,0.2 -0.4,0.7 -1,1.1 -0.6,0.3 -1,0.1 -1,-0.4zM336.6,263.3c-6,-7.7 -11.6,-21.3 -10.2,-25 1,-2.6 -1.4,-3.2 -12.1,-3.2 -8.3,-0 -10.3,-0.3 -10.8,-1.6 -0.3,-0.9 -0.6,-6 -0.6,-11.5 0,-9.3 -0.9,-12.2 -2.5,-8.2 -0.4,1 -0.4,13.8 0,28.5l0.7,26.8 19.9,0 19.9,0 -4.5,-5.8zM171.8,253.7c1.5,-1 1.7,-17.2 0.3,-21C170.5,228.5 167,226 162.7,226 154.3,226 152,229.8 152,243.9c0,5.9 0.4,10.1 1,10.3 2.1,0.7 17.5,0.3 18.7,-0.5zM166,249c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM157,240c0,-0.6 0.2,-1 0.4,-1 0.2,0 0.7,0.4 1.1,1 0.3,0.6 0.1,1 -0.4,1C157.5,241 157,240.6 157,240zM166,240c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM200.2,254.4C201.8,253.9 202,252.6 202,242.9c0,-10.8 -0,-11.1 -2.9,-13.9C196.7,226.6 195.3,226 191.8,226c-3.6,0 -4.9,0.6 -7.3,3 -2.7,2.9 -2.9,3.6 -3.3,13 -0.2,6.1 0,10.5 0.7,11.3 1.1,1.3 15,2.2 18.4,1.2zM186,249c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM186,240c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM230.8,243.2 L231.1,231.9 228.1,229c-4.2,-4.2 -10.1,-4.2 -14.2,-0C211,231.8 211,232 211,242.8c0,6 0.2,11.1 0.5,11.4 0.3,0.3 4.7,0.5 9.8,0.4l9.2,-0.1 0.3,-11.3zM215,249.6c0,-0.2 0.4,-0.7 1,-1.1 0.6,-0.3 1,-0.1 1,0.4 0,0.6 -0.4,1.1 -1,1.1 -0.6,0 -1,-0.2 -1,-0.4zM215.5,240.9c-1,-1.5 0.4,-2.5 1.6,-1.2 0.7,0.7 0.7,1.3 0.1,1.7 -0.6,0.3 -1.3,0.1 -1.7,-0.5zM259.8,253.7c1.5,-1 1.7,-17.3 0.3,-21C258.5,228.5 255,226 250.7,226 242.3,226 240,229.8 240,243.9c0,6.9 0.4,10.1 1.2,10.4 2.2,0.7 17.3,0.3 18.5,-0.5zM254,249c0,-0.6 0.2,-1 0.4,-1 0.2,0 0.7,0.4 1.1,1 0.3,0.6 0.1,1 -0.4,1C254.5,250 254,249.6 254,249zM254,240c0,-0.6 0.2,-1 0.4,-1 0.2,0 0.7,0.4 1.1,1 0.3,0.6 0.1,1 -0.4,1C254.5,241 254,240.6 254,240zM288.2,254.4C289.8,253.9 290,252.6 290,242.9c0,-10.8 -0,-11.1 -2.9,-13.9 -4.2,-4.2 -10.5,-4.2 -14.6,0.1 -2.7,2.9 -2.9,3.4 -3.1,13.3 -0.1,5.6 0.2,10.7 0.6,11.3 0.9,1.1 15.2,1.8 18.1,0.9zM274,240.6c0,-0.2 0.4,-0.7 1,-1.1 0.6,-0.3 1,-0.1 1,0.4 0,0.6 -0.4,1.1 -1,1.1 -0.6,0 -1,-0.2 -1,-0.4zM283,240c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM630.5,198.2c0.5,-2.2 0.9,-2.3 8.8,-2L647.5,196.5l0.3,7.5c0.2,4.1 0.7,7.9 1.3,8.5 0.7,0.7 0.9,-2.4 0.7,-9L649.5,193.5 639.3,193.2 629,192.9l0.2,13.8c0.2,11.9 0.2,12.4 0.5,3.8 0.2,-5.5 0.5,-11 0.8,-12.3zM469.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -27.2,-1.4 -32.9,-0.9 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L469.5,216.5l0.3,-16.4zM463.5,189.1c-0.3,-0.5 -0.1,-1.2 0.4,-1.6 0.6,-0.3 1,0.1 1,0.9 0,1.8 -0.6,2 -1.5,0.6zM457,188c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM517.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -26.4,-1.4 -32.9,-0.8 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L517.5,216.5 517.8,200.1zM505,188.1C505,187.5 505.5,187 506,187c0.6,0 1,0.2 1,0.4 0,0.2 -0.4,0.7 -1,1.1 -0.6,0.3 -1,0.1 -1,-0.4zM565.8,200.1c0.2,-9 -0.1,-16.8 -0.5,-17.2 -1.1,-1.1 -31.4,-1.5 -33,-0.5 -0.9,0.6 -1.3,5.1 -1.3,17.1 0,9 0.3,16.6 0.7,17 0.4,0.4 8.1,0.6 17.3,0.4L565.5,216.5 565.8,200.1zM553,188c0,-0.6 0.4,-1 1,-1 0.6,0 1,0.4 1,1 0,0.6 -0.4,1 -1,1 -0.6,0 -1,-0.4 -1,-1zM331.6,185.3c-0.4,-1 -3.8,-1.3 -15.8,-1.1L300.5,184.5l0,8.7c0,5.5 0.5,9.2 1.3,9.9 1,1 1.2,-0.4 1.2,-6.4 0,-5.3 0.4,-7.9 1.4,-8.7 0.9,-0.8 5.4,-1.1 13.3,-0.9L329.5,187.5l0.2,10c0.4,15.5 1.7,16.8 2,2.1 0.2,-7.1 0.1,-13.5 -0.2,-14.3zM593,209c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,208.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM592.8,199.2C593.1,197.6 592.6,197 591.1,197c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,199.2C603.1,197.4 602.7,197 600.6,197 598.7,197 598,197.5 598,198.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,199.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.7,-0.2 -2.3,0.2 -2.3,1.6 0,1 0.3,2.2 0.7,2.6 1.3,1.3 3.8,0.1 3.8,-1.9zM677,198.5c0,-0.9 -0.9,-1.5 -2.5,-1.5 -1.6,0 -2.5,0.6 -2.5,1.5 0,0.9 0.9,1.5 2.5,1.5 1.6,0 2.5,-0.6 2.5,-1.5zM593,184c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,185.1C630.4,183.5 628.9,181 626.9,181 625.5,181 625,181.7 625,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,185.1C649.4,183.5 647.9,181 645.9,181 644.5,181 644,181.7 644,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,183.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,174.2C593.1,172.6 592.6,172 591.1,172c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,174.2C603.1,172.4 602.7,172 600.6,172 598.7,172 598,172.5 598,173.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,174.2C620.1,172.4 619.7,172 617.6,172 615.7,172 615,172.5 615,173.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,175.4C630.2,173.3 629.3,172 626.9,172 625.5,172 625,172.7 625,174.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,175.4C649.2,173.3 648.3,172 645.9,172 644.5,172 644,172.7 644,174.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,174.2C658.1,172.4 657.7,172 655.6,172 653.7,172 653,172.5 653,173.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,174.2C677.1,172.4 676.7,172 674.6,172 672.7,172 672,172.5 672,173.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,174.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM168.8,167.2C169.1,165.4 168.7,165 166.6,165 164.7,165 164,165.5 164,166.8c0,3.9 4.3,4.2 4.8,0.4zM177.8,167.2C178.1,165.6 177.6,165 176.1,165c-2.6,0 -3.6,1.7 -2.1,3.6 1.6,2 3.4,1.3 3.8,-1.4zM194.9,169.1C196.8,167.9 195.5,165 193,165 191.7,165 191,165.7 191,166.8c0,3 1.4,3.8 3.9,2.3zM204.8,167.2C205.1,165.4 204.7,165 202.6,165 200.7,165 200,165.5 200,166.8c0,3.9 4.3,4.2 4.8,0.4zM223.8,167.2C224.1,165.4 223.7,165 221.6,165 219.7,165 219,165.5 219,166.8c0,3.9 4.3,4.2 4.8,0.4zM233.8,167.2C234.1,165.4 233.7,165 231.6,165 229.7,165 229,165.5 229,166.8c0,3.9 4.3,4.2 4.8,0.4zM252.8,167.2C253.1,165.4 252.7,165 250.6,165 248.7,165 248,165.5 248,166.8c0,3.9 4.3,4.2 4.8,0.4zM261.8,167.2C262.1,165.4 261.7,165 259.6,165 257.7,165 257,165.5 257,166.8c0,3.9 4.3,4.2 4.8,0.4zM468.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM457,131.1C457,130.5 457.5,130 458,130c0.6,0 1,0.2 1,0.4 0,0.2 -0.4,0.7 -1,1.1 -0.6,0.3 -1,0.1 -1,-0.4zM516.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM505,131.1C505,130.5 505.5,130 506,130c0.6,0 1,0.2 1,0.4 0,0.2 -0.4,0.7 -1,1.1 -0.6,0.3 -1,0.1 -1,-0.4zM564.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM553,131.1C553,130.5 553.5,130 554,130c0.6,0 1,0.2 1,0.4 0,0.2 -0.4,0.7 -1,1.1 -0.6,0.3 -1,0.1 -1,-0.4zM593,159c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,160.1C630.4,158.5 628.9,156 626.9,156 625.5,156 625,156.7 625,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,160.1C649.4,158.5 647.9,156 645.9,156 644.5,156 644,156.7 644,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,158.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,149.2C593.1,147.6 592.6,147 591.1,147c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,149.2C603.1,147.4 602.7,147 600.6,147 598.7,147 598,147.5 598,148.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,149.2C620.1,147.4 619.7,147 617.6,147 615.7,147 615,147.5 615,148.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,150.4C630.2,148.3 629.3,147 626.9,147 625.5,147 625,147.7 625,149.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,150.4C649.2,148.3 648.3,147 645.9,147 644.5,147 644,147.7 644,149.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,149.2C658.1,147.4 657.7,147 655.6,147 653.7,147 653,147.5 653,148.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,149.2C677.1,147.4 676.7,147 674.6,147 672.7,147 672,147.5 672,148.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,149.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM489,94 L489,79.9 475.8,80.2 462.5,80.5 462.2,92.9c-0.2,6.8 -0.1,13 0.2,13.7 0.4,1 3.7,1.3 13.5,1.3L489,108 489,94zM546.2,106.8c0.2,-0.7 0.3,-6.7 0.1,-13.3 -0.2,-6.6 -0.3,-12.3 -0.3,-12.8C546,80.3 539.9,80 532.5,80l-13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14C520,107.7 526.1,108 533.1,108c9.3,0 12.8,-0.3 13.1,-1.3z"
+        android:fillColor="#fccea2"/>
+    <path
+        android:pathData="m319.9,403.6c-0.3,-0.3 -10.8,-1 -23.5,-1.6 -32,-1.5 -85,-6 -106.5,-9.1 -13.6,-1.9 -20.4,-2.8 -26,-3.5 -9.2,-1.1 -58.6,-9.4 -74,-12.5C51.2,369.2 16.8,360.9 11.1,358 8.9,356.9 5.4,356 3.4,356l-3.6,0 0.5,-4.3C1.6,340.1 7.4,322.4 13.6,311.1 27,286.7 51.9,263.6 82.5,247.4c4.9,-2.6 10.1,-5.8 11.5,-7.1 1.4,-1.3 4.8,-2.8 7.5,-3.3 2.7,-0.5 6.8,-1.7 9,-2.7 2.2,-0.9 10.3,-3.8 18,-6.4 13.9,-4.7 14,-4.7 14.9,-8.2 1.1,-4.4 0.4,-6.5 -2.9,-7.8 -3.1,-1.2 -3.2,-2.6 -0.5,-6.5 1.1,-1.6 4.3,-7.4 7,-12.7L152,183l0,-13c0,-14.4 0.5,-13.4 -7,-14.3 -1.5,-0.2 -2.4,-0.9 -2.3,-1.8 0.3,-3.2 14.2,-31.4 15.9,-32.3 1.2,-0.7 15.9,-0.8 42.4,-0.3 22.3,0.4 41.4,0.4 42.3,0 2.4,-0.9 2.1,-5.7 -0.4,-7.2C239.5,112 241.8,111 250.1,111c6.6,0 7.9,0.3 7.9,1.6 0,0.9 -0.9,1.8 -2.1,2.1 -1.6,0.4 -2,1.2 -1.8,3.7 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 6.9,0.7 7.2,1 0.3,0.3 3.3,6.6 6.7,14 3.4,7.4 6.6,13.9 7,14.4 1.7,1.9 0.9,3.5 -2.6,5l-3.5,1.5 0.3,7.3 0.3,7.3 5.3,0.3 5.3,0.3L286.8,89.3 286.5,5.6 284,5c-1.6,-0.4 -2.6,-1.4 -2.8,-2.8L280.9,0 334.4,0C387.8,0 388,0 388,2.1c0,1.4 -1,2.4 -3,3.1l-3,1 0.3,90.6 0.3,90.6 5.5,1.9c3,1.1 8.3,3.7 11.8,5.9l6.3,4 9.2,-0.9L424.5,197.5l0,-39.5 0,-39.5 -4.8,-0.3c-6,-0.4 -6.6,-1.8 -3.4,-7.4 1.4,-2.4 3.7,-7.8 5.1,-12 2.5,-7.4 2.6,-8.5 2.4,-27L423.5,52.6 421,52c-1.8,-0.4 -2.5,-1.2 -2.5,-3l0,-2.5 12.6,-0.3c10.7,-0.2 12.8,-0 14,1.4 1.2,1.4 1,1.9 -1.4,3.9 -2.4,1.9 -2.7,2.8 -2.5,6.6L441.5,62.5l63.4,0.7c34.8,0.4 63.7,1 64.2,1.5 0.5,0.5 3.3,7.7 6.4,16.1 3.1,8.4 6.2,16.8 7,18.6l1.4,3.3 41.7,0.7c31.4,0.5 42,0.4 43.1,-0.5C670.6,101.2 670.3,98.2 668,97c-1.1,-0.6 -2,-1.7 -2,-2.6 0,-1.2 1.4,-1.5 8.2,-1.2 8.3,0.3 11.6,2 6.3,3.4 -2.2,0.6 -2.6,1.1 -2.3,3.8 0.3,3.1 0.4,3.1 7,3.6 3.7,0.3 7.1,0.9 7.7,1.5 0.5,0.6 3.3,6.2 6.1,12.5 2.9,6.3 6.1,13 7.3,14.9 2,3.3 2,3.4 0.2,4.8 -1,0.7 -2.7,1.4 -3.7,1.4 -1.7,0 -1.8,1.9 -1.6,39.6l0.3,39.6 5.3,1.8c2.9,1 6.1,2.5 7.1,3.4 2.4,2.2 4.3,2.1 9.1,-0.4 5.1,-2.7 16.1,-3 20.5,-0.7 3.2,1.7 8.5,7 12.8,13 2,2.8 3.7,3.9 6.4,4.3 6.9,1.1 12.4,3.7 16.8,7.9 3.9,3.7 4.4,4.7 4.4,8.7 0,5.5 -1.3,6.9 -6.2,6.9 -2.4,0 -3.8,0.5 -3.8,1.3 0,0.7 2.5,3.7 5.6,6.8 23.1,22.6 40.4,55.7 42.1,80.7l0.4,6.3 -3.2,0c-1.7,0 -8.9,1.3 -15.8,2.9C733.9,376.9 631.5,391.9 547,398.5c-51.7,4.1 -71.3,4.7 -149,5.1 -42.7,0.2 -77.8,0.2 -78,-0.1zM97.5,315.5c0,-0.5 -3.5,-0.9 -7.7,-1 -4.5,-0 -7.7,0.4 -7.8,1 -0,0.6 3.2,1 7.7,1 4.3,-0 7.8,-0.4 7.8,-1zM102.4,316.1c0.3,-0.5 -0.1,-1.1 -0.9,-1.5 -1.6,-0.6 -2.9,0.6 -1.8,1.7 0.9,0.9 2.1,0.8 2.7,-0.3zM151,315.5c-0.4,-0.6 -35,-1 -44,-0.4l-3.5,0.2 2.9,0.6c4,0.9 45.2,0.5 44.6,-0.4zM169,315.6c0,-1.9 -1.7,-2.9 -2.5,-1.5 -0.4,0.6 -3,1 -5.8,0.9 -2.8,-0.1 -5.8,-0 -6.6,0.1 -1.3,0.2 1.4,0.6 13.3,1.7 1,0.1 1.8,-0.5 1.8,-1.3zM191,294.9 L191.5,277.5 227.4,277.2c28.1,-0.2 36.1,0 36.7,1 0.4,0.7 0.8,8.8 0.8,18.1 0,13 0.3,16.7 1.3,16.4 0.9,-0.3 1.3,-5.3 1.5,-19.6l0.3,-19.2 -40.3,0.3L187.5,274.5l-0.3,18c-0.3,18.7 -0.1,21 2,20.3 0.9,-0.3 1.4,-5.2 1.7,-17.8zM102.8,309.5c1.3,-1.3 -1.4,-1.7 -10.8,-1.9 -8.3,-0.1 -10.1,0.1 -10.1,1.3 -0,1.3 1.7,1.5 10.2,1.3 5.6,-0.1 10.4,-0.5 10.7,-0.8zM168.8,308.5c-0.2,-1.2 -0.9,-1.8 -1.8,-1.5 -0.8,0.3 -15.2,0.5 -31.9,0.5 -22.9,0 -30.5,0.3 -30.8,1.2 -0.5,1.4 7.9,1.8 42,1.8 22.2,0 22.8,-0 22.5,-2zM172.5,287.5 L172.5,277.5 162.3,277.2 152,276.9 152,287.5 152,298.1 162.3,297.8 172.5,297.5 172.5,287.5zM130.8,285.8 L130.5,275.5 116.1,275.2c-7.9,-0.2 -14.8,0.1 -15.3,0.6 -0.7,0.7 -1.4,15.9 -0.9,19.4 0.1,0.4 7.1,0.8 15.6,0.8l15.5,0 -0.3,-10.3zM565.3,289.3c-5.1,-0.2 -13.4,-0.2 -18.5,0 -5.1,0.2 -0.9,0.3 9.3,0.3 10.2,0 14.3,-0.1 9.3,-0.3zM543.2,262.1c-0.3,-20.9 -0.1,-24.1 1.3,-25.5 2.1,-2.1 21.1,-2.4 23.8,-0.4 1.6,1.1 1.7,3.5 1.4,25.5 -0.2,18.4 0,24.2 0.9,24.2 2,-0 2.4,-5.5 2.1,-31L572.5,230.5l-16.5,0 -16.5,0 -0.3,22.5c-0.4,26.3 0.2,33 2.6,33 1.5,0 1.7,-2.1 1.4,-23.9zM469.8,254.1c0.2,-11.4 -0.1,-16.8 -0.9,-17.8 -0.9,-1.1 -4.4,-1.4 -17.3,-1.1L435.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L469.5,270.5 469.8,254.1zM517.8,255c0.2,-8.5 0,-16.5 -0.3,-17.8 -0.6,-2.3 -0.6,-2.3 -17.3,-2L483.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L517.5,270.5 517.8,255zM336.6,263.3c-5.6,-7.2 -8.6,-14 -9.5,-21.8l-0.7,-6 -11,-0.5 -11,-0.5 -0.5,-10.7c-0.3,-5.9 -0.8,-11 -1.2,-11.4 -0.4,-0.4 -1.4,-0.1 -2.3,0.6 -1.3,1.1 -1.5,3.2 -1,13.9 0.3,6.9 0.8,19.2 1.1,27.3l0.5,14.8 20,0 20,0 -4.5,-5.8zM172.8,243.2 L173.1,231.9 169.6,228.4C164.9,223.7 160.1,223.7 155.4,228.4l-3.4,3.4 0,10.9c0,6 0.3,11.2 0.7,11.6 0.4,0.4 5,0.6 10.3,0.4L172.5,254.5l0.3,-11.3zM202.6,252.5c0.3,-1.4 0.5,-6.6 0.3,-11.6l-0.4,-9.1 -3.9,-3.5c-3.4,-3.1 -4.3,-3.5 -7.9,-3 -2.5,0.3 -5,1.5 -6.6,3.1 -2.4,2.4 -2.6,3.3 -2.9,13.1 -0.2,5.8 -0.1,11.2 0.2,12 0.4,1.1 2.7,1.5 10.6,1.5 9.8,0 10,-0 10.6,-2.5zM231.8,244.3c0.2,-7.7 -0.1,-11 -1.3,-13.2C228.9,227.8 224.4,225 221,225c-3.4,0 -7.8,2.8 -9.5,6 -1.6,3 -2.2,22 -0.8,23.4 0.4,0.4 5.2,0.6 10.8,0.4L231.5,254.5l0.3,-10.2zM260.8,243.2 L261.1,231.9 257.6,228.4c-4.7,-4.7 -9.3,-4.7 -14.1,-0.2l-3.4,3.3 -0.2,10.5c-0.1,5.8 -0.1,11.1 -0.1,11.8 0.1,1 2.6,1.2 10.4,1L260.5,254.5 260.8,243.2zM290.5,252.8c1.2,-4.9 -0.1,-20.2 -1.8,-22.8 -1.9,-2.9 -5.6,-4.9 -9,-4.9 -3.2,0 -8.6,3.6 -9.7,6.6 -1.1,2.9 -1.3,21.7 -0.3,22.8C270,254.7 274.7,255 280.1,255c9.4,0 9.8,-0.1 10.3,-2.3zM631.3,197.3c0.8,-1.3 12.1,-1.8 15.1,-0.6 1.3,0.5 1.6,2.2 1.6,8.5 0,4.8 0.4,7.9 1,7.9 0.7,0 0.9,-3.5 0.8,-9.8L649.5,193.5 639.3,193.2 629,192.9l0.2,13.8 0.2,13.8 0.6,-11c0.3,-6.1 0.9,-11.6 1.4,-12.3zM469.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -27.2,-1.4 -32.9,-0.9 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L469.5,216.5l0.3,-16.4zM517.8,200.1c0.2,-9 -0.1,-16.8 -0.6,-17.3 -0.7,-0.7 -26.4,-1.4 -32.9,-0.8 -0.9,0.1 -1.3,4.2 -1.3,16.9 0,9.3 0.3,17.1 0.7,17.5 0.4,0.4 8.1,0.6 17.3,0.4L517.5,216.5l0.3,-16.4zM565.8,200.1c0.2,-9 -0.1,-16.8 -0.5,-17.2 -1.1,-1.1 -31.4,-1.5 -33,-0.5 -0.9,0.6 -1.3,5.1 -1.3,17.1 0,9 0.3,16.6 0.7,17 0.4,0.4 8.1,0.6 17.3,0.4L565.5,216.5 565.8,200.1zM332.5,209.8c0.3,-1.8 0.5,-8.4 0.3,-14.8L332.5,183.5 317.1,183.2c-11.2,-0.2 -15.8,0.1 -16.9,1 -1.2,1 -1.4,2.7 -0.9,8.4 0.6,7.5 2.2,13.2 3.4,12 0.4,-0.4 0.9,-4.4 1.2,-8.9L304.5,187.5 315,187.2c16.1,-0.4 15,-1.4 15,13.3 0,7.3 0.4,12.5 1,12.5 0.5,0 1.2,-1.5 1.5,-3.3zM593,209c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,208.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM592.8,199.2C593.1,197.6 592.6,197 591.1,197c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,199.2C603.1,197.4 602.7,197 600.6,197 598.7,197 598,197.5 598,198.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,199.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.7,-0.2 -2.3,0.2 -2.3,1.6 0,1 0.3,2.2 0.7,2.6 1.3,1.3 3.8,0.1 3.8,-1.9zM677,198.5c0,-0.9 -0.9,-1.5 -2.5,-1.5 -1.6,0 -2.5,0.6 -2.5,1.5 0,0.9 0.9,1.5 2.5,1.5 1.6,0 2.5,-0.6 2.5,-1.5zM593,184c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,185.1C630.4,183.5 628.9,181 626.9,181 625.5,181 625,181.7 625,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,185.1C649.4,183.5 647.9,181 645.9,181 644.5,181 644,181.7 644,183.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,183.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,183.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,174.2C593.1,172.6 592.6,172 591.1,172c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,174.2C603.1,172.4 602.7,172 600.6,172 598.7,172 598,172.5 598,173.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,174.2C620.1,172.4 619.7,172 617.6,172 615.7,172 615,172.5 615,173.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,175.4C630.2,173.3 629.3,172 626.9,172 625.5,172 625,172.7 625,174.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,175.4C649.2,173.3 648.3,172 645.9,172 644.5,172 644,172.7 644,174.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,174.2C658.1,172.4 657.7,172 655.6,172 653.7,172 653,172.5 653,173.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,174.2C677.1,172.4 676.7,172 674.6,172 672.7,172 672,172.5 672,173.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,174.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM168.8,167.2C169.1,165.4 168.7,165 166.6,165 164.7,165 164,165.5 164,166.8c0,3.9 4.3,4.2 4.8,0.4zM177.8,167.2C178.1,165.6 177.6,165 176.1,165c-2.6,0 -3.6,1.7 -2.1,3.6 1.6,2 3.4,1.3 3.8,-1.4zM194.9,169.1C196.8,167.9 195.5,165 193,165 191.7,165 191,165.7 191,166.8c0,3 1.4,3.8 3.9,2.3zM204.8,167.2C205.1,165.4 204.7,165 202.6,165 200.7,165 200,165.5 200,166.8c0,3.9 4.3,4.2 4.8,0.4zM223.8,167.2C224.1,165.4 223.7,165 221.6,165 219.7,165 219,165.5 219,166.8c0,3.9 4.3,4.2 4.8,0.4zM233.8,167.2C234.1,165.4 233.7,165 231.6,165 229.7,165 229,165.5 229,166.8c0,3.9 4.3,4.2 4.8,0.4zM252.8,167.2C253.1,165.4 252.7,165 250.6,165 248.7,165 248,165.5 248,166.8c0,3.9 4.3,4.2 4.8,0.4zM261.8,167.2C262.1,165.4 261.7,165 259.6,165 257.7,165 257,165.5 257,166.8c0,3.9 4.3,4.2 4.8,0.4zM327.8,152.8 L327.5,138.5l-14,0 -14,0 -0.3,14.3 -0.3,14.3 14.6,0 14.6,0 -0.3,-14.3zM370.5,138.5 L370.2,124.3 356.2,124.3 342.2,124.3 341.9,138.5 341.7,152.8 356.2,152.8 370.8,152.8 370.5,138.5zM468.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM516.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM564.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM593,159c0,-2.4 -2.6,-3.7 -4.2,-2.2 -1.6,1.6 -0.2,4.2 2.2,4.2 1.4,0 2,-0.7 2,-2zM602.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM619.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM629.4,160.1C630.4,158.5 628.9,156 626.9,156 625.5,156 625,156.7 625,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM648.4,160.1C649.4,158.5 647.9,156 645.9,156 644.5,156 644,156.7 644,158.5c0,1.8 0.5,2.5 1.9,2.5 1.1,0 2.2,-0.4 2.5,-0.9zM657.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM676.8,158.8c-0.2,-1.5 -1,-2.3 -2.3,-2.3 -1.3,0 -2.1,0.8 -2.3,2.3 -0.3,1.8 0.2,2.3 2.3,2.3 2.2,0 2.6,-0.4 2.3,-2.3zM686.5,158.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM592.8,149.2C593.1,147.6 592.6,147 591.1,147c-2.4,0 -3.5,1.5 -2.7,3.6 0.9,2.2 4,1.2 4.4,-1.4zM602.8,149.2C603.1,147.4 602.7,147 600.6,147 598.7,147 598,147.5 598,148.8c0,3.9 4.3,4.2 4.8,0.4zM619.8,149.2C620.1,147.4 619.7,147 617.6,147 615.7,147 615,147.5 615,148.8c0,3.9 4.3,4.2 4.8,0.4zM629.4,150.4C630.2,148.3 629.3,147 626.9,147 625.5,147 625,147.7 625,149.5c0,2.9 3.4,3.6 4.4,0.9zM648.4,150.4C649.2,148.3 648.3,147 645.9,147 644.5,147 644,147.7 644,149.5c0,2.9 3.4,3.6 4.4,0.9zM657.8,149.2C658.1,147.4 657.7,147 655.6,147 653.7,147 653,147.5 653,148.8c0,3.9 4.3,4.2 4.8,0.4zM676.8,149.2C677.1,147.4 676.7,147 674.6,147 672.7,147 672,147.5 672,148.8c0,3.9 4.3,4.2 4.8,0.4zM686.5,149.5c0,-1.3 -0.8,-2.1 -2.3,-2.3 -1.8,-0.3 -2.3,0.2 -2.3,2.3 0,2.2 0.4,2.6 2.3,2.3 1.5,-0.2 2.3,-1 2.3,-2.3zM328,110.1c0,-11.7 -0.2,-14 -1.6,-14.5 -2.1,-0.8 -23.8,-0.8 -25.8,0C299.2,96.1 299,98.4 299,110.1L299,124l14.5,0 14.5,0 0,-13.9zM371,110.1c0,-11.7 -0.2,-14 -1.6,-14.5 -2.1,-0.8 -23.8,-0.8 -25.8,0C342.2,96.1 342,98.4 342,110.1L342,124l14.5,0 14.5,0 0,-13.9zM489,94l0,-14 -13.5,0 -13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14 0.4,0.4 6.4,0.7 13.5,0.7L489,108 489,94zM546.2,106.8c0.2,-0.7 0.3,-6.7 0.1,-13.3 -0.2,-6.6 -0.3,-12.3 -0.3,-12.8C546,80.3 539.9,80 532.5,80l-13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14C520,107.7 526.1,108 533.1,108c9.3,0 12.8,-0.3 13.1,-1.3zM327.8,68.8 L327.5,54.5l-14,0 -14,0 -0.3,14.3L298.9,83 313.5,83 328.1,83 327.8,68.8zM371,69c0,-16.6 1.5,-15.2 -16.5,-14.8L342.5,54.5 342.2,68.8 341.9,83 356.5,83 371,83 371,69zM327.8,29.8 L327.5,15.5l-14,0 -14,0 -0.3,12.9c-0.2,7.1 -0.1,13.5 0.2,14.3C299.8,43.7 303.4,44 314,44l14.1,0 -0.3,-14.3zM370.5,29.5l0,-14 -14,0 -14,0 -0.3,14.3 -0.3,14.3 14.3,-0.3L370.5,43.5l0,-14z"
+        android:fillColor="#9dcfe4"/>
+    <path
+        android:pathData="m319.9,403.6c-0.3,-0.3 -10.8,-1 -23.5,-1.6 -32,-1.5 -85,-6 -106.5,-9.1 -13.6,-1.9 -20.4,-2.8 -26,-3.5 -9.2,-1.1 -58.6,-9.4 -74,-12.5C51.2,369.2 16.8,360.9 11.1,358 8.9,356.9 5.4,356 3.4,356l-3.6,0 0.5,-4.3C1.6,340.1 7.4,322.4 13.6,311.1 27,286.7 51.9,263.6 82.5,247.4c4.9,-2.6 10.1,-5.8 11.5,-7.1 1.4,-1.3 4.8,-2.8 7.5,-3.3 2.7,-0.5 6.8,-1.7 9,-2.7 2.2,-0.9 10.3,-3.8 18,-6.4 13.9,-4.7 14,-4.7 14.9,-8.2 1.1,-4.4 0.4,-6.5 -2.9,-7.8 -3,-1.1 -3.2,-2.7 -0.8,-6 1,-1.3 5.2,-9.2 9.4,-17.5L156.7,173.5 221.9,173.2 287,173 286.8,89.3 286.5,5.6 284,5c-1.6,-0.4 -2.6,-1.4 -2.8,-2.8L280.9,0 334.4,0C387.8,0 388,0 388,2.1c0,1.4 -1,2.4 -3,3.1l-3,1 0.3,90.6 0.3,90.6 5.5,1.9c3,1.1 8.3,3.7 11.8,5.9l6.3,4 9.2,-0.9L424.5,197.5l0,-39.5 0,-39.5 -4.8,-0.3c-6,-0.4 -6.6,-1.8 -3.4,-7.4 1.4,-2.4 3.7,-7.8 5.1,-12 2.5,-7.4 2.6,-8.5 2.4,-27L423.5,52.6 421,52c-1.8,-0.4 -2.5,-1.2 -2.5,-3l0,-2.5 12.6,-0.3c10.7,-0.2 12.8,-0 14,1.4 1.2,1.4 1,1.9 -1.4,3.9 -2.4,1.9 -2.7,2.8 -2.5,6.6L441.5,62.5l63.4,0.7c34.8,0.4 63.7,1 64.2,1.5 0.4,0.5 3.8,8.9 7.4,18.8 3.6,9.9 7.1,18.4 7.6,19 0.7,0.7 15.7,1.1 43,1.3l41.9,0.3 0.7,-2.7c0.5,-2.2 0.2,-3 -1.5,-4.2C667,96.4 666,95.1 666,94.3c0,-1.1 1.6,-1.4 8.2,-1.1 8.3,0.3 11.6,2 6.3,3.4 -2.2,0.6 -2.6,1.1 -2.3,3.8 0.3,3.1 0.4,3.1 6.3,3.6 3.3,0.3 6.6,0.9 7.4,1.4 0.8,0.5 2.8,4.1 4.6,8 1.8,3.9 4.9,10.4 6.9,14.5 2,4 3.6,8 3.6,8.7 0,1.2 -10.3,1.4 -63.8,1.6l-63.8,0.3 0,40.5 0,40.5 25.3,0.3 25.3,0.3 0,-10.1C630,196.6 630.4,196 638.5,196c9.6,0 9.5,-0 9.5,9.1 0,4.3 0.2,7.9 0.5,7.9 0.3,0 2.6,-1.6 5.3,-3.6 16.6,-12.7 30.4,-12.2 39.5,1.5 3.3,5 4.6,5.8 15,9.5 2.6,0.9 5.2,2.3 5.9,3.1 1.7,2 4.2,1.8 8.9,-0.6 5.1,-2.7 16.1,-3 20.5,-0.7 3.2,1.7 8.5,7 12.8,13 2,2.8 3.7,3.9 6.4,4.3 6.9,1.1 12.4,3.7 16.8,7.9 3.9,3.7 4.4,4.7 4.4,8.7 0,5.5 -1.3,6.9 -6.2,6.9 -2.4,0 -3.8,0.5 -3.8,1.3 0,0.7 2.5,3.7 5.6,6.8 23.1,22.6 40.4,55.7 42.1,80.7l0.4,6.3 -3.2,0c-1.7,0 -8.9,1.3 -15.8,2.9C733.9,376.9 631.5,391.9 547,398.5c-51.7,4.1 -71.3,4.7 -149,5.1 -42.7,0.2 -77.8,0.2 -78,-0.1zM97.5,315.5c0,-0.5 -3.5,-0.9 -7.7,-1 -4.5,-0 -7.7,0.4 -7.8,1 -0,0.6 3.2,1 7.7,1 4.3,-0 7.8,-0.4 7.8,-1zM102.4,316.1c0.3,-0.5 -0.1,-1.1 -0.9,-1.5 -1.6,-0.6 -2.9,0.6 -1.8,1.7 0.9,0.9 2.1,0.8 2.7,-0.3zM151,315.5c-0.4,-0.6 -35,-1 -44,-0.4l-3.5,0.2 2.9,0.6c4,0.9 45.2,0.5 44.6,-0.4zM169,315.6c0,-1.9 -1.7,-2.9 -2.5,-1.5 -0.4,0.6 -3,1 -5.8,0.9 -2.8,-0.1 -5.8,-0 -6.6,0.1 -1.3,0.2 1.4,0.6 13.3,1.7 1,0.1 1.8,-0.5 1.8,-1.3zM191,294.9 L191.5,277.5 227.4,277.2c28.1,-0.2 36.1,0 36.7,1 0.4,0.7 0.8,8.8 0.8,18.1 0,13 0.3,16.7 1.3,16.4 0.9,-0.3 1.3,-5.3 1.5,-19.6l0.3,-19.2 -40.3,0.3L187.5,274.5l-0.3,18c-0.3,18.7 -0.1,21 2,20.3 0.9,-0.3 1.4,-5.2 1.7,-17.8zM102.8,309.5c1.3,-1.3 -1.4,-1.7 -10.8,-1.9 -8.3,-0.1 -10.1,0.1 -10.1,1.3 -0,1.3 1.7,1.5 10.2,1.3 5.6,-0.1 10.4,-0.5 10.7,-0.8zM168.8,308.5c-0.2,-1.2 -0.9,-1.8 -1.8,-1.5 -0.8,0.3 -15.2,0.5 -31.9,0.5 -22.9,0 -30.5,0.3 -30.8,1.2 -0.5,1.4 7.9,1.8 42,1.8 22.2,0 22.8,-0 22.5,-2zM172.5,287.5 L172.5,277.5 162.3,277.2 152,276.9 152,287.5 152,298.1 162.3,297.8 172.5,297.5 172.5,287.5zM130.8,285.8 L130.5,275.5 116.1,275.2c-7.9,-0.2 -14.8,0.1 -15.3,0.6 -0.7,0.7 -1.4,15.9 -0.9,19.4 0.1,0.4 7.1,0.8 15.6,0.8l15.5,0 -0.3,-10.3zM551.6,278.7c-5.1,-0.2 -13.6,-0.2 -19,-0 -5.4,0.2 -1.3,0.3 9.2,0.3 10.4,0 14.9,-0.1 9.8,-0.3zM528.5,251.6c-0.3,-20.9 -0.1,-24.1 1.3,-25.5 2.1,-2.1 21.1,-2.4 23.8,-0.4 1.6,1.1 1.7,3.5 1.4,25.5 -0.2,18.4 0,24.2 0.9,24.2 2,-0 2.4,-5.5 2.1,-31L572.5,230.5l-16.5,0 -16.5,0 -0.3,22.5c-0.4,26.3 0.2,33 2.6,33 1.5,0 1.7,-2.1 1.4,-23.9zM455.1,243.6c0.2,-11.4 -0.1,-16.8 -0.9,-17.8 -0.9,-1.1 -4.4,-1.4 -17.3,-1.1L435.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L469.5,270.5 469.8,254.1zM517.8,255c0.2,-8.5 0,-16.5 -0.3,-17.8 -0.6,-2.3 -0.6,-2.3 -17.3,-2L483.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L517.5,270.5 517.8,255zM336.6,263.3c-5.6,-7.2 -8.6,-14 -9.5,-21.8l-0.7,-6 -11,-0.5 -11,-0.5 -0.5,-10.7c-0.3,-5.9 -0.8,-11 -1.2,-11.4 -0.4,-0.4 -1.4,-0.1 -2.3,0.6 -1.3,1.1 -1.5,3.2 -1,13.9 0.3,6.9 0.8,19.2 1.1,27.3l0.5,14.8 20,0 20,0 -4.5,-5.8zM172.8,243.2 L173.1,231.9 169.6,228.4C164.9,223.7 160.1,223.7 155.4,228.4l-3.4,3.4 0,10.9c0,6 0.3,11.2 0.7,11.6 0.4,0.4 5,0.6 10.3,0.4L172.5,254.5l0.3,-11.3zM202.6,252.5c0.3,-1.4 0.5,-6.6 0.3,-11.6l-0.4,-9.1 -3.9,-3.5c-3.4,-3.1 -4.3,-3.5 -7.9,-3 -2.5,0.3 -5,1.5 -6.6,3.1 -2.4,2.4 -2.6,3.3 -2.9,13.1 -0.2,5.8 -0.1,11.2 0.2,12 0.4,1.1 2.7,1.5 10.6,1.5 9.8,0 10,-0 10.6,-2.5zM231.8,244.3c0.2,-7.7 -0.1,-11 -1.3,-13.2C228.9,227.8 224.4,225 221,225c-3.4,0 -7.8,2.8 -9.5,6 -1.6,3 -2.2,22 -0.8,23.4 0.4,0.4 5.2,0.6 10.8,0.4L231.5,254.5l0.3,-10.2zM260.8,243.2 L261.1,231.9 257.6,228.4c-4.7,-4.7 -9.3,-4.7 -14.1,-0.2l-3.4,3.3 -0.2,10.5c-0.1,5.8 -0.1,11.1 -0.1,11.8 0.1,1 2.6,1.2 10.4,1L260.5,254.5 260.8,243.2zM290.5,252.8c1.2,-4.9 -0.1,-20.2 -1.8,-22.8 -1.9,-2.9 -5.6,-4.9 -9,-4.9 -3.2,0 -8.6,3.6 -9.7,6.6 -1.1,2.9 -1.3,21.7 -0.3,22.8C270,254.7 274.7,255 280.1,255c9.4,0 9.8,-0.1 10.3,-2.3zM468.7,216.6c1.7,-0.6 1.9,-33.1 0.2,-34.1 -1.3,-0.8 -29.9,-1.6 -32.2,-0.9 -1.6,0.5 -1.8,2.2 -1.8,17.5 0,15.9 0.1,17 1.9,17.7 2.1,0.8 29.7,0.6 31.8,-0.2zM516.7,216.6c1.7,-0.6 1.9,-33.1 0.2,-34.1 -1.3,-0.8 -29.7,-1.6 -32.2,-0.8 -1.6,0.5 -1.8,2.2 -1.8,17.5 0,15.9 0.1,17 1.9,17.7 2.1,0.8 29.7,0.6 31.8,-0.2zM564.7,216.6c1.6,-0.6 1.9,-33.1 0.3,-34.1 -2,-1.2 -31.2,-1.5 -32.6,-0.4 -1,0.8 -1.3,5 -1.3,17.5 0,15.3 0.1,16.5 1.9,17.1 2.1,0.8 29.7,0.6 31.8,-0.2zM332.5,209.8c0.3,-1.8 0.5,-8.4 0.3,-14.8L332.5,183.5 317.1,183.2c-11.2,-0.2 -15.8,0.1 -16.9,1 -1.2,1 -1.4,2.7 -0.9,8.4 0.6,7.5 2.2,13.2 3.4,12 0.4,-0.4 0.9,-4.4 1.2,-8.9L304.5,187.5 315,187.2c16.1,-0.4 15,-1.4 15,13.3 0,7.3 0.4,12.5 1,12.5 0.5,0 1.2,-1.5 1.5,-3.3zM327.8,152.8 L327.5,138.5 313.5,138.5 299.5,138.5 299.2,152.8 298.9,167 313.5,167 328.1,167 327.8,152.8zM370.8,152.8 L370.5,138.5 356.5,138.5 342.5,138.5 342.2,152.8 341.9,167 356.5,167 371.1,167 370.8,152.8zM468.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM516.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM564.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM328,110.1c0,-11.7 -0.2,-14 -1.6,-14.5 -2.1,-0.8 -23.8,-0.8 -25.8,0C299.2,96.1 299,98.4 299,110.1L299,124l14.5,0 14.5,0 0,-13.9zM371,110.1c0,-11.7 -0.2,-14 -1.6,-14.5 -2.1,-0.8 -23.8,-0.8 -25.8,0C342.2,96.1 342,98.4 342,110.1L342,124l14.5,0 14.5,0 0,-13.9zM489,94l0,-14 -13.5,0 -13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14 0.4,0.4 6.4,0.7 13.5,0.7L489,108 489,94zM546.2,106.8c0.2,-0.7 0.3,-6.7 0.1,-13.3 -0.2,-6.6 -0.3,-12.3 -0.3,-12.8C546,80.3 539.9,80 532.5,80l-13.5,0 0,13.3c0,7.3 0.3,13.6 0.7,14C520,107.7 526.1,108 533.1,108c9.3,0 12.8,-0.3 13.1,-1.3zM327.8,68.8 L327.5,54.5l-14,0 -14,0 -0.3,14.3L298.9,83 313.5,83 328.1,83 327.8,68.8zM371,69c0,-16.6 1.5,-15.2 -16.5,-14.8L342.5,54.5 342.2,68.8 341.9,83 356.5,83 371,83 371,69zM327.8,29.8 L327.5,15.5l-14,0 -14,0 -0.3,12.9c-0.2,7.1 -0.1,13.5 0.2,14.3C299.8,43.7 303.4,44 314,44l14.1,0 -0.3,-14.3zM370.5,29.5l0,-14 -14,0 -14,0 -0.3,14.3 -0.3,14.3 14.3,-0.3L370.5,43.5l0,-14zM143,154.4c0,-0.9 2.2,-6.1 4.9,-11.8 2.7,-5.6 5.9,-12.5 7.1,-15.4 1.4,-3.2 2.9,-5.3 3.9,-5.3 0.9,-0 20.5,-0.2 43.6,-0.3l42,-0.2 0.3,-2.9c0.2,-2 -0.3,-3.3 -1.8,-4.3C239.7,111.9 241.6,111 250.1,111c6.6,0 7.9,0.3 7.9,1.6 0,0.9 -0.9,1.8 -2.1,2.1 -1.6,0.4 -2,1.2 -1.8,3.7 0.3,3.1 0.4,3.1 6.8,3.6l6.5,0.5 7.6,15.5c4.2,8.5 7.4,16.1 7.1,16.8 -0.4,1 -15.3,1.3 -69.9,1.3C150.1,156 143,155.8 143,154.4z"
+        android:fillColor="#e7b394"/>
+    <path
+        android:pathData="m319.9,403.6c-0.3,-0.3 -10.8,-1 -23.5,-1.6 -32,-1.5 -85,-6 -106.5,-9.1 -13.6,-1.9 -20.4,-2.8 -26,-3.5 -9.2,-1.1 -58.6,-9.4 -74,-12.5C51.2,369.2 16.8,360.9 11.1,358 8.9,356.9 5.4,356 3.4,356l-3.6,0 0.5,-4.3C1.6,340.1 7.4,322.4 13.6,311.1 27,286.7 51.9,263.6 82.5,247.4c4.9,-2.6 10.1,-5.8 11.5,-7.1 1.4,-1.3 4.8,-2.8 7.5,-3.3 2.7,-0.5 7,-1.8 9.5,-2.9 2.5,-1.1 10.9,-4.1 18.8,-6.7l14.3,-4.7 0,-5.4C144,212.3 143.9,212 141.5,212c-3.4,0 -4.1,-2.4 -1.8,-5.7 1,-1.5 5.3,-9.5 9.5,-17.7L156.7,173.5 222.1,173.3 287.5,173.1 287.8,89.5 288,5.9 284.5,4.4C282.6,3.6 281,2.3 281,1.5 281,0.2 287.8,0 334,0c52.3,0 53,0 53,2 0,1.1 -0.6,2 -1.4,2 -0.8,0 -2.1,0.7 -3,1.6 -1.4,1.4 -1.6,10.9 -1.6,89.8 0,48.5 0.3,89.1 0.6,90.2 0.4,1.5 2.2,2.6 6,3.7 3,0.9 8.4,3.5 12,5.8l6.6,4.1 9.2,-0.9L424.5,197.5l0,-39.5 0,-39.5 -4.8,-0.3c-6,-0.4 -6.6,-1.8 -3.4,-7.4 1.4,-2.4 3.7,-7.8 5.1,-12 2.5,-7.4 2.6,-8.5 2.4,-27L423.5,52.6 421,52c-1.8,-0.4 -2.5,-1.2 -2.5,-3l0,-2.5 12.6,-0.3c10.7,-0.2 12.8,-0 14,1.4 1.2,1.4 1,1.9 -1.4,3.9 -2.4,1.9 -2.7,2.8 -2.5,6.6L441.5,62.5l63.4,0.7c34.8,0.4 63.7,1 64.2,1.5 0.4,0.5 3.8,8.9 7.4,18.8 3.6,9.9 7.1,18.4 7.6,19 0.7,0.7 15.7,1.1 43,1.3l41.9,0.3 0.7,-2.7c0.5,-2.2 0.2,-3 -1.5,-4.2C667,96.4 666,95.1 666,94.3c0,-1.1 1.6,-1.4 8.2,-1.1 8.3,0.3 11.6,2 6.3,3.4 -2.2,0.6 -2.6,1.1 -2.3,3.8 0.3,3.1 0.4,3.1 6.3,3.6 3.3,0.3 6.6,0.9 7.4,1.4 0.8,0.5 2.8,4.1 4.6,8 1.8,3.9 4.9,10.4 6.9,14.5 2,4 3.6,8 3.6,8.7 0,1.2 -10.3,1.4 -63.8,1.6l-63.8,0.3 0,40.5 0,40.5 25.7,0.3 25.7,0.3 0.3,-11.3L631.5,197.5l7.5,0 7.5,0 0.3,8.8 0.3,8.8 2.2,-2.1c3.6,-3.4 10.3,-7.8 16,-10.4 10.9,-5.1 21.1,-2 28,8.4 3.3,5 4.6,5.8 15,9.5 2.6,0.9 5.2,2.3 5.9,3.1 1.7,2 4.2,1.8 8.9,-0.6 5.1,-2.7 16.1,-3 20.5,-0.7 3.2,1.7 8.5,7 12.8,13 2,2.8 3.7,3.9 6.4,4.3 6.9,1.1 12.4,3.7 16.8,7.9 3.9,3.7 4.4,4.7 4.4,8.7 0,5.5 -1.3,6.9 -6.2,6.9 -2.4,0 -3.8,0.5 -3.8,1.3 0,0.7 2.5,3.7 5.6,6.8 23.1,22.6 40.4,55.7 42.1,80.7l0.4,6.3 -3.2,0c-1.7,0 -8.9,1.3 -15.8,2.9C733.9,376.9 631.5,391.9 547,398.5c-51.7,4.1 -71.3,4.7 -149,5.1 -42.7,0.2 -77.8,0.2 -78,-0.1zM97.5,315.5c0,-0.5 -3.5,-0.9 -7.7,-1 -4.5,-0 -7.7,0.4 -7.8,1 -0,0.6 3.2,1 7.7,1 4.3,-0 7.8,-0.4 7.8,-1zM102.4,316.1c0.3,-0.5 -0.1,-1.1 -0.9,-1.5 -1.6,-0.6 -2.9,0.6 -1.8,1.7 0.9,0.9 2.1,0.8 2.7,-0.3zM151,315.5c-0.4,-0.6 -35,-1 -44,-0.4l-3.5,0.2 2.9,0.6c4,0.9 45.2,0.5 44.6,-0.4zM169,315.6c0,-1.9 -1.7,-2.9 -2.5,-1.5 -0.4,0.6 -3,1 -5.8,0.9 -2.8,-0.1 -5.8,-0 -6.6,0.1 -1.3,0.2 1.4,0.6 13.3,1.7 1,0.1 1.8,-0.5 1.8,-1.3zM190.8,295.8c0.2,-12.4 0.6,-16.8 1.6,-17.7 0.9,-0.8 11.7,-1 36.2,-0.9L263.5,277.5 264.1,295c0.3,9.6 0.6,17.6 0.8,17.7 0.1,0.1 1.1,0.1 2.2,0 1.9,-0.1 2,-0.9 2,-19.4 0,-19.2 -0,-19.3 -2.3,-19.8 -1.2,-0.3 -19.6,-0.4 -40.8,-0.3l-38.5,0.3 -0.3,18.5c-0.3,19.2 -0.1,21.5 2,20.8 0.9,-0.3 1.3,-4.8 1.5,-17zM102.8,309.5c1.3,-1.3 -1.4,-1.7 -10.8,-1.9 -8.3,-0.1 -10.1,0.1 -10.1,1.3 -0,1.3 1.7,1.5 10.2,1.3 5.6,-0.1 10.4,-0.5 10.7,-0.8zM169.6,308.8c1.1,-3.4 -3,-5.5 -4.2,-2.3 -0.4,0.9 -1.9,1.5 -4.1,1.5 -2.7,0 -3.3,-0.3 -2.5,-1.3 0.8,-1 -0.1,-1.3 -3.9,-1.3 -3.2,0 -4.9,0.4 -4.9,1.2 0,0.9 -2.6,1.2 -9,1.2 -4.9,-0 -9,-0.4 -9,-0.9 0,-0.5 -3.1,-1 -6.9,-1.2 -4.2,-0.2 -6.9,0.1 -6.8,0.7 0.1,0.6 -1.1,1.1 -2.6,1.3 -1.5,0.2 -2.8,-0.2 -2.8,-0.8 0,-0.6 -1.8,-1.1 -4,-1.1 -2.2,0 -4,0.2 -4,0.4 0,0.2 -0.3,1.1 -0.6,2 -0.7,1.8 5.2,2.1 41.9,2.1 20.8,0 22.8,-0.2 23.3,-1.7zM172.8,297.8c0.8,-0.8 1.2,-4.6 1.2,-10.3 0,-5.7 -0.4,-9.5 -1.2,-10.3 -1.3,-1.3 -17.3,-1.7 -20.2,-0.6 -1.3,0.5 -1.6,2.4 -1.6,10.8 0,5.6 0.3,10.5 0.7,10.9 1.2,1.2 19.9,0.7 21.1,-0.5zM131.8,286.6c0.2,-6.5 -0.1,-10.3 -0.9,-11.3 -0.9,-1.1 -4.1,-1.4 -14.8,-1.3 -7.5,0.1 -14.4,0.4 -15.4,0.6 -1.5,0.4 -1.8,1.7 -1.8,10.7 0,5.6 0.3,10.6 0.7,11 0.4,0.4 7.7,0.6 16.3,0.4L131.5,296.5l0.3,-9.9zM566.3,289.3c-5.1,-0.2 -13.6,-0.2 -19,-0 -5.4,0.2 -1.3,0.3 9.2,0.3 10.4,0 14.9,-0.1 9.8,-0.3zM544.2,261.3 L544.5,236.5l11.4,-0.3c6.3,-0.2 11.8,0.1 12.2,0.5 0.4,0.4 0.8,11.7 0.9,25 0.1,20 0.3,24.2 1.5,24.2 2.2,0 2.6,-4.9 2.3,-31L572.5,230.5l-16.5,0 -16.5,0 -0.3,22.5c-0.4,27.1 0.1,33 2.9,33 1.8,0 1.9,-1.1 2.2,-24.8zM470,229.4c0.2,-11.4 -0.1,-16.8 -0.9,-17.8 -0.9,-1.1 -4.4,-1.4 -17.3,-1.1L435.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L469.5,270.5 469.8,254.1zM517.8,255c0.2,-8.5 0,-16.5 -0.3,-17.8 -0.6,-2.3 -0.6,-2.3 -17.3,-2L483.5,235.5l-0.3,16.5c-0.2,9.1 -0,17.1 0.2,17.8 0.4,1 4.2,1.3 17.3,1L517.5,270.5 517.8,255zM336.6,263.3c-5.8,-7.4 -8.6,-14.1 -9.5,-22.3l-0.7,-6.5 -11,-0.5 -11,-0.5 -0.3,-10.8C303.9,212.1 303.9,212 301.5,212L299,212l0,14.5c0,9 0.4,14.5 1,14.5 0.6,0 1,5.3 1,14l0,14 20.1,0 20.1,0 -4.5,-5.8zM172.8,254.8c0.8,-0.8 1.2,-4.8 1.2,-11.3 -0,-11.7 -1.7,-15.7 -7.6,-18.2 -4.6,-1.9 -8.3,-1.1 -12,2.7 -2.8,2.9 -2.9,3.4 -3.2,14.6 -0.3,8.9 -0,11.8 1,12.4 2.1,1.3 19.2,1.1 20.6,-0.3zM201.4,255.4C202.7,254.9 203,252.9 203,243.4c0,-11.2 -0,-11.4 -3,-14.8 -3.9,-4.4 -7.8,-5.3 -12.7,-2.9 -5.6,2.7 -7.2,6.9 -7.2,18.4 -0,6.1 0.4,10 1.2,10.8 1.3,1.3 17.3,1.7 20.2,0.6zM231.3,254.6c1.1,-1.1 1.4,-3.9 1.3,-11.8 -0.2,-9 -0.5,-10.8 -2.4,-13.5 -3.2,-4.5 -8.7,-6 -13.4,-3.7 -5.7,2.7 -6.8,5.3 -7.3,17.1C208.9,255.8 209.1,256 221,256c6.4,0 9.3,-0.4 10.3,-1.4zM260.8,254.8c0.8,-0.8 1.2,-4.8 1.2,-11.3 -0,-8.3 -0.4,-10.6 -2,-13.4 -4.3,-7 -13,-7.5 -18.4,-1 -2.4,2.8 -2.5,3.7 -2.5,14.3 0,8.1 0.4,11.5 1.3,11.8 2.7,1.1 19.4,0.6 20.5,-0.5zM289.4,255.4C290.7,254.9 291,252.9 291,243.4c0,-11.2 -0,-11.4 -3,-14.8 -3.9,-4.4 -7.8,-5.3 -12.7,-2.9 -5.6,2.7 -7.2,6.9 -7.2,18.4 -0,6.1 0.4,10 1.2,10.8 1.3,1.3 17.3,1.7 20.2,0.6zM468.7,216.6c1.7,-0.6 1.9,-33.1 0.2,-34.1 -1.3,-0.8 -29.9,-1.6 -32.2,-0.9 -1.6,0.5 -1.8,2.2 -1.8,17.5 0,15.9 0.1,17 1.9,17.7 2.1,0.8 29.7,0.6 31.8,-0.2zM516.7,216.6c1.7,-0.6 1.9,-33.1 0.2,-34.1 -1.3,-0.8 -29.7,-1.6 -32.2,-0.8 -1.6,0.5 -1.8,2.2 -1.8,17.5 0,15.9 0.1,17 1.9,17.7 2.1,0.8 29.7,0.6 31.8,-0.2zM564.7,216.6c1.6,-0.6 1.9,-33.1 0.3,-34.1 -2,-1.2 -31.2,-1.5 -32.6,-0.4 -1,0.8 -1.3,5 -1.3,17.5 0,15.3 0.1,16.5 1.9,17.1 2.1,0.8 29.7,0.6 31.8,-0.2zM333.7,200.7c0.3,-5.7 0.3,-12 -0.1,-14l-0.7,-3.7 -16.7,0.3L299.5,183.5l0,9.1c0,7.7 0.3,9.5 2,11.4l2,2.2 0.5,-8.9 0.5,-8.9 12,0 12,0 0.3,12c0.3,14.1 0.7,15.8 2.8,12.7 1,-1.4 1.7,-5.7 2.1,-12.5zM328.5,153l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,167.5l0,-14.5zM371.5,165.8c0.3,-1.2 0.4,-7.9 0.3,-14.8L371.5,138.5l-15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 4,1.3 15,1.3 14.2,0 14.5,-0 15.1,-2.3zM468.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM516.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM564.8,159.8c0.8,-0.8 1.2,-6.1 1.2,-17.3 0,-11.2 -0.4,-16.5 -1.2,-17.3 -1.3,-1.3 -29.1,-1.8 -32.2,-0.6 -1.4,0.5 -1.6,3 -1.6,17.3 0,11.7 0.4,17.1 1.2,17.9 0.8,0.8 5.9,1.2 16.3,1.2 10.4,0 15.5,-0.4 16.3,-1.2zM328.5,110l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,124.5l0,-14.5zM371.5,110 L371.5,95.5 356.5,95.5 341.5,95.5 341.2,108.9c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L371.5,124.5 371.5,110zM489,93.5 L489,79l-13.5,0 -13.5,0 0,13.8c0,7.6 0.3,14.1 0.7,14.5 0.4,0.4 6.4,0.7 13.5,0.7L489,108 489,93.5zM546.2,92.3c0.2,-0.7 0.3,-6.7 0.1,-13.3 -0.2,-6.6 -0.3,-12.6 -0.3,-13.3C546,79.3 542.6,79 532.5,79l-13.5,0 0,13.8c0,7.6 0.3,14.1 0.7,14.5C520,107.7 526.1,108 533.1,108c9.3,0 12.8,-0.3 13.1,-1.3zM328.5,69l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,83.5 328.5,69zM371.5,81.8c0.3,-1.2 0.4,-7.9 0.3,-14.8L371.5,54.5l-15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8C341.8,83.7 345.5,84 356.4,84c14.2,0 14.5,-0 15.1,-2.3zM327.4,44.4C328.8,43.9 329,41.6 329,29.9c0,-12.7 -0.2,-13.9 -1.9,-14.9 -2.5,-1.3 -24.6,-1.3 -27.1,0 -1.8,0.9 -1.9,2.2 -1.9,14.3 0,9 0.4,13.7 1.2,14.5 1.3,1.3 25.2,1.8 28.2,0.6zM370.8,43.8c0.8,-0.8 1.2,-5.5 1.2,-14.5 0,-12.1 -0.2,-13.4 -1.9,-14.3 -2.1,-1.1 -23,-1.4 -26.8,-0.4 -2.2,0.6 -2.3,0.9 -2.3,14.9 0,10.5 0.3,14.4 1.3,14.8 2.8,1.1 27.4,0.7 28.5,-0.5zM143,154.4c0,-0.9 2.2,-6.1 4.9,-11.8 2.7,-5.6 5.9,-12.5 7.1,-15.4 1.4,-3.2 2.9,-5.3 3.9,-5.3 0.9,-0 20.5,-0.2 43.6,-0.3l42,-0.2 0.3,-2.9c0.2,-2 -0.3,-3.3 -1.8,-4.3C239.7,111.9 241.6,111 250.1,111c6.6,0 7.9,0.3 7.9,1.6 0,0.9 -0.9,1.8 -2.1,2.1 -1.6,0.4 -2,1.2 -1.8,3.7 0.3,3.1 0.4,3.1 6.8,3.6l6.5,0.5 7.6,15.5c4.2,8.5 7.4,16.1 7.1,16.8 -0.4,1 -15.3,1.3 -69.9,1.3C150.1,156 143,155.8 143,154.4z"
+        android:fillColor="#b6cc9b"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.3,-1.5 -25.5,-2 -5.2,-0.5 -16.7,-1.7 -25.5,-2.5 -8.8,-0.8 -18.9,-1.9 -22.5,-2.5 -3.6,-0.5 -13.9,-1.9 -23,-3.1 -37.6,-4.9 -89.9,-14.4 -126,-23 -24.6,-5.9 -28.3,-6.9 -30.2,-8.6 -1,-0.9 -4.4,-1.8 -8.4,-2.1 -6.2,-0.5 -6.6,-0.7 -6,-2.6C0.9,351.4 2.2,346.2 3.5,341 8.8,319.8 17.7,303.1 32.4,286.5 43.8,273.6 65.3,257.4 82.5,248.8c4.4,-2.2 9.7,-5.5 11.8,-7.4C96.6,239.2 99,238 100.8,238c2.5,0 37.4,-11.8 41.2,-13.9 1,-0.6 1.6,-2.8 1.8,-6.5 0.3,-5.1 0.1,-5.6 -1.8,-5.6 -2.9,0 -3.7,-2.8 -1.6,-5.9 0.9,-1.4 4.6,-8.7 8.2,-16.1 3.6,-7.4 6.8,-14.2 7.3,-15 0.7,-1.3 9.2,-1.5 66.2,-1.6L287.5,173.3 287.8,89.6 288,5.9 284.5,4.4C282.6,3.6 281,2.3 281,1.5 281,0.2 287.8,0 334,0c52.3,0 53,0 53,2 0,1.1 -0.6,2 -1.4,2 -0.8,0 -2.1,0.7 -3,1.6C381.2,7 381,16.5 381,95.5c0,54.3 0.4,89.3 1,90.9 0.6,1.5 2,2.8 3.8,3.2 3.5,0.9 11,4.6 16,7.9 3.6,2.4 4.4,2.6 13.3,2.3 5.2,-0.2 9.8,-0.8 10.2,-1.3 0.4,-0.6 0.7,-18.6 0.8,-40.2 0,-37.8 -0.1,-39.3 -1.9,-40.3 -1.1,-0.6 -3.5,-1 -5.5,-1 -3.9,0 -4.8,-2 -2.2,-4.9 0.8,-0.9 2.9,-5.4 4.7,-10.1 3.3,-8.5 3.3,-8.5 3.7,-28.7 0.4,-19 0.3,-20.3 -1.5,-20.8 -3.4,-1 -4.8,-2.1 -4.8,-3.5 0,-1.1 2.7,-1.4 13.3,-1.7 12.4,-0.3 13.3,-0.2 13.3,1.6 0,1 -1.1,2.4 -2.5,3 -2.1,1 -2.5,1.8 -2.5,5.5 0,2.4 0.5,4.9 1.2,5.5 0.9,0.9 16.5,1.2 64,1.2l62.8,0 1.4,2.8c0.8,1.5 4,9.9 7.2,18.8 3.2,8.8 6.5,16.6 7.3,17.3 1.2,1 11,1.2 44.1,1L670.5,103.5l0.3,-2.4c0.2,-1.6 -0.4,-3 -1.9,-4.1C665.7,94.5 667.4,93 673.5,93c8,0 11.6,2 6,3.4 -2,0.5 -2.5,1.3 -2.5,3.6C677,103.8 679.3,105 686.5,105l5.6,0 7.5,15.7c4.1,8.6 7.1,16 6.7,16.5 -0.4,0.4 -29.1,0.9 -63.8,1.1L579.5,138.5l-0.2,40c-0.1,22 0.1,40.5 0.5,41.2 0.6,0.9 7.1,1.2 24.7,1.3 13.2,0 24.5,0.1 25.2,0 0.9,-0 1.3,-3.4 1.5,-11.8L631.5,197.5l7.5,0 7.5,0 0.3,8.8c0.2,5.6 0.7,8.8 1.4,8.8 0.6,0 3.6,-1.8 6.5,-4.1 17.7,-13.4 30.3,-11.6 40.2,5.9 0.4,0.7 3.6,2 7.2,2.8 3.5,0.8 8.1,2.6 10.2,4 4.6,3 5.7,3 11.1,0.3 3.1,-1.6 6,-2.2 10.9,-2.3 5.8,-0 7.2,0.3 11,3 2.4,1.7 6.1,5.7 8.4,8.9 4,5.8 4.1,5.9 11.5,7.7 8.6,2.1 14,5.5 16.6,10.4 1.7,3.2 1.7,3.7 0.4,6.2 -1.2,2.2 -2.3,2.8 -6,3 -2.5,0.2 -4.9,0.7 -5.3,1.2 -0.5,0.5 4.1,6 10.6,12.8 16.9,17.6 28.4,35.9 34.5,55.2 3.3,10.4 6.4,24 5.8,25.6 -0.3,0.9 -1.9,1.4 -4,1.4 -1.9,0 -7.4,0.9 -12.3,2.1 -59.6,13.9 -150.2,28.1 -223.8,35 -45.7,4.3 -66,5.7 -120.5,8.6 -17.4,0.9 -122.1,1.3 -125,0.5zM169.8,311.8 L169.5,305.8 125,305.8 80.5,305.7 80.5,311.6 80.5,317.5 124,318c23.9,0.3 44.1,0.3 44.8,0.1 0.9,-0.3 1.2,-2.1 1,-6.4zM191.1,296.4c-0.1,-13.6 0.2,-17.3 1.3,-18.3 1,-0.9 10.8,-1.1 36.3,-0.9L263.5,277.5l0.5,18c0.4,13.5 0.8,18 1.8,17.9 0.7,-0.1 1.7,-0.2 2.3,-0.3 0.6,-0.1 1,-7.4 1,-19.6 0,-19.4 -0,-19.5 -2.3,-20 -1.2,-0.3 -19.6,-0.4 -40.8,-0.3l-38.5,0.3 -0.3,19c-0.2,10.4 -0,19.6 0.2,20.3 0.3,0.7 1.2,1.2 2.1,1 1.4,-0.3 1.6,-2.5 1.5,-17.4zM172.8,297.8c0.8,-0.8 1.2,-4.6 1.2,-10.3 0,-5.7 -0.4,-9.5 -1.2,-10.3 -1.3,-1.3 -17.3,-1.7 -20.2,-0.6 -1.3,0.5 -1.6,2.4 -1.6,10.8 0,5.6 0.3,10.5 0.7,10.9 1.2,1.2 19.9,0.7 21.1,-0.5zM131.8,286.6c0.2,-6.5 -0.1,-10.3 -0.9,-11.3 -0.9,-1.1 -4.1,-1.4 -14.8,-1.3 -7.5,0.1 -14.4,0.4 -15.4,0.6 -1.5,0.4 -1.8,1.7 -1.8,10.7 0,5.6 0.3,10.6 0.7,11 0.4,0.4 7.7,0.6 16.3,0.4L131.5,296.5l0.3,-9.9zM576.7,290.5c0.3,-0.9 -0.1,-2.1 -1.1,-2.8 -1.5,-1.1 -1.7,-4.4 -1.9,-29.7L573.5,229.5 556.6,229.2c-12.9,-0.2 -17.1,0 -17.8,1 -0.5,0.7 -0.8,13.5 -0.7,28.4 0.1,17.5 -0.3,27.8 -0.9,29.1 -2.1,3.8 0.1,4.3 20.1,4.3 16.1,0 18.9,-0.2 19.4,-1.5zM544.5,283.8c-0.3,-0.7 -0.4,-11.6 -0.2,-24.3L544.5,236.5l12,0 12,0 0,24 0,24 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM469.8,271.6c1.3,-0.8 1.8,-32.9 0.6,-36C469.9,234.2 467.3,234 452.4,234c-15.5,0 -17.4,0.2 -18.2,1.8 -1.1,2.3 -0.8,34.1 0.4,35.3 1.5,1.5 32.9,2 35.2,0.6zM516.4,272 L519,271 519,254.1c0,-9.3 -0.3,-17.7 -0.6,-18.5C517.9,234.2 515.3,234 500.5,234c-11.3,0 -17.6,0.4 -18,1.1 -1,1.6 -0.8,35 0.2,36 0.5,0.5 7.6,1 15.8,1.2 8.2,0.2 15.1,0.4 15.2,0.5 0.1,0.1 1.3,-0.2 2.8,-0.8zM342.3,269.4c0.3,-0.3 -1.6,-3.3 -4.3,-6.7 -5.4,-6.7 -8.9,-14.6 -9.7,-21.9 -0.3,-2.6 -1,-5.2 -1.7,-5.7 -0.7,-0.5 -5.9,-1.1 -11.6,-1.3L304.5,233.5 304.2,222.8 303.9,212l-2.6,0 -2.6,0 0.7,28.3c0.4,15.5 0.9,28.6 1.2,29 0.5,0.9 40.7,1 41.6,0.2zM172.8,254.8c0.8,-0.8 1.2,-4.8 1.2,-11.3 -0,-11.7 -1.7,-15.7 -7.6,-18.2 -4.6,-1.9 -8.3,-1.1 -12,2.7 -2.8,2.9 -2.9,3.4 -3.2,14.6 -0.3,8.9 -0,11.8 1,12.4 2.1,1.3 19.2,1.1 20.6,-0.3zM201.4,255.4C202.7,254.9 203,252.9 203,243.4c0,-11.2 -0,-11.4 -3,-14.8 -3.9,-4.4 -7.8,-5.3 -12.7,-2.9 -5.6,2.7 -7.2,6.9 -7.2,18.4 -0,6.1 0.4,10 1.2,10.8 1.3,1.3 17.3,1.7 20.2,0.6zM231.3,254.6c1.1,-1.1 1.4,-3.9 1.3,-11.8 -0.2,-9 -0.5,-10.8 -2.4,-13.5 -3.2,-4.5 -8.7,-6 -13.4,-3.7 -5.7,2.7 -6.8,5.3 -7.3,17.1C208.9,255.8 209.1,256 221,256c6.4,0 9.3,-0.4 10.3,-1.4zM260.8,254.8c0.8,-0.8 1.2,-4.8 1.2,-11.3 -0,-8.3 -0.4,-10.6 -2,-13.4 -4.3,-7 -13,-7.5 -18.4,-1 -2.4,2.8 -2.5,3.7 -2.5,14.3 0,8.1 0.4,11.5 1.3,11.8 2.7,1.1 19.4,0.6 20.5,-0.5zM289.4,255.4C290.7,254.9 291,252.9 291,243.4c0,-11.2 -0,-11.4 -3,-14.8 -3.9,-4.4 -7.8,-5.3 -12.7,-2.9 -5.6,2.7 -7.2,6.9 -7.2,18.4 -0,6.1 0.4,10 1.2,10.8 1.3,1.3 17.3,1.7 20.2,0.6zM469.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.8,-1.8 -33.2,-1.7 -35,0.2 -1.1,1.1 -1.3,5.2 -1.2,18.2 0.1,15 0.3,16.9 2,18.1 2.3,1.7 30.5,1.9 33.5,0.3zM517.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.7,-0.3 -1.1,0.7 -1.4,4.7 -1.3,18.2 0,15.5 0.2,17.5 1.8,18.6 2.2,1.6 30.5,1.8 33.5,0.3zM565.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.6,-0.3 -1,0.7 -1.3,4.7 -1.2,18.2 0.1,15 0.3,17.6 1.8,18.6 2.1,1.6 30.5,1.7 33.4,0.2zM332.4,213.3c1,-2.7 1.9,-22.7 1.2,-26.7l-0.7,-3.7 -16.7,0.3L299.5,183.5 299.2,190c-0.4,8.1 0.4,12.4 2.6,14.7 1.6,1.6 1.7,1.2 2.2,-7.2l0.5,-8.9 12,0 12,0 0.3,12c0.1,6.6 0.5,12.6 0.7,13.3 0.6,1.8 2.2,1.5 2.9,-0.4zM328.5,153l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,167.5l0,-14.5zM371.5,165.8c0.3,-1.2 0.4,-7.9 0.3,-14.8L371.5,138.5l-15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 4,1.3 15,1.3 14.2,0 14.5,-0 15.1,-2.3zM469.8,160.8c1.7,-1.7 1.7,-34.9 0,-36.6 -0.8,-0.8 -6.3,-1.2 -18,-1.2 -15,0 -16.9,0.2 -17.6,1.8 -1,2.1 -0.9,34.4 0.2,36.1 1,1.7 33.7,1.6 35.4,-0zM518.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.6,-1.6 -34.4,-1.7 -35.4,-0.1 -0.8,1.4 -0.8,35.5 0.1,36.9 0.4,0.6 7.6,1 17.9,1 14.9,0 17.4,-0.2 17.9,-1.6zM566.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.3,-1.3 -31.1,-1.8 -34.2,-0.6 -1.4,0.5 -1.6,3.1 -1.6,18.3 0,12.4 0.4,18.1 1.2,18.9 0.8,0.8 6.2,1.2 17.9,1.2 14.3,0 16.8,-0.2 17.3,-1.6zM328.5,110l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,124.5l0,-14.5zM371.5,110 L371.5,95.5 356.5,95.5 341.5,95.5 341.2,108.9c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L371.5,124.5l0,-14.5zM489,107.5c0.6,-0.7 0.9,-6.5 0.7,-14.6L489.5,79.5 476.1,79.2c-10.1,-0.2 -13.6,0 -14.2,1 -0.4,0.7 -0.8,7 -0.8,14 -0,10.5 0.3,12.9 1.6,13.6 2.5,1.4 25.3,1.1 26.5,-0.3zM546.3,108.2c0.4,-0.1 0.7,-6.6 0.5,-14.4L546.5,79.5l-14,0 -14,0 -0.3,13.5c-0.2,11.1 -0,13.7 1.2,14.6 1.2,0.9 22.8,1.3 26.8,0.6zM328.5,69l0,-14.5 -15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8 0.4,1 3.7,1.3 15.3,1.1L328.5,83.5 328.5,69zM371.5,81.8c0.3,-1.2 0.4,-7.9 0.3,-14.8L371.5,54.5l-15,0 -15,0 -0.3,13.4c-0.2,7.4 -0.1,14 0.2,14.8C341.8,83.7 345.5,84 356.4,84c14.2,0 14.5,-0 15.1,-2.3zM327.4,44.4C328.8,43.9 329,41.6 329,29.9c0,-12.7 -0.2,-13.9 -1.9,-14.9 -2.5,-1.3 -24.6,-1.3 -27.1,0 -1.8,0.9 -1.9,2.2 -1.9,14.3 0,9 0.4,13.7 1.2,14.5 1.3,1.3 25.2,1.8 28.2,0.6zM370.8,43.8c0.8,-0.8 1.2,-5.5 1.2,-14.5 0,-12.1 -0.2,-13.4 -1.9,-14.3 -2.1,-1.1 -23,-1.4 -26.8,-0.4 -2.2,0.6 -2.3,0.9 -2.3,14.9 0,10.5 0.3,14.4 1.3,14.8 2.8,1.1 27.4,0.7 28.5,-0.5zM143.4,154.6c-0.3,-0.8 0.4,-3.1 1.5,-5.3 1.1,-2.1 4.5,-9.2 7.5,-15.6l5.5,-11.7 43.8,-0.3L245.5,121.5l0.3,-3.2c0.2,-2.5 -0.1,-3.3 -1.8,-3.8 -4.2,-1.3 -1.4,-3 5.5,-3.3 7.8,-0.3 10.2,0.9 5.9,3 -2.9,1.4 -4,4.3 -2.5,6.6 0.5,0.8 3.5,1.4 7.6,1.6 3.7,0.2 7.1,0.7 7.5,1.2 1.9,2.1 14.2,30.4 13.6,31.3C281.1,155.7 259.5,156 212.4,156c-56.9,0 -68.6,-0.2 -69,-1.4z"
+        android:fillColor="#f4aa69"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.3,-1.5 -25.5,-2 -5.2,-0.5 -16.7,-1.7 -25.5,-2.5 -8.8,-0.8 -18.9,-1.9 -22.5,-2.5 -3.6,-0.5 -13.9,-1.9 -23,-3.1 -37.6,-4.9 -89.9,-14.4 -126,-23 -24.6,-5.9 -28.3,-6.9 -30.2,-8.6 -1,-0.9 -4.4,-1.8 -8.4,-2.1 -6.2,-0.5 -6.6,-0.7 -6,-2.6C0.9,351.4 2.2,346.2 3.5,341 8.8,319.8 17.7,303.1 32.4,286.5 43.8,273.6 65.3,257.4 82.5,248.8c4.4,-2.2 9.7,-5.5 11.8,-7.4C96.7,239.2 99,238 100.9,238c1.6,0 8.9,-2.2 16.2,-4.9 7.3,-2.7 16.4,-5.9 20.1,-7.1 6.3,-2.1 6.8,-2.4 7.4,-5.6 0.9,-4.9 -0.2,-8.4 -2.6,-8.4 -2.8,0 -3.6,-2.8 -1.5,-5.9 0.9,-1.4 4.6,-8.7 8.2,-16.1 3.6,-7.4 6.8,-14.2 7.3,-15 0.7,-1.3 8.2,-1.5 56.2,-1.8 30.5,-0.2 60,-0 65.6,0.3l10.2,0.6 4.2,8.7c2.3,4.8 5.3,11.6 6.7,15.2 3.7,9.7 4.7,9.5 5.3,-0.8l0.5,-8.7 12,0 12,0 0.5,12.9c0.3,7.8 0.9,13.1 1.6,13.3 0.6,0.2 2.1,-1.9 3.3,-4.6C339.4,197.8 357.8,187 373.1,187c7.6,0 19.6,4.4 28.6,10.6 3.6,2.4 4.4,2.6 13.3,2.3 5.2,-0.2 9.8,-0.8 10.2,-1.3 0.4,-0.6 0.7,-18.6 0.8,-40.2 0,-37.8 -0.1,-39.3 -1.9,-40.3 -1.1,-0.6 -3.5,-1 -5.5,-1 -3.9,0 -4.8,-2 -2.2,-4.9 0.8,-0.9 2.9,-5.4 4.7,-10.1 3.3,-8.5 3.3,-8.5 3.7,-28.7 0.4,-19 0.3,-20.3 -1.5,-20.8 -3.4,-1 -4.8,-2.1 -4.8,-3.5 0,-1.1 2.7,-1.4 13.3,-1.7 12.4,-0.3 13.3,-0.2 13.3,1.6 0,1 -1.1,2.4 -2.5,3 -2.1,1 -2.5,1.8 -2.5,5.5 0,2.4 0.5,4.9 1.2,5.5 0.9,0.9 16.5,1.2 64,1.2l62.8,0 1.4,2.8c0.8,1.5 4,9.9 7.2,18.8 3.2,8.8 6.5,16.6 7.3,17.3 1.2,1 11,1.2 44.1,1L670.5,103.5l0.3,-2.4c0.2,-1.6 -0.4,-3 -1.9,-4.1C665.7,94.5 667.4,93 673.5,93c8,0 11.6,2 6,3.4 -2,0.5 -2.5,1.3 -2.5,3.6C677,103.8 679.3,105 686.5,105l5.6,0 7.5,15.7c4.1,8.6 7.1,16 6.7,16.5 -0.4,0.4 -29.1,0.9 -63.8,1.1L579.5,138.5l-0.2,40c-0.1,22 0.1,40.5 0.5,41.2 0.6,0.9 7.1,1.2 24.7,1.3 13.2,0 24.5,0.1 25.2,0 0.9,-0 1.3,-3.4 1.5,-11.8L631.5,197.5l7.5,0 7.5,0 0.3,8.8c0.2,5.6 0.7,8.8 1.4,8.8 0.6,0 3.6,-1.8 6.5,-4.1 17.7,-13.4 30.3,-11.6 40.2,5.9 0.4,0.7 3.6,2 7.2,2.8 3.5,0.8 8.1,2.6 10.2,4 4.6,3 5.7,3 11.1,0.3 3.1,-1.6 6,-2.2 10.9,-2.3 5.8,-0 7.2,0.3 11,3 2.4,1.7 6.1,5.7 8.4,8.9 4,5.8 4.1,5.9 11.5,7.7 8.6,2.1 14,5.5 16.6,10.4 1.7,3.2 1.7,3.7 0.4,6.2 -1.2,2.2 -2.3,2.8 -6,3 -2.5,0.2 -4.9,0.7 -5.3,1.2 -0.5,0.5 4.1,6 10.6,12.8 16.9,17.6 28.4,35.9 34.5,55.2 3.3,10.4 6.4,24 5.8,25.6 -0.3,0.9 -1.9,1.4 -4,1.4 -1.9,0 -7.4,0.9 -12.3,2.1 -59.6,13.9 -150.2,28.1 -223.8,35 -45.7,4.3 -66,5.7 -120.5,8.6 -17.4,0.9 -122.1,1.3 -125,0.5zM170.2,313.2c0.8,-8.5 4.4,-7.9 -45.4,-7.8L80.5,305.5l0,6 0,6 43.5,0.5c23.9,0.3 44,0.4 44.7,0.2 0.6,-0.2 1.3,-2.4 1.6,-5zM191.1,296.4c-0.1,-13.6 0.2,-17.3 1.3,-18.3 1,-0.9 10.8,-1.1 36.3,-0.9L263.5,277.5l0.5,18c0.4,13.5 0.8,18 1.8,17.9 0.7,-0.1 1.7,-0.2 2.3,-0.3 0.7,-0.1 0.9,-7 0.8,-19.9L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -0.4,0.7 -0.8,9.7 -0.8,19.9 -0,19 0.2,20 3.8,19.5 1.1,-0.1 1.3,-3.6 1.2,-17.3zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM576.7,290.5c0.3,-0.9 -0.1,-2.1 -1.1,-2.8 -1.5,-1.1 -1.7,-4.4 -1.9,-29.7L573.5,229.5 556.6,229.2c-12.9,-0.2 -17.1,0 -17.8,1 -0.5,0.7 -0.8,13.5 -0.7,28.4 0.1,17.5 -0.3,27.8 -0.9,29.1 -2.1,3.8 0.1,4.3 20.1,4.3 16.1,0 18.9,-0.2 19.4,-1.5zM544.5,283.8c-0.3,-0.7 -0.4,-11.6 -0.2,-24.3L544.5,236.5l12,0 12,0 0,24 0,24 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM469.8,271.6c1.3,-0.8 1.8,-32.9 0.6,-36C469.9,234.2 467.3,234 452.4,234c-15.5,0 -17.4,0.2 -18.2,1.8 -1.1,2.3 -0.8,34.1 0.4,35.3 1.5,1.5 32.9,2 35.2,0.6zM516.4,272 L519,271 519,254.1c0,-9.3 -0.3,-17.7 -0.6,-18.5C517.9,234.2 515.3,234 500.5,234c-11.3,0 -17.6,0.4 -18,1.1 -1,1.6 -0.8,35 0.2,36 0.5,0.5 7.6,1 15.8,1.2 8.2,0.2 15.1,0.4 15.2,0.5 0.1,0.1 1.3,-0.2 2.8,-0.8zM342.3,269.4c0.3,-0.3 -1.6,-3.3 -4.3,-6.7 -5.4,-6.7 -8.9,-14.6 -9.7,-21.9 -0.3,-2.6 -1,-5.2 -1.7,-5.7 -0.7,-0.5 -5.9,-1.1 -11.6,-1.3L304.5,233.5 304.2,222.7 303.9,211.9 300.7,212.2 297.5,212.5l-0.3,13.8c-0.2,11.6 -0,13.9 1.3,14.4 1.3,0.5 1.5,2.9 1.5,14.3 0,7.5 0.3,14 0.7,14.4 0.8,0.8 40.8,0.9 41.6,0.1zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM469.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.8,-1.8 -33.2,-1.7 -35,0.2 -1.1,1.1 -1.3,5.2 -1.2,18.2 0.1,15 0.3,16.9 2,18.1 2.3,1.7 30.5,1.9 33.5,0.3zM517.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.7,-0.3 -1.1,0.7 -1.4,4.7 -1.3,18.2 0,15.5 0.2,17.5 1.8,18.6 2.2,1.6 30.5,1.8 33.5,0.3zM565.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.6,-0.3 -1,0.7 -1.3,4.7 -1.2,18.2 0.1,15 0.3,17.6 1.8,18.6 2.1,1.6 30.5,1.7 33.4,0.2zM469.8,160.8c1.7,-1.7 1.7,-34.9 0,-36.6 -0.8,-0.8 -6.3,-1.2 -18,-1.2 -15,0 -16.9,0.2 -17.6,1.8 -1,2.1 -0.9,34.4 0.2,36.1 1,1.7 33.7,1.6 35.4,-0zM518.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.6,-1.6 -34.4,-1.7 -35.4,-0.1 -0.8,1.4 -0.8,35.5 0.1,36.9 0.4,0.6 7.6,1 17.9,1 14.9,0 17.4,-0.2 17.9,-1.6zM566.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.3,-1.3 -31.1,-1.8 -34.2,-0.6 -1.4,0.5 -1.6,3.1 -1.6,18.3 0,12.4 0.4,18.1 1.2,18.9 0.8,0.8 6.2,1.2 17.9,1.2 14.3,0 16.8,-0.2 17.3,-1.6zM489,107.5c0.6,-0.7 0.9,-6.5 0.7,-14.6L489.5,79.5 476.1,79.2c-10.1,-0.2 -13.6,0 -14.2,1 -0.4,0.7 -0.8,7 -0.8,14 -0,10.5 0.3,12.9 1.6,13.6 2.5,1.4 25.3,1.1 26.5,-0.3zM546.3,108.2c0.4,-0.1 0.7,-6.6 0.5,-14.4L546.5,79.5l-14,0 -14,0 -0.3,13.5c-0.2,11.1 -0,13.7 1.2,14.6 1.2,0.9 22.8,1.3 26.8,0.6zM143.4,154.6c-0.3,-0.8 0.4,-3.1 1.5,-5.3 1.1,-2.1 4.5,-9.2 7.5,-15.6l5.5,-11.7 43.8,-0.3L245.5,121.5l0.3,-3.2c0.2,-2.5 -0.1,-3.3 -1.8,-3.8 -4.2,-1.3 -1.4,-3 5.5,-3.3 7.8,-0.3 10.2,0.9 5.9,3 -2.9,1.4 -4,4.3 -2.5,6.6 0.5,0.8 3.5,1.4 7.6,1.6 3.7,0.2 7.1,0.7 7.5,1.2 1.9,2.1 14.2,30.4 13.6,31.3C281.1,155.7 259.5,156 212.4,156c-56.9,0 -68.6,-0.2 -69,-1.4zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#b6e064"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.3,-1.5 -25.5,-2 -5.2,-0.5 -16.7,-1.7 -25.5,-2.5 -8.8,-0.8 -18.9,-1.9 -22.5,-2.5 -3.6,-0.5 -13.9,-1.9 -23,-3.1C125.5,383.1 63.4,371.2 22.7,360.5 19.5,359.7 16.6,359 16.3,359c-0.3,0 -0.3,-0.9 -0.1,-2 0.4,-1.7 -0.2,-2.1 -3.9,-2.6 -2.4,-0.4 -6,-0.5 -7.9,-0.2 -2.9,0.3 -3.4,0.1 -2.9,-1.1C1.9,352.2 2.8,348.6 3.6,345 11.9,306.1 38.1,273.7 79.4,251.4c4.9,-2.6 11,-6.7 13.6,-9 3.8,-3.4 5.6,-4.3 10,-4.8 5.3,-0.6 37.3,-11.1 39.7,-12.9 1.6,-1.3 2.7,-7.1 1.9,-10.3C144.2,212.9 143.3,212 141.9,212c-2.8,0 -3.6,-2.8 -1.5,-5.9 0.9,-1.4 4.6,-8.7 8.2,-16.1 3.6,-7.4 6.8,-14.2 7.3,-15 0.7,-1.3 8.2,-1.5 56.2,-1.8 30.5,-0.2 60,-0 65.6,0.3l10.2,0.6 4.2,8.7c2.3,4.8 5.3,11.6 6.7,15.2 3.7,9.7 4.7,9.5 5.3,-0.8l0.5,-8.7 12,0 12,0 0.5,12.9c0.5,14.1 1.6,16.4 4.4,9.5 2.5,-6.3 10.8,-14.4 18.7,-18.4 16.5,-8.3 30.9,-6.9 48.5,4.5l6.3,4.1 8.7,-0.7c4.8,-0.4 9.1,-1.2 9.5,-1.9 0.4,-0.6 0.7,-18.8 0.8,-40.4 0,-37.8 -0.1,-39.3 -1.9,-40.3 -1.1,-0.6 -3.5,-1 -5.5,-1 -3.9,0 -4.8,-2 -2.2,-4.9 0.8,-0.9 2.9,-5.4 4.7,-10.1 3.3,-8.5 3.3,-8.5 3.7,-28.7 0.4,-19 0.3,-20.3 -1.5,-20.8 -3.4,-1 -4.8,-2.1 -4.8,-3.5 0,-1.1 2.7,-1.4 13.3,-1.7 12.4,-0.3 13.3,-0.2 13.3,1.6 0,1 -1.1,2.4 -2.5,3 -2.1,1 -2.5,1.8 -2.5,5.5 0,2.4 0.5,4.9 1.2,5.5 0.9,0.9 16.5,1.2 64,1.2l62.8,0 1.4,2.8c0.8,1.5 4,9.9 7.2,18.8 3.2,8.8 6.5,16.6 7.3,17.3 1.2,1 11,1.2 44.1,1L670.5,103.5l0.3,-2.4c0.2,-1.6 -0.4,-3 -1.9,-4.1C665.7,94.5 667.4,93 673.5,93c8,0 11.6,2 6,3.4 -2,0.5 -2.5,1.3 -2.5,3.6C677,103.8 679.3,105 686.5,105l5.6,0 7.5,15.7c4.1,8.6 7.1,16 6.7,16.5 -0.4,0.4 -29.1,0.9 -63.8,1.1L579.5,138.5l-0.2,40c-0.1,22 0.1,40.5 0.5,41.2 0.5,0.8 8.1,1.3 26,1.5l25.2,0.3 0.3,-12 0.3,-12 7.5,0 7.5,0 0,9.4 0,9.4 -5.3,2.8c-2.9,1.5 -6.1,3.5 -7.1,4.3 -1.8,1.7 -4.7,9.2 -3.9,10.1 0.3,0.3 14.8,0.9 32.3,1.5 33,1 36.4,1.5 31.6,4.9 -4.7,3.3 -8,7.3 -9.4,11.6 -1.3,3.8 -1.3,4.6 -0.1,5.6 0.8,0.6 1.8,0.9 2.2,0.6 0.5,-0.3 12.1,-0.1 25.8,0.4 13.7,0.5 31.4,1.1 39.2,1.4 13.8,0.5 18.2,1.4 18.2,3.7 0,0.6 4.2,5.4 9.3,10.7 21.3,21.9 33.6,43.7 39.2,69.6 2.6,12.2 2.8,13 2.1,12.3 -0.4,-0.4 -3,-0.1 -5.9,0.7 -2.9,0.7 -8.1,2 -11.7,2.9 -11.2,2.8 -54.6,11.4 -75.5,15 -50.3,8.6 -99.4,15.2 -146,19.5 -45.7,4.3 -66,5.7 -120.5,8.6 -17.4,0.9 -122.1,1.3 -125,0.5zM372.5,319.1c0.8,-3.8 -0.8,-7.5 -4.7,-10.3 -4.1,-3 -8.2,-4.6 -12.8,-5 -3,-0.2 -4,-1.1 -7.3,-6.1C343.5,291.3 336.3,286 331.8,286c-4.4,0 -13.1,3.7 -18.9,8 -3,2.2 -7.4,4.9 -9.9,6.1 -6.5,3.1 -10.6,6.5 -14.1,11.6 -5.1,7.6 -4.9,7.7 15.1,8.4 9.6,0.3 28,0.9 40.9,1.3 12.9,0.4 23.6,0.8 23.8,1.1 1,1 3.1,-0.9 3.7,-3.4zM170.1,318.3c0.1,-0.4 0.2,-2.8 0.4,-5.3 0.4,-8.6 3.8,-8 -43,-8 -26.6,0 -42.2,-0.3 -43.4,-1C80.9,302.3 79,305.2 79,311.9c0,3.2 0.3,6.1 0.7,6.4 0.9,0.9 90.3,0.8 90.5,-0.1zM191.2,296.7c-0.3,-14.1 -0,-17.5 1.1,-18.5 1.1,-0.9 10.5,-1.1 36.3,-0.9L263.5,277.5l0.3,18.3 0.3,18.3 2.5,0 2.5,0 -0.3,-20.3L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -1,1.5 -1.1,38.1 -0.2,39.1 0.4,0.4 1.6,0.7 2.8,0.7 2,0 2.1,-0.3 1.8,-17.3zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM576.7,290.5c0.3,-0.9 -0.1,-2.1 -1.1,-2.8 -1.5,-1.1 -1.7,-4.4 -1.9,-29.7L573.5,229.5 556.6,229.2c-12.9,-0.2 -17.1,0 -17.8,1 -0.5,0.7 -0.8,13.5 -0.7,28.4 0.1,17.5 -0.3,27.8 -0.9,29.1 -2.1,3.8 0.1,4.3 20.1,4.3 16.1,0 18.9,-0.2 19.4,-1.5zM544.5,283.8c-0.3,-0.7 -0.4,-11.6 -0.2,-24.3L544.5,236.5l12,0 12,0 0,24 0,24 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM469.8,271.6c1.3,-0.8 1.8,-32.9 0.6,-36C469.9,234.2 467.3,234 452.4,234c-15.5,0 -17.4,0.2 -18.2,1.8 -1.1,2.3 -0.8,34.1 0.4,35.3 1.5,1.5 32.9,2 35.2,0.6zM516.4,272 L519,271 519,254.1c0,-9.3 -0.3,-17.7 -0.6,-18.5C517.9,234.2 515.3,234 500.5,234c-11.3,0 -17.6,0.4 -18,1.1 -1,1.6 -0.8,35 0.2,36 0.5,0.5 7.6,1 15.8,1.2 8.2,0.2 15.1,0.4 15.2,0.5 0.1,0.1 1.3,-0.2 2.8,-0.8zM342.3,269.4c0.3,-0.3 -1.6,-3.3 -4.3,-6.7 -5.4,-6.7 -8.9,-14.6 -9.7,-21.9 -0.3,-2.6 -1,-5.2 -1.7,-5.7 -0.7,-0.5 -5.9,-1.1 -11.6,-1.3L304.5,233.5 304.2,222.7 303.9,211.9 300.7,212.2 297.5,212.5l-0.3,13.8c-0.2,11.6 -0,13.9 1.3,14.4 1.3,0.5 1.5,2.9 1.5,14.3 0,7.5 0.3,14 0.7,14.4 0.8,0.8 40.8,0.9 41.6,0.1zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM469.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.8,-1.8 -33.2,-1.7 -35,0.2 -1.1,1.1 -1.3,5.2 -1.2,18.2 0.1,15 0.3,16.9 2,18.1 2.3,1.7 30.5,1.9 33.5,0.3zM517.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.7,-0.3 -1.1,0.7 -1.4,4.7 -1.3,18.2 0,15.5 0.2,17.5 1.8,18.6 2.2,1.6 30.5,1.8 33.5,0.3zM565.1,218c1.8,-1 1.9,-2.3 1.9,-18.3 0,-12.1 -0.4,-17.6 -1.2,-18.5 -1.4,-1.4 -32.5,-1.7 -34.6,-0.3 -1,0.7 -1.3,4.7 -1.2,18.2 0.1,15 0.3,17.6 1.8,18.6 2.1,1.6 30.5,1.7 33.4,0.2zM469.8,160.8c1.7,-1.7 1.7,-34.9 0,-36.6 -0.8,-0.8 -6.3,-1.2 -18,-1.2 -15,0 -16.9,0.2 -17.6,1.8 -1,2.1 -0.9,34.4 0.2,36.1 1,1.7 33.7,1.6 35.4,-0zM518.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.6,-1.6 -34.4,-1.7 -35.4,-0.1 -0.8,1.4 -0.8,35.5 0.1,36.9 0.4,0.6 7.6,1 17.9,1 14.9,0 17.4,-0.2 17.9,-1.6zM566.4,160.4c1.2,-3.1 0.7,-35 -0.6,-36.2 -1.3,-1.3 -31.1,-1.8 -34.2,-0.6 -1.4,0.5 -1.6,3.1 -1.6,18.3 0,12.4 0.4,18.1 1.2,18.9 0.8,0.8 6.2,1.2 17.9,1.2 14.3,0 16.8,-0.2 17.3,-1.6zM489,107.5c0.6,-0.7 0.9,-6.5 0.7,-14.6L489.5,79.5 476.1,79.2c-10.1,-0.2 -13.6,0 -14.2,1 -0.4,0.7 -0.8,7 -0.8,14 -0,10.5 0.3,12.9 1.6,13.6 2.5,1.4 25.3,1.1 26.5,-0.3zM546.3,108.2c0.4,-0.1 0.7,-6.6 0.5,-14.4L546.5,79.5l-14,0 -14,0 -0.3,13.5c-0.2,11.1 -0,13.7 1.2,14.6 1.2,0.9 22.8,1.3 26.8,0.6zM143.4,154.6c-0.3,-0.8 0.4,-3.1 1.5,-5.3 1.1,-2.1 4.5,-9.2 7.5,-15.6l5.5,-11.7 43.8,-0.3L245.5,121.5l0.3,-3.2c0.2,-2.5 -0.1,-3.3 -1.8,-3.8 -4.2,-1.3 -1.4,-3 5.5,-3.3 7.8,-0.3 10.2,0.9 5.9,3 -2.9,1.4 -4,4.3 -2.5,6.6 0.5,0.8 3.5,1.4 7.6,1.6 3.7,0.2 7.1,0.7 7.5,1.2 1.9,2.1 14.2,30.4 13.6,31.3C281.1,155.7 259.5,156 212.4,156c-56.9,0 -68.6,-0.2 -69,-1.4zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#a6a79b"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.5,-1.5 -26,-2.1 -26.9,-2.7 -48.7,-5 -55,-5.9 -3.8,-0.5 -12.4,-1.7 -19,-2.5C124.4,382.9 61.9,370.8 22.7,360.5 19.5,359.7 16.6,359 16.3,359c-0.3,0 -0.3,-0.9 -0.1,-2 0.4,-1.7 -0.2,-2.1 -3.9,-2.6 -2.4,-0.4 -6,-0.5 -7.9,-0.2 -2.9,0.3 -3.4,0.1 -2.9,-1.1C1.9,352.2 2.8,348.6 3.6,345 11.9,306.1 38.1,273.7 79.3,251.5c4.9,-2.6 10.9,-6.4 13.5,-8.5 2.7,-2.1 6.4,-4 8.7,-4.4 5.9,-1.1 39.8,-12.6 41.3,-14.1C146.1,221.4 145,211 141.5,211c-2.2,0 -1.8,-2.4 1.6,-8.1 5,-8.5 9.5,-18.1 10.9,-23.2 0.7,-2.6 1.8,-5.1 2.4,-5.5 1.3,-0.9 104.5,-1.4 120.3,-0.6l11.2,0.6 4.2,8.6c2.3,4.7 5.4,12 6.9,16.1 3.8,10.5 4.9,10.2 5.3,-1.1L304.5,188.5l12,0 12,0 0.5,13.2c0.3,7.2 0.8,13.5 1.2,13.9 0.4,0.4 1.9,-1.8 3.3,-4.9 6.7,-14 25.9,-24.8 41.9,-23.4 7.3,0.7 16.7,4.3 25.2,9.8l6.3,4.1 9,-0.7 9,-0.7 0.3,40.9L425.5,281.5l55.9,0.3 55.9,0.3 -0.7,3.2c-1.5,6.7 -3.1,6.2 20.4,6.2 22.5,0 24.5,-0.4 20.2,-4.2 -2.6,-2.2 -2.7,-4.9 -0.1,-5.6 1.9,-0.5 2,-1.5 2.3,-30.4L579.5,221.5l25.8,-0.1 25.8,-0.1 0.2,-11.9L631.5,197.5l7.5,0 7.5,0 0,9.4 0,9.4 -5.3,2.8c-2.9,1.5 -6.1,3.5 -7.1,4.3 -1.8,1.7 -4.7,9.2 -3.9,10.1 0.3,0.3 14.8,0.9 32.3,1.5 33,1 36.4,1.5 31.6,4.9 -4.7,3.3 -8,7.3 -9.4,11.6 -1.3,3.8 -1.3,4.6 -0.1,5.6 0.8,0.6 1.8,0.9 2.2,0.6 0.5,-0.3 12.1,-0.1 25.8,0.4 13.7,0.5 31.4,1.1 39.2,1.4 13.8,0.5 18.2,1.4 18.2,3.7 0,0.6 4.2,5.4 9.3,10.7 21.3,21.9 33.6,43.7 39.2,69.6 0.8,3.8 1.8,8.1 2.1,9.5 0.5,2.3 0.2,2.6 -2.5,2.8 -1.7,0.1 -5,0.9 -7.3,1.6 -21,7 -124.2,24.8 -182.2,31.5 -53.1,6.1 -91.3,9.4 -138,12 -10.4,0.6 -24,1.3 -30,1.7 -16.5,0.9 -121.6,1.3 -124.5,0.5zM372.5,319.1c0.8,-3.8 -0.8,-7.5 -4.7,-10.3 -4.1,-3 -8.2,-4.6 -12.8,-5 -3,-0.2 -4,-1.1 -7.3,-6.1C343.5,291.3 336.3,286 331.8,286c-4.4,0 -13.1,3.7 -18.9,8 -3,2.2 -7.4,4.9 -9.9,6.1 -6.5,3.1 -10.6,6.5 -14.1,11.6 -5.1,7.6 -4.9,7.7 15.1,8.4 9.6,0.3 28,0.9 40.9,1.3 12.9,0.4 23.6,0.8 23.8,1.1 1,1 3.1,-0.9 3.7,-3.4zM170.1,318.3c0.1,-0.4 0.2,-2.8 0.4,-5.3 0.4,-8.6 3.8,-8 -43,-8 -26.6,0 -42.2,-0.3 -43.4,-1C80.9,302.3 79,305.2 79,311.9c0,3.2 0.3,6.1 0.7,6.4 0.9,0.9 90.3,0.8 90.5,-0.1zM192.2,296.3 L192.5,278.5 228,278.5 263.5,278.5 263.6,296 263.8,313.5 266.4,313.8 269,314.1 268.8,293.8L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -1,1.5 -1.1,38.1 -0.2,39.1C187,313.7 188.4,314 189.6,314l2.3,0 0.3,-17.8zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM342.9,271.1c1.1,-0.7 0.3,-2.2 -3.4,-6.7 -6.1,-7.5 -10.4,-16.7 -11.2,-23.8 -0.7,-6.6 -0.4,-6.4 -14.3,-6.8L304.5,233.5 304.2,223c-0.3,-13.4 -0.4,-13.5 -4.4,-11.4l-3.2,1.6 0.7,20.1c0.4,11.1 0.7,24 0.7,28.8 0,7.4 0.3,8.7 1.8,9.1 3.2,0.8 41.7,0.7 43.1,-0.2zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM544.5,282.8c-0.3,-0.7 -0.4,-11.4 -0.2,-23.8L544.5,236.5l12,0 12,0 0,23.5 0,23.5 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM148.3,155.3c-2.3,-0.2 -4.3,-0.8 -4.3,-1.2 0,-1.1 13.1,-29.3 14.1,-30.5 0.8,-0.9 104.9,-1.1 107.8,-0.1 1.6,0.5 15.1,27.6 15.1,30.1 -0,0.6 -1.4,1.4 -3.1,1.8 -3.3,0.7 -122.3,0.6 -129.6,-0.1zM578.7,137.3C578.3,137 578,132.3 578,126.9c0,-5.4 -0.4,-10 -0.9,-10.3 -0.5,-0.3 -33.6,-0.1 -73.6,0.6 -59.7,0.9 -74,0.9 -80.1,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 6.9,17.8 7.6,18.5 0.9,0.9 13.8,1.3 52.9,1.4 28.4,0.1 52.7,0.5 54,0.8 1.7,0.4 3.2,2.5 5.6,7.8 1.8,4 5,10.8 7,15.1 3,6.3 3.5,8 2.4,8.7 -1.6,1 -125.2,1.2 -126.2,0.2zM489.8,108.6c1.4,-0.8 1.7,-28.2 0.3,-29 -0.4,-0.3 -7,-0.6 -14.6,-0.7 -10.9,-0.2 -14,0.1 -14.7,1.2 -1.1,1.7 -1.2,25.9 -0.1,27.5 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.7,-28.2 0.3,-29 -1.4,-0.9 -27.6,-1 -28.9,-0.2 -0.9,0.5 -1.2,4.6 -1.2,13.9 0,13.1 0.3,15 2.7,15.8 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#7795a3"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.5,-1.5 -26,-2.1 -26.9,-2.7 -48.7,-5 -55,-5.9 -3.8,-0.5 -12.4,-1.7 -19,-2.5C124.4,382.9 61.9,370.8 22.7,360.5 19.5,359.7 16.6,359 16.3,359c-0.3,0 -0.3,-0.9 -0.1,-2 0.4,-1.7 -0.2,-2.1 -3.9,-2.6 -2.4,-0.4 -6,-0.5 -7.9,-0.2 -2.9,0.3 -3.4,0.1 -2.9,-1.1C1.9,352.2 2.8,348.6 3.6,345 11.9,306.1 38.1,273.7 79.3,251.5c4.9,-2.6 10.9,-6.4 13.5,-8.5 2.7,-2.1 6.4,-4 8.7,-4.4 5.9,-1.1 39.8,-12.6 41.3,-14.1C146.1,221.4 145,211 141.5,211c-2.2,0 -1.8,-2.4 1.6,-8.2 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 30,-0.7 65.3,-0.8L287.8,174l4.3,8.8c2.3,4.8 5.4,12.1 6.9,16.2 3.8,10.5 4.9,10.2 5.3,-1.1L304.5,188.5l12,0 12,0 0.5,13.2c0.3,7.2 0.8,13.5 1.2,13.9 0.4,0.4 1.9,-1.8 3.3,-4.9 6.7,-14 25.9,-24.8 41.9,-23.4 7.3,0.7 16.7,4.3 25.2,9.8l6.3,4.1 9,-0.7 9,-0.7 0.3,40.9L425.5,281.5l55.9,0.3 55.9,0.3 -0.7,3.2c-1.5,6.7 -3.1,6.2 20.4,6.2 22.5,0 24.5,-0.4 20.2,-4.2 -2.6,-2.2 -2.7,-4.9 -0.1,-5.6 1.9,-0.5 2,-1.5 2.3,-30.4L579.5,221.5l25.8,-0.1 25.8,-0.1 0.2,-11.9L631.5,197.5l7.5,0 7.5,0 0,9.4 0,9.4 -5.3,2.8c-2.9,1.5 -6.1,3.5 -7.1,4.3 -1.8,1.7 -4.7,9.2 -3.9,10.1 0.3,0.3 14.8,0.9 32.3,1.5 33,1 36.4,1.5 31.6,4.9 -4.7,3.3 -8,7.3 -9.4,11.6 -1.3,3.8 -1.3,4.6 -0.1,5.6 0.8,0.6 1.8,0.9 2.2,0.6 0.5,-0.3 12.1,-0.1 25.8,0.4 13.7,0.5 31.4,1.1 39.2,1.4 13.8,0.5 18.2,1.4 18.2,3.7 0,0.6 4.2,5.4 9.3,10.7 21.3,21.9 33.6,43.7 39.2,69.6 0.8,3.8 1.8,8.1 2.1,9.5 0.5,2.3 0.2,2.6 -2.5,2.8 -1.7,0.1 -5,0.9 -7.3,1.6 -21,7 -124.2,24.8 -182.2,31.5 -53.1,6.1 -91.3,9.4 -138,12 -10.4,0.6 -24,1.3 -30,1.7 -16.5,0.9 -121.6,1.3 -124.5,0.5zM372.5,319.1c0.8,-3.8 -0.8,-7.5 -4.7,-10.3 -4.1,-3 -8.2,-4.6 -12.8,-5 -3,-0.2 -4,-1.1 -7.3,-6.1C343.5,291.3 336.3,286 331.8,286c-4.4,0 -13.1,3.7 -18.9,8 -3,2.2 -7.4,4.9 -9.9,6.1 -6.5,3.1 -10.6,6.5 -14.1,11.6 -5.1,7.6 -4.9,7.7 15.1,8.4 9.6,0.3 28,0.9 40.9,1.3 12.9,0.4 23.6,0.8 23.8,1.1 1,1 3.1,-0.9 3.7,-3.4zM170.1,318.3c0.1,-0.4 0.2,-2.8 0.4,-5.3 0.4,-8.6 3.8,-8 -43,-8 -26.6,0 -42.2,-0.3 -43.4,-1C80.9,302.3 79,305.2 79,311.9c0,3.2 0.3,6.1 0.7,6.4 0.9,0.9 90.3,0.8 90.5,-0.1zM192.2,296.3 L192.5,278.5 228,278.5 263.5,278.5 263.6,296 263.8,313.5 266.4,313.8 269,314.1 268.8,293.8L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -1,1.5 -1.1,38.1 -0.2,39.1C187,313.7 188.4,314 189.6,314l2.3,0 0.3,-17.8zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM342.9,271.1c1.1,-0.7 0.3,-2.2 -3.4,-6.7 -6.1,-7.5 -10.4,-16.7 -11.2,-23.8 -0.7,-6.6 -0.4,-6.4 -14.3,-6.8L304.5,233.5 304.2,223c-0.3,-13.4 -0.4,-13.5 -4.4,-11.4l-3.2,1.6 0.7,20.1c0.4,11.1 0.7,24 0.7,28.8 0,7.4 0.3,8.7 1.8,9.1 3.2,0.8 41.7,0.7 43.1,-0.2zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM544.5,282.8c-0.3,-0.7 -0.4,-11.4 -0.2,-23.8L544.5,236.5l12,0 12,0 0,23.5 0,23.5 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.8 1.7,-28.2 0.3,-29 -0.4,-0.3 -7,-0.6 -14.6,-0.7 -10.9,-0.2 -14,0.1 -14.7,1.2 -1.1,1.7 -1.2,25.9 -0.1,27.5 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.7,-28.2 0.3,-29 -1.4,-0.9 -27.6,-1 -28.9,-0.2 -0.9,0.5 -1.2,4.6 -1.2,13.9 0,13.1 0.3,15 2.7,15.8 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#cfdc04"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.5,-1.5 -26,-2.1 -26.9,-2.7 -48.7,-5 -55,-5.9 -3.8,-0.5 -12.4,-1.7 -19,-2.5C124.4,382.9 61.9,370.8 22.7,360.5 19.5,359.7 16.6,359 16.3,359c-0.3,0 -0.3,-0.9 -0.1,-2 0.4,-1.7 -0.2,-2.1 -3.9,-2.6 -2.4,-0.4 -6,-0.5 -7.9,-0.2 -2.9,0.3 -3.4,0.1 -2.9,-1.1C1.9,352.2 2.8,348.6 3.6,345 11.9,306.1 38.1,273.7 79.3,251.5c4.9,-2.6 10.9,-6.4 13.5,-8.5 2.7,-2.1 6.4,-4 8.7,-4.4 5.9,-1.1 39.8,-12.6 41.3,-14.1C146.1,221.4 145,211 141.5,211c-2.2,0 -1.8,-2.4 1.6,-8.2 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 30,-0.7 65.3,-0.8L287.8,174l4.3,8.8c2.3,4.8 5.4,12.1 6.9,16.2 3.8,10.5 4.9,10.2 5.3,-1.1L304.5,188.5l12,0 12,0 0.5,13.2c0.3,7.2 0.8,13.5 1.2,13.9 0.4,0.4 1.9,-1.8 3.3,-4.9 6.7,-14 25.9,-24.8 41.9,-23.4 7.3,0.7 16.7,4.3 25.2,9.8l6.3,4.1 9,-0.7 9,-0.7 0.3,40.9L425.5,281.5l55.9,0.3 55.9,0.3 -0.7,3.2c-1.5,6.7 -3.1,6.2 20.4,6.2 22.5,0 24.5,-0.4 20.2,-4.2 -2.6,-2.2 -2.7,-4.9 -0.1,-5.6 1.9,-0.5 2,-1.5 2.3,-30.4L579.5,221.5l25.8,-0.1 25.8,-0.1 0.2,-11.9L631.5,197.5l7.5,0 7.5,0 0,9.4 0,9.4 -5.3,2.8c-2.9,1.5 -6.1,3.5 -7.1,4.3 -1.8,1.7 -4.7,9.2 -3.9,10.1 0.3,0.3 14.8,0.9 32.3,1.5 33,1 36.4,1.5 31.6,4.9 -4.7,3.3 -8,7.3 -9.4,11.6 -1.3,3.8 -1.3,4.6 -0.1,5.6 0.8,0.6 1.8,0.9 2.2,0.6 0.5,-0.3 12.1,-0.1 25.8,0.4 13.7,0.5 31.4,1.1 39.2,1.4 13.8,0.5 18.2,1.4 18.2,3.7 0,0.6 4.2,5.4 9.3,10.7 21.3,21.9 33.6,43.7 39.2,69.6 0.8,3.8 1.8,8.1 2.1,9.5 0.5,2.3 0.2,2.6 -2.5,2.8 -1.7,0.1 -5,0.9 -7.3,1.6 -21,7 -124.2,24.8 -182.2,31.5 -53.1,6.1 -91.3,9.4 -138,12 -10.4,0.6 -24,1.3 -30,1.7 -16.5,0.9 -121.6,1.3 -124.5,0.5zM372.5,319.1c0.8,-3.8 -0.8,-7.5 -4.7,-10.3 -4.1,-3 -8.2,-4.6 -12.8,-5 -3,-0.2 -4,-1.1 -7.3,-6.1C343.5,291.3 336.3,286 331.8,286c-4.4,0 -13.1,3.7 -18.9,8 -3,2.2 -7.4,4.9 -9.9,6.1 -6.5,3.1 -10.6,6.5 -14.1,11.6 -5.1,7.6 -4.9,7.7 15.1,8.4 9.6,0.3 28,0.9 40.9,1.3 12.9,0.4 23.6,0.8 23.8,1.1 1,1 3.1,-0.9 3.7,-3.4zM170.1,318.3c0.1,-0.4 0.2,-2.8 0.4,-5.3 0.4,-8.6 3.8,-8 -43,-8 -26.6,0 -42.2,-0.3 -43.4,-1C80.9,302.3 79,305.2 79,311.9c0,3.2 0.3,6.1 0.7,6.4 0.9,0.9 90.3,0.8 90.5,-0.1zM192.2,296.3 L192.5,278.5 228,278.5 263.5,278.5 263.6,296 263.8,313.5 266.4,313.8 269,314.1 268.8,293.8L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -1,1.5 -1.1,38.1 -0.2,39.1C187,313.7 188.4,314 189.6,314l2.3,0 0.3,-17.8zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM342.9,271.1c1.1,-0.7 0.3,-2.2 -3.4,-6.7 -6.1,-7.5 -10.4,-16.7 -11.2,-23.8 -0.7,-6.6 -0.4,-6.4 -14.3,-6.8L304.5,233.5 304.2,223c-0.3,-13.4 -0.4,-13.5 -4.4,-11.4l-3.2,1.6 0.7,20.1c0.4,11.1 0.7,24 0.7,28.8 0,7.4 0.3,8.7 1.8,9.1 3.2,0.8 41.7,0.7 43.1,-0.2zM396.4,268.5c2.7,-2.7 3,-5.5 0.9,-8.4 -2.8,-3.8 -7.4,-4 -10.1,-0.5 -1.2,1.5 -2.1,3.5 -2.1,4.6 0,4.7 8,7.8 11.4,4.4zM364.9,260.4C366.1,258.9 367,257.2 367,256.5c0,-0.7 -0.9,-2.4 -2.1,-3.9C361.1,247.8 353,250.4 353,256.5c0,6.1 8.1,8.7 11.9,3.9zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM344.4,239.9c3.4,-2.6 3.4,-6.3 0.1,-9.6 -2.7,-2.7 -6.5,-2.7 -9.4,0.2 -2.2,2.2 -1.8,7.5 0.9,9.6 3,2.4 5.2,2.3 8.4,-0.2zM389.1,240.2c2.6,-2.1 3.1,-7.4 0.9,-9.6 -2.9,-2.8 -6.6,-2.9 -9.4,-0.2 -3.3,3.3 -3.3,6.9 0.1,9.6 3.3,2.6 5.5,2.6 8.4,0.2zM364.1,231.2c2.7,-2.2 3.1,-7.5 0.7,-9.9 -2.4,-2.4 -7.7,-2.1 -9.9,0.7 -2.6,3.2 -2.3,6.5 0.8,9 3.3,2.6 5.5,2.6 8.4,0.2zM404,218c2.6,-2.6 2.5,-5.1 -0.1,-8.4 -2.7,-3.5 -7.3,-3.2 -10.1,0.5C389,216.5 398.3,223.7 404,218zM371.5,207.5C372.9,206.2 374,204.1 374,203c0,-2.7 -4.3,-7 -7,-7 -2.7,0 -7,4.3 -7,7 0,2.7 4.3,7 7,7 1.1,0 3.2,-1.1 4.5,-2.5zM544.5,282.8c-0.3,-0.7 -0.4,-11.4 -0.2,-23.8L544.5,236.5l12,0 12,0 0,23.5 0,23.5 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.8 1.7,-28.2 0.3,-29 -0.4,-0.3 -7,-0.6 -14.6,-0.7 -10.9,-0.2 -14,0.1 -14.7,1.2 -1.1,1.7 -1.2,25.9 -0.1,27.5 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.7,-28.2 0.3,-29 -1.4,-0.9 -27.6,-1 -28.9,-0.2 -0.9,0.5 -1.2,4.6 -1.2,13.9 0,13.1 0.3,15 2.7,15.8 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#9ac74e"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.5,-1.5 -26,-2.1 -26.9,-2.7 -48.7,-5 -55,-5.9 -3.8,-0.5 -12.4,-1.7 -19,-2.5C132.5,383.9 79.5,374.2 45,366 17.6,359.4 15,358.7 16.1,357.5 17.1,356.6 806.5,356.5 807,357.4c0.7,1.3 -1.3,1.8 -35,8.6 -46.8,9.5 -99.3,17.9 -143.5,23 -53.1,6.1 -91.3,9.4 -138,12 -10.4,0.6 -24,1.3 -30,1.7 -16.5,0.9 -121.6,1.3 -124.5,0.5zM386.3,346.3c-2.3,-0.2 -4.6,-0.9 -5.2,-1.6 -0.6,-0.7 -0.7,-4.6 -0.3,-10 0.7,-8.6 0.6,-8.8 -1.6,-9.4 -1.3,-0.3 -3.6,-0 -5.3,0.6 -2.3,1 -9,1 -30.7,0.1C328,325.5 309.6,325 302.5,325c-13.1,-0 -17.5,-0.9 -14.5,-3 0.9,-0.6 4.8,-0.8 9.5,-0.5 4.4,0.3 16.3,0.8 26.5,1.1 10.2,0.3 24.7,0.8 32.4,1 9.5,0.3 14.3,0.1 15.3,-0.7 0.8,-0.6 1.4,-3 1.4,-5.4 0,-3.6 -0.6,-4.9 -4,-8.4l-4,-4.2 0.7,-12.3 0.7,-12.3 -4.8,-1.2c-2.6,-0.7 -6.9,-2.3 -9.6,-3.7C347.2,273 346.6,273 322.5,273L298,273l0,14 0,14 -3.8,3.8c-2.1,2.1 -4.7,5 -5.9,6.5C286.3,313.8 285.6,314 277.6,314l-8.6,0 -0.3,-20.3L268.5,273.5 228.1,273.2c-31.7,-0.2 -40.6,0 -41.2,1 -0.4,0.7 -0.8,9.9 -0.8,20.5L186,314l-3.7,0c-2,0 -4.4,0.7 -5.4,1.5 -2.5,2.3 -4.7,0.8 -5.5,-3.5 -1.1,-6.8 -1.2,-6.8 -19,-7.1 -8.8,-0.2 -24.3,-0.3 -34.5,-0.2 -31.8,0.1 -33,0 -34,-1.6 -0.5,-0.8 -1,-9.7 -1,-19.6C83,268.5 82.7,265 81.5,264c-2.5,-2.1 -1.7,-4.3 4,-12 10.5,-14 14.3,-15.4 40.6,-14.8L142.5,237.5l0.6,-7c0.3,-3.8 1,-8.8 1.4,-11.1C145.3,214.9 143.9,211 141.5,211c-2.2,0 -1.8,-2.4 1.6,-8.2 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 30,-0.7 65.3,-0.8L287.8,174l4.3,8.8c2.3,4.8 5.4,12.1 6.9,16.2 3.8,10.5 4.9,10.2 5.3,-1.1L304.5,188.5l12,0 12,0 0.5,13.2c0.3,7.2 0.8,13.5 1.2,13.9 0.4,0.4 1.9,-1.8 3.3,-4.9 6.7,-14.1 26,-24.8 41.9,-23.4 11.8,1.1 29.3,10.5 36.1,19.4 5.9,7.8 7.8,14.3 7.8,27.3 0,10.9 -0.1,11.8 -3.2,18.3 -1.8,3.8 -4.7,8.7 -6.5,10.9 -4.2,5.3 -13.3,11.9 -19.4,14.1 -8.4,3 -7.9,2.3 -7.6,12.7C383.2,300.6 384,302 389.7,302c4.2,0 4.2,-0.2 4.5,24.5 0.3,22.6 1.1,20.6 -7.9,19.8zM173.1,298.3c0.6,-0.6 0.9,-5.4 0.7,-11.4L173.5,276.5 163.1,276.2c-6.5,-0.2 -10.9,0.1 -11.7,0.8 -2,1.6 -1.9,19.4 0,21.3 1.1,1.1 3.7,1.4 11,1.2 5.3,-0.1 10,-0.7 10.6,-1.2zM131.4,296.4c2,-2 2.3,-19.3 0.4,-21.2 -0.8,-0.8 -5.9,-1.2 -16.3,-1.2 -10.4,0 -15.5,0.4 -16.3,1.2 -0.8,0.8 -1.2,4.7 -1.2,11 0,8.2 0.3,9.9 1.8,10.8 1,0.6 8.1,1 15.9,1 11.6,0 14.5,-0.3 15.8,-1.5zM342.9,271.1c1.1,-0.7 0.3,-2.2 -3.4,-6.7 -6.1,-7.5 -10.4,-16.7 -11.2,-23.8 -0.7,-6.6 -0.4,-6.4 -14.3,-6.8L304.5,233.5 304.2,223c-0.3,-13.4 -0.4,-13.5 -4.4,-11.4l-3.2,1.6 0.7,20.1c0.4,11.1 0.7,24 0.7,28.8 0,7.4 0.3,8.7 1.8,9.1 3.2,0.8 41.7,0.7 43.1,-0.2zM396.4,268.5c2.7,-2.7 3,-5.5 0.9,-8.4 -2.8,-3.8 -7.4,-4 -10.1,-0.5 -1.2,1.5 -2.1,3.5 -2.1,4.6 0,4.7 8,7.8 11.4,4.4zM364.9,260.4C366.1,258.9 367,257.2 367,256.5c0,-0.7 -0.9,-2.4 -2.1,-3.9C361.1,247.8 353,250.4 353,256.5c0,6.1 8.1,8.7 11.9,3.9zM173.8,243.7 L174.1,231.8 170.2,227.9C167.2,225 165.4,224 163.1,224c-4.3,0 -8.7,2.5 -10.5,5.8 -1.6,3 -2.5,22.9 -1.2,25 0.5,0.9 3.9,1.1 11.4,0.9L173.5,255.5l0.3,-11.8zM203.1,253.9c0.7,-1.4 1,-5.7 0.7,-11.8 -0.4,-10.6 -1.9,-14.1 -6.9,-16.7 -5,-2.6 -8.7,-1.9 -13,2.4L180,231.8l0,11.5c0,6.3 0.3,11.8 0.7,12.1C181,255.7 186,256 191.6,256c9.5,0 10.4,-0.2 11.4,-2.1zM232.4,254.4c1.3,-3.3 0.6,-20.5 -0.9,-23.4 -4.6,-8.9 -15.4,-9.3 -20.6,-0.7 -1.6,2.6 -2,5.1 -2,13.8 -0,5.8 0.3,10.9 0.7,11.3C210,255.7 215.2,256 221.1,256c8.9,0 10.8,-0.3 11.3,-1.6zM261.8,244.5c0.2,-8.7 -0,-11.7 -1.3,-14.1 -3.1,-5.8 -9.7,-7.9 -15.4,-5 -5,2.6 -5.9,5.2 -6.2,17.2 -0.1,6 0.1,11.5 0.5,12.2 0.5,0.9 3.9,1.1 11.4,0.9L261.5,255.5l0.3,-11zM290.8,254.8c1.6,-1.6 1.5,-18.1 -0.1,-22.8 -2.9,-8.5 -13.2,-10.4 -19.4,-3.6l-3.3,3.5 0,11.3c0,6.2 0.3,11.6 0.7,12 1.2,1.2 20.9,0.7 22.1,-0.5zM344.4,239.9c3.4,-2.6 3.4,-6.3 0.1,-9.6 -2.7,-2.7 -6.5,-2.7 -9.4,0.2 -2.2,2.2 -1.8,7.5 0.9,9.6 3,2.4 5.2,2.3 8.4,-0.2zM389.1,240.2c2.6,-2.1 3.1,-7.4 0.9,-9.6 -2.9,-2.8 -6.6,-2.9 -9.4,-0.2 -3.3,3.3 -3.3,6.9 0.1,9.6 3.3,2.6 5.5,2.6 8.4,0.2zM364.1,231.2c2.7,-2.2 3.1,-7.5 0.7,-9.9 -2.4,-2.4 -7.7,-2.1 -9.9,0.7 -2.6,3.2 -2.3,6.5 0.8,9 3.3,2.6 5.5,2.6 8.4,0.2zM404,218c2.6,-2.6 2.5,-5.1 -0.1,-8.4 -2.7,-3.5 -7.3,-3.2 -10.1,0.5C389,216.5 398.3,223.7 404,218zM371.5,207.5C372.9,206.2 374,204.1 374,203c0,-2.7 -4.3,-7 -7,-7 -2.7,0 -7,4.3 -7,7 0,2.7 4.3,7 7,7 1.1,0 3.2,-1.1 4.5,-2.5zM192.2,296.3 L192.5,278.5l35.5,0 35.5,0 0.3,14.5c0.2,8 0,16 -0.3,17.8l-0.6,3.3 -35.5,0 -35.5,0 0.3,-17.8zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM420.2,293.8c-0.7,-0.7 -1.2,-3.3 -1.2,-6 0,-4 0.4,-5 2.5,-6.4l2.5,-1.6 0.2,-40.1 0.2,-40.1 0.5,41 0.5,41 55.9,0.3 55.9,0.3 -0.7,3.2c-1.5,6.7 -3.1,6.2 20.4,6.2 22.5,0 24.5,-0.4 20.2,-4.2 -2.6,-2.2 -2.7,-4.9 -0.1,-5.6 1.9,-0.5 2,-1.6 2.3,-30.4l0.3,-29.8 0.2,29.7 0.2,29.7 2.8,0.3c2.6,0.3 2.8,0.6 3.1,6.2 0.2,4 -0.1,6.2 -1,6.7 -0.7,0.5 -37.8,0.8 -82.4,0.8 -61.7,0 -81.3,-0.3 -82.3,-1.2zM544.5,282.8c-0.3,-0.7 -0.4,-11.4 -0.2,-23.8L544.5,236.5l12,0 12,0 0,23.5 0,23.5 -11.8,0.3c-9,0.2 -11.9,-0 -12.3,-1zM734.5,264c-41.5,-1.1 -53.6,-2.2 -48.2,-4.3 1.7,-0.6 82.6,1.9 83.4,2.7 1.3,1.3 -1.2,2.6 -5,2.5C762.4,264.7 748.8,264.4 734.5,264zM661.5,240c-12.6,-0.4 -24.7,-0.8 -26.8,-0.9 -3.7,-0.1 -5,-1.4 -2.5,-2.4 1.8,-0.7 58.7,0.8 59.4,1.6 2.2,2.2 -2.9,2.5 -30.2,1.6zM631.3,209.8 L631.5,197.5l7.5,0 7.5,0 0.3,9.1 0.3,9.1 -6.2,3.2c-9.9,5.1 -9.8,5.2 -9.6,-9.1zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.8 1.7,-28.2 0.3,-29 -0.4,-0.3 -7,-0.6 -14.6,-0.7 -10.9,-0.2 -14,0.1 -14.7,1.2 -1.1,1.7 -1.2,25.9 -0.1,27.5 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.7,-28.2 0.3,-29 -1.4,-0.9 -27.6,-1 -28.9,-0.2 -0.9,0.5 -1.2,4.6 -1.2,13.9 0,13.1 0.3,15 2.7,15.8 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM284.5,4.3C282.6,3.8 281,2.3 281,0.8 281,0.3 304.9,0 334,0c51.2,0 53,0.1 53,1.9 0,1.1 -0.9,2.1 -2.3,2.5 -2.7,0.7 -97.4,0.6 -100.3,-0.1z"
+        android:fillColor="#ce7455"/>
+    <path
+        android:pathData="m336,403.1c-1.4,-0.4 -8.6,-0.8 -16,-0.9 -7.4,-0.1 -18.7,-0.6 -25,-1.1 -6.3,-0.5 -18.7,-1.4 -27.5,-2 -8.8,-0.6 -20.5,-1.5 -26,-2.1 -26.9,-2.7 -48.7,-5 -55,-5.9 -3.8,-0.5 -12.4,-1.7 -19,-2.5C132.5,383.9 79.5,374.2 45,366 17.6,359.4 15,358.7 16.1,357.5 17.1,356.6 806.5,356.5 807,357.4c0.7,1.3 -1.3,1.8 -35,8.6 -46.8,9.5 -99.3,17.9 -143.5,23 -53.1,6.1 -91.3,9.4 -138,12 -10.4,0.6 -24,1.3 -30,1.7 -16.5,0.9 -121.6,1.3 -124.5,0.5zM386.3,346.3c-2.3,-0.2 -4.6,-0.9 -5.2,-1.6 -0.6,-0.7 -0.7,-4.6 -0.3,-10 0.7,-8.6 0.6,-8.8 -1.6,-9.4 -1.3,-0.3 -3.6,-0 -5.3,0.6 -2.3,1 -9,1 -30.7,0.1C328,325.5 309.6,325 302.5,325c-13.1,-0 -17.5,-0.9 -14.5,-3 0.9,-0.6 4.8,-0.8 9.5,-0.5 4.4,0.3 16.3,0.8 26.5,1.1 10.2,0.3 24.7,0.8 32.4,1 9.5,0.3 14.3,0.1 15.3,-0.7 0.8,-0.6 1.4,-3 1.4,-5.4 0,-3.6 -0.6,-4.9 -4,-8.4l-4,-4.2 0.7,-12.3 0.7,-12.3 -4.8,-1.2c-2.6,-0.7 -6.9,-2.3 -9.6,-3.7C347.2,273 346.6,273 322.5,273L298,273l0,14 0,14 -3.8,3.8c-2.1,2.1 -4.7,5 -5.9,6.5 -2,2.5 -2.7,2.6 -11,2.6 -4.9,-0 -8.4,-0.3 -7.8,-0.8 0.6,-0.5 0.8,-8 0.5,-20.7l-0.5,-20 -40.9,-0.3c-30,-0.2 -41.3,0 -42.3,0.9 -1.1,0.9 -1.4,4.9 -1.1,21l0.3,19.8 -3.4,-0c-1.9,-0 -4.2,0.7 -5.1,1.5 -2,1.8 -4.9,1 -5.1,-1.4 -0.1,-0.9 -0.2,-2.8 -0.3,-4.1 -0.5,-6.7 -0.6,-6.8 -12.5,-6.7 -6,0.1 -10.7,0.4 -10.6,0.6 0.2,0.3 -2.7,0.5 -6.5,0.5 -3.7,-0 -6.6,-0.3 -6.5,-0.6 0.2,-0.3 -7.7,-0.6 -17.5,-0.5 -9.8,0 -17.7,0.3 -17.6,0.6 0.2,0.3 -3.3,0.5 -7.6,0.5 -6,0 -8.2,-0.4 -8.9,-1.5 -0.5,-0.8 -1,-9.7 -1,-19.6C83,268.5 82.7,265 81.5,264c-2.5,-2.1 -1.7,-4.3 4,-12 10.5,-14 14.3,-15.4 40.6,-14.8L142.5,237.5l0.5,-7c0.3,-4 0.8,-6.1 1.1,-5 0.3,1.1 0.7,-1.5 0.7,-5.7 0.1,-7.5 0,-7.8 -2.4,-8.4 -3.2,-0.8 -3.2,-2.2 0.6,-8.6 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 29.5,-0.7 64.3,-0.8 52.1,-0 63.3,0.2 64.3,1.3 0.6,0.7 4.2,8.1 8,16.3 8.4,18.3 9.9,19.2 10.3,6.7L305.5,189.5l11.3,-0.3 11.3,-0.3 0,12.8c0,16.7 1,18.3 5.5,9.3 9.3,-18.7 34.3,-28.2 54.1,-20.6 8.9,3.4 19.8,10.8 24,16.4 5.9,7.8 7.8,14.3 7.8,27.3 0,10.9 -0.1,11.8 -3.2,18.3 -1.8,3.8 -4.7,8.7 -6.5,10.9 -4.2,5.3 -13.3,11.9 -19.4,14.1 -8.4,3 -7.9,2.3 -7.6,12.7 0.4,10.5 1.2,11.9 6.8,11.9 4.2,0 4.2,-0.2 4.5,24.5 0.3,22.6 1.1,20.6 -7.9,19.8zM381.2,322c0.5,-1.4 -1,-39.2 -1.6,-40.8 -0.8,-2 -9.3,-1.6 -10.4,0.5 -0.5,1 -1.2,6.6 -1.5,12.6l-0.6,10.9 3.5,3.9c2,2.2 3.5,4.9 3.5,6.3 0,4.5 1.8,7.6 4.4,7.6 1.3,0 2.6,-0.4 2.8,-1zM294.3,303.1c-0.4,-0.7 -4.3,3.2 -6.5,6.4 -1.4,2.1 -0.7,1.6 2.4,-1.5 2.4,-2.5 4.3,-4.7 4.2,-4.9zM89,303.6c0,-0.2 -0.9,-0.6 -2,-0.9 -1.1,-0.3 -1.7,-0.1 -1.4,0.4C86.1,304 89,304.4 89,303.6zM173.1,300c1.7,-0.9 1.9,-2.2 1.9,-11.8 0,-7 -0.4,-11.2 -1.2,-12 -0.8,-0.8 -4.9,-1.2 -11.8,-1.2 -6.9,0 -11,0.4 -11.8,1.2 -0.8,0.8 -1.2,4.7 -1.2,11.2C149,300.7 149.3,301 161.7,301c5.2,0 10.3,-0.5 11.3,-1zM132.4,297.4c2,-2 2.3,-21.3 0.4,-23.2 -0.8,-0.8 -6.1,-1.2 -17.3,-1.2 -11.2,0 -16.5,0.4 -17.3,1.2 -0.8,0.8 -1.2,4.9 -1.2,12 0,9.2 0.3,10.9 1.8,11.8 1,0.6 8.5,1 16.9,1 12.5,0 15.5,-0.2 16.8,-1.5zM342.9,271.1c1.1,-0.7 0.3,-2.2 -3.4,-6.7 -6,-7.4 -10.3,-16.5 -11.1,-23.5 -0.3,-3.1 -1.3,-5.9 -2.2,-6.6 -1,-0.8 -5,-1.3 -11.4,-1.3L305,233l0,-10.9c0,-11.9 -0.2,-12.4 -5.8,-10.9l-3.3,0.9 0,15.5c0,10.1 0.3,15.3 1,14.9 0.6,-0.4 1,4.5 1,13.9 0,13 0.2,14.5 1.8,14.9 3.2,0.8 41.7,0.7 43.1,-0.2zM396.4,268.5c2.7,-2.7 3,-5.5 0.9,-8.4 -2.8,-3.8 -7.4,-4 -10.1,-0.5 -1.2,1.5 -2.1,3.5 -2.1,4.6 0,4.7 8,7.8 11.4,4.4zM364.9,260.4C366.1,258.9 367,257.2 367,256.5c0,-0.7 -0.9,-2.4 -2.1,-3.9C361.1,247.8 353,250.4 353,256.5c0,6.1 8.1,8.7 11.9,3.9zM173.4,256.4C174.7,255.9 175,253.8 175,244.3c0,-13.1 -1.4,-16.8 -7.4,-19.7 -4.2,-2 -6.9,-2 -10.7,-0.1 -5.6,2.9 -6.9,6.6 -6.9,19.6 -0,8.4 0.3,11.8 1.2,12.2 1.8,0.7 20.3,0.8 22.2,0.1zM203.8,244.5c0.2,-10.5 0,-12.4 -1.7,-15.3 -4.4,-7.2 -13,-8 -19.1,-1.7l-3.4,3.5 -0.3,11.5c-0.2,8.1 0,11.9 0.9,13 1,1.2 3.5,1.4 12.3,1.2L203.5,256.5l0.3,-12zM233,255.1c1.5,-2.9 1.3,-19.5 -0.3,-23.3C229.3,223.9 221.3,220.9 215,225.2c-5.6,3.7 -7,7.7 -7,19.4 -0,6.5 0.4,10.5 1.2,11.3 0.8,0.8 4.9,1.2 12,1.2 9.6,0 10.9,-0.2 11.8,-1.9zM261.8,255.8c0.8,-0.8 1.2,-5 1.2,-12.3 0,-11.6 -0.6,-13.6 -5.5,-17.7 -5.3,-4.4 -13.7,-2.8 -17.5,3.5 -1.7,2.8 -2,5 -2,14.8 -0,6.4 0.3,11.9 0.7,12.3 1.2,1.2 21.9,0.7 23.1,-0.5zM291.8,244.8c0.3,-13.3 -0.7,-16.5 -6.1,-19.8 -4.1,-2.5 -7.3,-2.5 -11.5,0 -5.9,3.6 -7.2,7.1 -7.2,19.1 -0,7 0.4,11 1.2,11.8 0.9,0.9 4.5,1.1 12.3,0.9L291.5,256.5l0.3,-11.7zM344.4,239.9c3.4,-2.6 3.4,-6.3 0.1,-9.6 -2.7,-2.7 -6.5,-2.7 -9.4,0.2 -2.2,2.2 -1.8,7.5 0.9,9.6 3,2.4 5.2,2.3 8.4,-0.2zM389.1,240.2c2.6,-2.1 3.1,-7.4 0.9,-9.6 -2.9,-2.8 -6.6,-2.9 -9.4,-0.2 -3.3,3.3 -3.3,6.9 0.1,9.6 3.3,2.6 5.5,2.6 8.4,0.2zM364.1,231.2c2.7,-2.2 3.1,-7.5 0.7,-9.9 -2.4,-2.4 -7.7,-2.1 -9.9,0.7 -2.6,3.2 -2.3,6.5 0.8,9 3.3,2.6 5.5,2.6 8.4,0.2zM404,218c2.6,-2.6 2.5,-5.1 -0.1,-8.4 -2.7,-3.5 -7.3,-3.2 -10.1,0.5C389,216.5 398.3,223.7 404,218zM325.5,211.4c0,-2.8 -0.4,-3.9 -1.5,-3.9 -1.6,0 -2.6,4.5 -1.6,7.2 1.1,2.8 3.1,0.7 3.1,-3.3zM371.5,207.5C372.9,206.2 374,204.1 374,203c0,-2.7 -4.3,-7 -7,-7 -2.7,0 -7,4.3 -7,7 0,2.7 4.3,7 7,7 1.1,0 3.2,-1.1 4.5,-2.5zM192.2,296.3 L192.5,278.5l35.5,0 35.5,0 0.3,14.5c0.2,8 0,16 -0.3,17.8l-0.6,3.3 -35.5,0 -35.5,0 0.3,-17.8zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM420.2,293.8c-0.7,-0.7 -1.2,-3.3 -1.2,-6 0,-4 0.4,-5 2.5,-6.4l2.5,-1.6 0.2,-40.1 0.2,-40.1 0.5,41 0.5,41 55.9,0.3 55.9,0.3 -0.7,3.2c-1.5,6.7 -3.1,6.2 20.4,6.2 22.5,0 24.5,-0.4 20.2,-4.2 -2.6,-2.2 -2.7,-4.9 -0.1,-5.6 1.9,-0.5 2,-1.6 2.3,-30.4l0.3,-29.8 0.2,29.7 0.2,29.7 2.8,0.3c2.6,0.3 2.8,0.6 3.1,6.2 0.2,4 -0.1,6.2 -1,6.7 -0.7,0.5 -37.8,0.8 -82.4,0.8 -61.7,0 -81.3,-0.3 -82.3,-1.2zM545.2,260.3 L545.5,237.5l11.3,-0.3 11.3,-0.3 0,23 0,23 -11.5,0 -11.5,0 0.3,-22.8zM734.5,264c-41.5,-1.1 -53.6,-2.2 -48.2,-4.3 1.7,-0.6 82.6,1.9 83.4,2.7 1.3,1.3 -1.2,2.6 -5,2.5C762.4,264.7 748.8,264.4 734.5,264zM661.5,240c-12.6,-0.4 -24.7,-0.8 -26.8,-0.9 -3.7,-0.1 -5,-1.4 -2.5,-2.4 1.8,-0.7 58.7,0.8 59.4,1.6 2.2,2.2 -2.9,2.5 -30.2,1.6zM631.8,210 L632.1,198l6.9,0 6.9,0 0.3,9 0.3,9 -5.9,3c-9.3,4.8 -9.2,5 -8.8,-9zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -1.4,-2.2 -27,-1.6 -28.8,0.7 -0.8,1.1 -1.2,5.7 -1.2,14.2 0,12.5 0.4,14.4 2.7,15.2 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -0.7,-1.2 -3.5,-1.4 -14.7,-1.2 -9.1,0.2 -14.1,0.7 -14.5,1.5 -1,1.5 -1,26.8 -0,28.3 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM288.5,4.5C288,4.3 286.3,3.9 284.8,3.6 283.2,3.2 282,2.3 282,1.5 282,0.2 288.8,0 334.5,0 363.9,0 387,0.4 387,0.9c0,0.5 -0.7,1.5 -1.7,2.3 -1.3,1.1 -10.5,1.4 -48.8,1.6C310.7,4.8 289,4.7 288.5,4.5z"
+        android:fillColor="#95ae52"/>
+    <path
+        android:pathData="m372.9,403.6c-0.3,-0.3 -6.8,-0.7 -14.5,-1C326.3,401.7 262.8,397.8 236,395.1c-5.2,-0.5 -14.3,-1.4 -20.1,-2 -11,-1.1 -16.9,-1.8 -37.4,-4.5 -6.6,-0.9 -15.1,-2 -19,-2.5 -11,-1.4 -43.5,-6.8 -61,-10.1 -28.4,-5.4 -71.3,-15.1 -74.4,-16.8 -1.5,-0.8 771,-2 774.4,-1.2 1.7,0.4 1.5,0.6 -1,1.3 -12,3.3 -78.9,15.8 -106.4,19.8 -49.3,7.3 -94.3,12.6 -135,16 -37.2,3.1 -72.9,5.3 -129,7.7 -21,0.9 -53.5,1.4 -54.1,0.8zM374.1,321.3c0,-1.6 0.3,-2.1 0.6,-1.3 0.3,0.8 1,2.1 1.5,2.8 0.7,0.9 0.5,1.3 -0.6,1.3 -1.1,0 -1.6,-0.8 -1.5,-2.8zM381.2,312.3 L381.3,301.5 382,311.5c0.4,5.5 0.4,10.4 -0,10.8 -0.4,0.5 -0.8,-4 -0.7,-10zM171.9,314.4c-0.4,-5.7 -0.6,-7.1 -1.2,-8.9 -0.7,-2 -1.1,-2.1 -39.9,-1.9 -21.6,0.1 -40.4,0.5 -41.7,0.9 -1.6,0.5 -2,0.4 -1.2,-0.2 1,-0.7 0.9,-1 -0.8,-1.5 -1.4,-0.4 -1.9,-0.2 -1.5,0.6 0.3,0.6 -0.1,0.3 -1,-0.8C83.3,301 83,297.5 83,282.3c0,-12.5 -0.4,-18.9 -1.2,-20.2 -1.4,-2.2 0.2,-4.8 9.8,-16.2l5.6,-6.7 7.9,-0.7c4.4,-0.4 14.6,-0.4 22.9,0L143,239.2l0,-7.4c0,-5.1 0.3,-6.9 1,-5.9 0.7,1 1,-0.9 1,-6.2 0,-7.4 -0.1,-7.8 -2.5,-8.4 -3.2,-0.8 -3.2,-2.2 0.6,-8.6 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 29.5,-0.7 64.3,-0.8 52.1,-0 63.3,0.2 64.3,1.3 0.6,0.7 4.2,8.1 8,16.3 8.4,18.3 9.9,19.2 10.3,6.7L305.5,189.5l11.3,-0.3 11.3,-0.3 0,12.5C328,214.4 328.4,217 330.4,217 331.7,217 334,212.9 334,210.5c0,-2.6 7.8,-11.2 13.5,-15 10.9,-7.2 26.3,-9.9 35.5,-6.2 18.3,7.5 26.3,13.6 31.6,24.3 3.8,7.7 3.8,7.8 3.8,19.8 0,11.5 -0.1,12.4 -3.2,18.9 -5.7,12 -13.3,19.5 -24.4,23.8 -2.9,1.1 -6.5,2.6 -7.8,3.2 -1.4,0.6 -4.9,1 -7.7,0.8 -4.2,-0.2 -5.4,0.1 -5.9,1.5 -0.6,1.6 -0.7,1.6 -1.4,-0.2 -0.5,-1.4 -2.3,-2.3 -6.1,-3.2 -7.6,-1.7 -13.9,-5.7 -20.4,-13.1 -6.6,-7.4 -11.2,-16.6 -12.1,-23.8 -0.9,-7.7 -0.9,-7.7 -13.3,-8.1L305,232.8l0,-10.8c0,-11.8 -0.2,-12.3 -5.8,-10.8l-3.3,0.9 0,15.5c0,10.1 0.3,15.3 1,14.9 0.6,-0.4 1,4.5 1,13.9 0,8 -0.3,14.6 -0.8,14.6 -0.4,-0 -0.6,6.4 -0.4,14.2 0.3,14.8 -0.2,19.3 -1.9,18.2 -1.2,-0.8 -4.3,1.9 -7.1,6.1 -1.3,1.9 -0.5,1.4 2.2,-1.5l4.2,-4.5 -3.6,4.7c-2,2.6 -4.3,4.9 -5.2,5.3 -1.5,0.6 -14.2,0.9 -14.5,0.3 -0.1,-0.1 -0.4,-9.5 -0.8,-20.8L269.5,272.5 228.6,272.2c-29.3,-0.2 -41.3,0.1 -42.3,0.9C185.3,274 185,278.5 185,294l0,19.8 -4.3,0.5c-2.3,0.3 -5.3,0.8 -6.5,1.2 -1.8,0.6 -2.3,0.3 -2.4,-1.1zM173.1,300c1.7,-0.9 1.9,-2.2 1.9,-11.8 0,-7 -0.4,-11.2 -1.2,-12 -0.8,-0.8 -4.9,-1.2 -11.8,-1.2 -6.9,0 -11,0.4 -11.8,1.2 -0.8,0.8 -1.2,4.7 -1.2,11.2C149,300.7 149.3,301 161.7,301c5.2,0 10.3,-0.5 11.3,-1zM132.4,297.4c2,-2 2.3,-21.3 0.4,-23.2 -0.8,-0.8 -6.1,-1.2 -17.3,-1.2 -11.2,0 -16.5,0.4 -17.3,1.2 -0.8,0.8 -1.2,4.9 -1.2,12 0,9.2 0.3,10.9 1.8,11.8 1,0.6 8.5,1 16.9,1 12.5,0 15.5,-0.2 16.8,-1.5zM396.4,268.5c2.7,-2.7 3,-5.5 0.9,-8.4 -2.8,-3.8 -7.4,-4 -10.1,-0.5 -1.2,1.5 -2.1,3.5 -2.1,4.6 0,4.7 8,7.8 11.4,4.4zM364.9,260.4C366.1,258.9 367,257.2 367,256.5c0,-0.7 -0.9,-2.4 -2.1,-3.9C361.1,247.8 353,250.4 353,256.5c0,6.1 8.1,8.7 11.9,3.9zM173.4,256.4C174.7,255.9 175,253.8 175,244.3c0,-13.1 -1.4,-16.8 -7.4,-19.7 -4.2,-2 -6.9,-2 -10.7,-0.1 -5.6,2.9 -6.9,6.6 -6.9,19.6 -0,8.4 0.3,11.8 1.2,12.2 1.8,0.7 20.3,0.8 22.2,0.1zM203.8,244.5c0.2,-10.5 0,-12.4 -1.7,-15.3 -4.4,-7.2 -13,-8 -19.1,-1.7l-3.4,3.5 -0.3,11.5c-0.2,8.1 0,11.9 0.9,13 1,1.2 3.5,1.4 12.3,1.2L203.5,256.5l0.3,-12zM233,255.1c1.5,-2.9 1.3,-19.5 -0.3,-23.3C229.3,223.9 221.3,220.9 215,225.2c-5.6,3.7 -7,7.7 -7,19.4 -0,6.5 0.4,10.5 1.2,11.3 0.8,0.8 4.9,1.2 12,1.2 9.6,0 10.9,-0.2 11.8,-1.9zM261.8,255.8c0.8,-0.8 1.2,-5 1.2,-12.3 0,-11.6 -0.6,-13.6 -5.5,-17.7 -5.3,-4.4 -13.7,-2.8 -17.5,3.5 -1.7,2.8 -2,5 -2,14.8 -0,6.4 0.3,11.9 0.7,12.3 1.2,1.2 21.9,0.7 23.1,-0.5zM291.8,244.8c0.3,-13.3 -0.7,-16.5 -6.1,-19.8 -4.1,-2.5 -7.3,-2.5 -11.5,0 -5.9,3.6 -7.2,7.1 -7.2,19.1 -0,7 0.4,11 1.2,11.8 0.9,0.9 4.5,1.1 12.3,0.9L291.5,256.5l0.3,-11.7zM344.4,239.9c3.4,-2.6 3.4,-6.3 0.1,-9.6 -2.7,-2.7 -6.5,-2.7 -9.4,0.2 -2.2,2.2 -1.8,7.5 0.9,9.6 3,2.4 5.2,2.3 8.4,-0.2zM389.1,240.2c2.6,-2.1 3.1,-7.4 0.9,-9.6 -2.9,-2.8 -6.6,-2.9 -9.4,-0.2 -3.3,3.3 -3.3,6.9 0.1,9.6 3.3,2.6 5.5,2.6 8.4,0.2zM364.1,231.2c2.7,-2.2 3.1,-7.5 0.7,-9.9 -2.4,-2.4 -7.7,-2.1 -9.9,0.7 -2.6,3.2 -2.3,6.5 0.8,9 3.3,2.6 5.5,2.6 8.4,0.2zM404,218c2.6,-2.6 2.5,-5.1 -0.1,-8.4 -2.7,-3.5 -7.3,-3.2 -10.1,0.5C389,216.5 398.3,223.7 404,218zM325.5,211.4c0,-2.8 -0.4,-3.9 -1.5,-3.9 -1.6,0 -2.6,4.5 -1.6,7.2 1.1,2.8 3.1,0.7 3.1,-3.3zM371.5,207.5C372.9,206.2 374,204.1 374,203c0,-2.7 -4.3,-7 -7,-7 -2.7,0 -7,4.3 -7,7 0,2.7 4.3,7 7,7 1.1,0 3.2,-1.1 4.5,-2.5zM192.4,311.7c-0.3,-0.7 -0.4,-8.5 -0.2,-17.3L192.5,278.5l35.5,0 35.5,0 0.3,15c0.2,8.3 0,16 -0.3,17.3l-0.6,2.3 -35,0c-27.7,0 -35.1,-0.3 -35.5,-1.3zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM367.3,294c0,-2.5 0.2,-3.5 0.4,-2.3 0.2,1.2 0.2,3.3 0,4.5 -0.2,1.2 -0.4,0.2 -0.4,-2.3zM380.3,289.5c0,-2.8 0.2,-3.8 0.4,-2.2 0.2,1.5 0.2,3.8 -0,5 -0.2,1.2 -0.4,-0 -0.4,-2.8zM421,292.1c-1.3,-2.5 -1.3,-5.7 -0,-8.1 1,-1.8 3,-1.9 58.6,-1.9l57.6,-0 -0.7,2.3c-0.4,1.2 -0.9,4 -1.3,6l-0.6,3.8 -56.3,0c-54.7,0 -56.4,-0.1 -57.4,-1.9zM579,291.2c0,-1.5 -0.9,-3.5 -2,-4.5 -3.5,-3 -2.5,-4.5 2.8,-4.4l4.8,0.1 0.3,4.9c0.3,5.1 -0.6,6.6 -4.1,6.6 -1.3,0 -1.8,-0.8 -1.8,-2.8zM545.2,260.3 L545.5,237.5l11.3,-0.3 11.3,-0.3 0,23 0,23 -11.5,0 -11.5,0 0.3,-22.8zM632,209.5l0,-11.5 7,0 7,0 0,8.8 0,8.8 -5.5,2.7C631.8,222.5 632,222.7 632,209.5zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -1.4,-2.2 -27,-1.6 -28.8,0.7 -0.8,1.1 -1.2,5.7 -1.2,14.2 0,12.5 0.4,14.4 2.7,15.2 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -0.7,-1.2 -3.5,-1.4 -14.7,-1.2 -9.1,0.2 -14.1,0.7 -14.5,1.5 -1,1.5 -1,26.8 -0,28.3 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM288.5,4.5C288,4.3 286.3,3.9 284.8,3.6 283.2,3.2 282,2.3 282,1.5 282,0.2 288.8,0 334.5,0 363.9,0 387,0.4 387,0.9c0,0.5 -0.7,1.5 -1.7,2.3 -1.3,1.1 -10.5,1.4 -48.8,1.6C310.7,4.8 289,4.7 288.5,4.5z"
+        android:fillColor="#9e9a34"/>
+    <path
+        android:pathData="m372.9,403.6c-0.3,-0.3 -6.8,-0.7 -14.5,-1C326.3,401.7 262.8,397.8 236,395.1c-5.2,-0.5 -14.3,-1.4 -20.1,-2 -11,-1.1 -16.9,-1.8 -37.4,-4.5 -6.6,-0.9 -15.1,-2 -19,-2.5 -11,-1.4 -43.5,-6.8 -61,-10.1 -28.4,-5.4 -71.3,-15.1 -74.4,-16.8 -1.6,-0.9 770.2,-2 773.8,-1 2.6,0.7 -3,2.1 -32.4,8 -13.9,2.8 -59.4,10.8 -74.5,13 -49.3,7.3 -94.3,12.6 -135,16 -37.2,3.1 -72.9,5.3 -129,7.7 -21,0.9 -53.5,1.4 -54.1,0.8zM374.3,321.5c-0.3,-0.8 -0.4,-1.8 -0.1,-2 0.3,-0.3 0.7,0.4 1,1.5 0.6,2.4 -0.1,2.8 -0.9,0.5zM172,313.9c0,-1.4 0.4,-1.8 1.3,-1.3 1,0.6 1,0.4 0.1,-0.7 -0.6,-0.8 -1.6,-3.1 -2.3,-5l-1.2,-3.6 -11.7,-0.2c-14.9,-0.3 -16.9,-0.3 -38.7,-0.2 -9.9,0.1 -21.6,-0 -26,-0.1L85.5,302.5 85,282.6c-0.4,-14.7 -0.8,-20 -1.8,-20.3 -2.4,-0.8 -1.2,-3.2 6.4,-13.3l7.7,-10.2 23.2,0.5 23.2,0.5 0.6,-9.6c1.1,-16.8 1,-18 -1.9,-18.7 -3.2,-0.8 -3.2,-2.2 0.6,-8.6 1.7,-2.9 5.6,-10.2 8.6,-16.3 3,-6.1 6,-11.4 6.7,-11.8 0.6,-0.4 29.5,-0.7 64.3,-0.8 52.1,-0 63.3,0.2 64.3,1.3 0.6,0.7 4.2,8.1 8,16.3 8.4,18.3 9.9,19.2 10.3,6.7L305.5,189.5l11.3,-0.3 11.3,-0.3 0,12.6c0,7.3 0.5,13.5 1.1,14.7 0.8,1.5 0.8,4.2 -0.1,10 -1.1,7.4 -1.4,7.9 -3.4,7.4 -1.2,-0.3 -6.3,-0.6 -11.4,-0.6L305,233l0,-10.9c0,-11.9 -0.2,-12.4 -5.8,-10.9l-3.3,0.9 0,15.5c0,10.1 0.3,15.3 1,14.9 0.6,-0.4 1,4.5 1,13.9 0,9 -0.4,14.6 -1,14.6 -0.6,0 -1,5.6 -1,14.8l0,14.8 -5.4,5.8 -5.4,5.8 -7.3,-0.3L270.5,311.5 270,292l-0.5,-19.5 -40.9,-0.3c-29.3,-0.2 -41.3,0.1 -42.3,0.9C185.3,274 185,278.4 185,293.1L185,312l-3.5,0c-2.2,0 -4.3,0.8 -5.5,2 -2.6,2.6 -4,2.5 -4,-0.1zM173.1,300c1.7,-0.9 1.9,-2.2 1.9,-11.8 0,-7 -0.4,-11.2 -1.2,-12 -0.8,-0.8 -4.9,-1.2 -11.8,-1.2 -6.9,0 -11,0.4 -11.8,1.2 -0.8,0.8 -1.2,4.7 -1.2,11.2C149,300.7 149.3,301 161.7,301c5.2,0 10.3,-0.5 11.3,-1zM132.4,297.4c2,-2 2.3,-21.3 0.4,-23.2 -0.8,-0.8 -6.1,-1.2 -17.3,-1.2 -11.2,0 -16.5,0.4 -17.3,1.2 -0.8,0.8 -1.2,4.9 -1.2,12 0,9.2 0.3,10.9 1.8,11.8 1,0.6 8.5,1 16.9,1 12.5,0 15.5,-0.2 16.8,-1.5zM173.4,256.4C174.7,255.9 175,253.8 175,244.3c0,-13.1 -1.4,-16.8 -7.4,-19.7 -4.2,-2 -6.9,-2 -10.7,-0.1 -5.6,2.9 -6.9,6.6 -6.9,19.6 -0,8.4 0.3,11.8 1.2,12.2 1.8,0.7 20.3,0.8 22.2,0.1zM203.8,244.5c0.2,-10.5 0,-12.4 -1.7,-15.3 -4.4,-7.2 -13,-8 -19.1,-1.7l-3.4,3.5 -0.3,11.5c-0.2,8.1 0,11.9 0.9,13 1,1.2 3.5,1.4 12.3,1.2L203.5,256.5l0.3,-12zM233,255.1c1.5,-2.9 1.3,-19.5 -0.3,-23.3C229.3,223.9 221.3,220.9 215,225.2c-5.6,3.7 -7,7.7 -7,19.4 -0,6.5 0.4,10.5 1.2,11.3 0.8,0.8 4.9,1.2 12,1.2 9.6,0 10.9,-0.2 11.8,-1.9zM261.8,255.8c0.8,-0.8 1.2,-5 1.2,-12.3 0,-11.6 -0.6,-13.6 -5.5,-17.7 -5.3,-4.4 -13.7,-2.8 -17.5,3.5 -1.7,2.8 -2,5 -2,14.8 -0,6.4 0.3,11.9 0.7,12.3 1.2,1.2 21.9,0.7 23.1,-0.5zM291.8,244.8c0.3,-13.3 -0.7,-16.5 -6.1,-19.8 -4.1,-2.5 -7.3,-2.5 -11.5,0 -5.9,3.6 -7.2,7.1 -7.2,19.1 -0,7 0.4,11 1.2,11.8 0.9,0.9 4.5,1.1 12.3,0.9L291.5,256.5 291.8,244.8zM325.5,211.4c0,-2.8 -0.4,-3.9 -1.5,-3.9 -1.6,0 -2.6,4.5 -1.6,7.2 1.1,2.8 3.1,0.7 3.1,-3.3zM192.4,311.7c-0.3,-0.7 -0.4,-8.5 -0.2,-17.3L192.5,278.5l35.5,0 35.5,0 0.3,15c0.2,8.3 0,16 -0.3,17.3l-0.6,2.3 -35,0c-27.7,0 -35.1,-0.3 -35.5,-1.3zM217.3,295.6c0.1,-0.5 -0.3,-1.1 -1,-1.3 -0.7,-0.2 -1.3,0.3 -1.3,1.3 0,1.7 1.8,1.8 2.3,0.1zM240.8,295.2C241,294.5 240.5,294 239.6,294 238.7,294 238,294.7 238,295.6c0,1.8 2.2,1.5 2.8,-0.4zM422.7,291.3c-1.3,-1.3 -0.6,-6.1 1.2,-7.7C425.5,282.2 430.9,282 481.4,282l55.8,0 -0.6,2.3c-0.4,1.2 -0.9,3.5 -1.2,5L534.8,292l-55.7,0c-30.6,0 -56,-0.3 -56.4,-0.7zM579,290.2c0,-1 -0.9,-2.5 -2,-3.5C575.1,285.1 574.2,282 575.7,282c0.4,0 2.2,0.5 4,1.2 3,1.1 3.3,1.6 3.3,5 0,3.1 -0.4,3.8 -2,3.8 -1.2,0 -2,-0.7 -2,-1.8zM545.2,260.3 L545.5,237.5l11.3,-0.3 11.3,-0.3 0,23 0,23 -11.5,0 -11.5,0 0.3,-22.8zM632,209.5l0,-11.5 7,0 7,0 0,8.3 0,8.3 -6,3.2c-3.3,1.7 -6.5,3.2 -7,3.2C632.4,221 632,216.4 632,209.5zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3C579.3,136 579,131.7 579,127c0,-6.1 -0.4,-9 -1.4,-9.8 -1,-0.8 -20,-0.8 -74.1,-0 -59.7,0.9 -74,0.9 -80.2,-0.2 -4.1,-0.7 -7.3,-1.6 -7.1,-1.9 1.7,-3 5.2,-11.7 6.9,-17 3.4,-10.5 11,-31.5 11.9,-32.4 0.4,-0.5 30.2,-0.8 66.1,-0.7 50.1,0.1 65.6,0.4 66.6,1.4 0.7,0.7 4.1,9 7.6,18.5 3.5,9.5 7,17.9 7.8,18.7 1.3,1.3 40.2,2.2 101.2,2.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM489.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -1.4,-2.2 -27,-1.6 -28.8,0.7 -0.8,1.1 -1.2,5.7 -1.2,14.2 0,12.5 0.4,14.4 2.7,15.2 2.2,0.7 25.9,0.3 27.1,-0.5zM546.8,108.6c1.4,-0.9 1.6,-27.3 0.2,-29.6 -0.7,-1.2 -3.5,-1.4 -14.7,-1.2 -9.1,0.2 -14.1,0.7 -14.5,1.5 -1,1.5 -1,26.8 -0,28.3 0.4,0.6 1.3,1.3 2,1.5 2.2,0.7 25.9,0.3 27.1,-0.5zM246.3,114.3C243.5,113.2 245.2,112 249.5,112c4.5,0 6,1.2 2.9,2.4 -1.8,0.7 -4.4,0.7 -6.2,-0.1zM670.2,96.3C669.6,96.1 669.2,95.4 669.6,94.9 670.3,93.7 678,93.7 678,94.9c0,1.7 -4.8,2.6 -7.8,1.4zM423,51.3c-1.4,-0.3 -2.9,-0.9 -3.5,-1.5 -2,-1.9 2.1,-2.8 12.7,-2.9 10.6,-0 13.4,0.8 10.9,3.3 -1.2,1.2 -15.5,1.9 -20.1,1zM288.5,4.5C288,4.3 286.3,3.9 284.8,3.6 283.2,3.2 282,2.3 282,1.5 282,0.2 288.8,0 334.5,0 363.9,0 387,0.4 387,0.9c0,0.5 -0.7,1.5 -1.7,2.3 -1.3,1.1 -10.5,1.4 -48.8,1.6C310.7,4.8 289,4.7 288.5,4.5z"
+        android:fillColor="#996d55"/>
+    <path
+        android:pathData="m372.9,403.6c-0.3,-0.3 -6.8,-0.7 -14.5,-1C326.3,401.7 262.8,397.8 236,395.1c-5.2,-0.5 -14.3,-1.4 -20.1,-2 -11,-1.1 -16.9,-1.8 -37.4,-4.5 -6.6,-0.9 -15.1,-2 -19,-2.5 -11,-1.4 -43.5,-6.8 -61,-10.1 -28.4,-5.4 -71.3,-15.1 -74.4,-16.8 -1.6,-0.9 770.2,-2 773.8,-1 2.6,0.7 -3,2.1 -32.4,8 -13.9,2.8 -59.4,10.8 -74.5,13 -49.3,7.3 -94.3,12.6 -135,16 -37.2,3.1 -72.9,5.3 -129,7.7 -21,0.9 -53.5,1.4 -54.1,0.8zM172,313.9c0,-1.4 0.4,-1.8 1.3,-1.3 1,0.6 1,0.4 0.1,-0.7 -0.6,-0.8 -1.6,-3.1 -2.3,-5l-1.2,-3.6 -11.7,-0.2c-14.9,-0.3 -16.9,-0.3 -38.7,-0.2 -9.9,0.1 -21.6,-0 -26,-0.1L85.5,302.5 85,282.6C84.6,267.9 84.2,262.6 83.3,262.2 82.6,262 82,261.2 82,260.5c0,-1.6 8.1,-12.7 12.7,-17.5l3.5,-3.6 22.8,0 22.8,0 0.7,-13.5c0.7,-13.1 0.7,-13.5 -1.5,-15.3l-2.2,-1.8 5.5,-10.8c3,-5.9 6.7,-13.6 8.2,-17 1.9,-4.3 3.4,-6.4 4.8,-6.7 3.7,-0.8 125,-0 126.7,0.8 2.4,1.2 14.8,29 14.9,33.3 0,0.6 -1.1,1.7 -2.5,2.4l-2.5,1.3 0,44.1 0,44.1 -5.4,5.8 -5.4,5.8 -7.3,-0.3L270.5,311.5 270,292l-0.5,-19.5 -40.9,-0.3c-29.3,-0.2 -41.3,0.1 -42.3,0.9C185.3,274 185,278.4 185,293.1L185,312l-3.5,0c-2.2,0 -4.3,0.8 -5.5,2 -2.6,2.6 -4,2.5 -4,-0.1zM173.1,300c1.7,-0.9 1.9,-2.2 1.9,-11.8 0,-7 -0.4,-11.2 -1.2,-12 -0.8,-0.8 -4.9,-1.2 -11.8,-1.2 -6.9,0 -11,0.4 -11.8,1.2 -0.8,0.8 -1.2,4.7 -1.2,11.2C149,300.7 149.3,301 161.7,301c5.2,0 10.3,-0.5 11.3,-1zM132.4,297.4c2,-2 2.3,-21.3 0.4,-23.2 -0.8,-0.8 -6.1,-1.2 -17.3,-1.2 -11.2,0 -16.5,0.4 -17.3,1.2 -0.8,0.8 -1.2,4.9 -1.2,12 0,9.2 0.3,10.9 1.8,11.8 1,0.6 8.5,1 16.9,1 12.5,0 15.5,-0.2 16.8,-1.5zM173.4,256.4C174.7,255.9 175,253.8 175,244.3c0,-13.1 -1.4,-16.8 -7.4,-19.7 -4.2,-2 -6.9,-2 -10.7,-0.1 -5.6,2.9 -6.9,6.6 -6.9,19.6 -0,8.4 0.3,11.8 1.2,12.2 1.8,0.7 20.3,0.8 22.2,0.1zM203.8,244.5c0.2,-10.5 0,-12.4 -1.7,-15.3 -4.4,-7.2 -13,-8 -19.1,-1.7l-3.4,3.5 -0.3,11.5c-0.2,8.1 0,11.9 0.9,13 1,1.2 3.5,1.4 12.3,1.2L203.5,256.5l0.3,-12zM233,255.1c1.5,-2.9 1.3,-19.5 -0.3,-23.3C229.3,223.9 221.3,220.9 215,225.2c-5.6,3.7 -7,7.7 -7,19.4 -0,6.5 0.4,10.5 1.2,11.3 0.8,0.8 4.9,1.2 12,1.2 9.6,0 10.9,-0.2 11.8,-1.9zM261.8,255.8c0.8,-0.8 1.2,-5 1.2,-12.3 0,-11.6 -0.6,-13.6 -5.5,-17.7 -5.3,-4.4 -13.7,-2.8 -17.5,3.5 -1.7,2.8 -2,5 -2,14.8 -0,6.4 0.3,11.9 0.7,12.3 1.2,1.2 21.9,0.7 23.1,-0.5zM291.8,244.8c0.3,-13.3 -0.7,-16.5 -6.1,-19.8 -4.1,-2.5 -7.3,-2.5 -11.5,0 -5.9,3.6 -7.2,7.1 -7.2,19.1 -0,7 0.4,11 1.2,11.8 0.9,0.9 4.5,1.1 12.3,0.9L291.5,256.5 291.8,244.8zM193,295.5l0,-16.5 35,-0 35,-0 -0.3,16.2L262.5,311.5l-16.9,0.3c-10.9,0.2 -17.3,-0.1 -18.2,-0.8 -0.9,-0.7 -1.5,-0.8 -1.9,-0C225.1,311.6 219,312 208.9,312L193,312 193,295.5zM218,295.5c0,-1.8 -0.5,-2.5 -2,-2.5 -2,0 -2.8,2.8 -1.3,4.3C216.2,298.9 218,297.9 218,295.5zM241.3,296.8c0.7,-2.1 -0.4,-3.8 -2.4,-3.8 -1.9,0 -2.7,2.9 -1.2,4.3 1.1,1.1 3.1,0.8 3.6,-0.6zM580.9,289c-1.4,-3 -1.4,-3.6 -0.2,-4.3 2,-1.2 2.4,-0.4 2.1,4L582.5,292.5 580.9,289zM423,288l0,-3 55.9,0 55.9,0 -1.1,3 -1.1,3 -54.8,0 -54.8,0 0,-3zM545.5,281.8c-0.3,-0.7 -0.4,-11 -0.2,-22.8L545.5,237.5l11,0 11,0 0,22.5 0,22.5 -10.8,0.3c-8.2,0.2 -10.9,-0 -11.3,-1zM305.2,211.3 L305.5,189.5l11.3,-0.3 11.3,-0.3 0,12.5c0,6.9 0.5,13.7 1.1,15.2 0.7,2 0.7,4.7 -0.1,9.6L327.8,233l-11.4,0 -11.4,0 0.3,-21.8zM325.8,189.7c0,-2.8 -0.4,-3.9 -1.5,-3.9 -1.6,0 -2.6,4.5 -1.6,7.2 1.1,2.8 3.1,0.7 3.1,-3.3zM632.9,198.6C632.3,220 632,214.8 632,208.8L632,198l7,0 7,0 0,8.4 0,8.4 -5.8,2.8c-3.2,1.5 -6,2.9 -6.4,3.1 -0.3,0.2 -0.9,-0 -1.3,-0.4zM145.6,131.7c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.9,114.6c-0.4,-0.4 -0.7,-4.3 -0.7,-8.8 -0,-4.4 -0.3,-9.1 -0.6,-10.4l-0.6,-2.4 -67.6,0.9c-79.5,1 -89.9,1 -91.2,-0.3 -0.6,-0.6 0.1,-3.6 2,-8.3 1.7,-4 3.5,-9.2 4.1,-11.4 1.6,-6.3 10.1,-28 11.3,-29.1 0.7,-0.7 23.7,-0.9 65.9,-0.7l64.8,0.3 1.9,4.5c1.1,2.5 4.2,11 7.1,19 4.2,11.7 5.6,14.6 7.3,15 1.7,0.4 67.1,1.3 100.9,1.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM491.2,86.9c0.8,-0.9 1.1,-6.1 0.9,-16.3L491.5,77.5l-15.5,0 -15.5,0 -0.5,14.5c-0.3,8 -0.1,15.3 0.3,16.3 0.7,1.5 2.4,1.8 15.1,1.8 11,0 14.6,-0.3 15.5,-1.4zM547.8,108.8c0.8,-0.8 1.2,-5.9 1.2,-16.5l0,-15.3 -16.2,0.3 -16.2,0.3 0.3,15.5c0.2,8.5 0.5,15.8 0.8,16.2 0.8,1.3 28.8,0.9 30.2,-0.4zM467.5,74c0.3,-0.6 -0.1,-1 -0.9,-1C465.7,73 465,73.4 465,74c0,0.6 0.4,1 0.9,1 0.5,0 1.2,-0.4 1.6,-1zM477.5,74c-0.3,-0.6 -1.6,-1 -2.8,-0.9C472.7,73.2 472.7,73.3 475,74c1.4,0.4 2.6,0.8 2.8,0.9C478,75 477.8,74.6 477.5,74zM525,73.4C525,73.2 524.1,73 522.9,73c-1.1,0 -1.8,0.4 -1.5,1C522,74.8 525,74.3 525,73.4zM486.3,73.3c-0.7,-0.3 -1.8,-0.3 -2.5,0 -0.7,0.3 -0.1,0.5 1.3,0.5 1.4,0 1.9,-0.2 1.3,-0.5zM533.3,73.3c-0.7,-0.3 -1.8,-0.3 -2.5,0 -0.7,0.3 -0.1,0.5 1.3,0.5 1.4,0 1.9,-0.2 1.3,-0.5zM422.3,50.3C421,50.1 420,49.4 420,48.9 420,48.4 425.1,48 431.5,48c10.5,0 14,0.8 9.9,2.4 -1.7,0.7 -15.6,0.6 -19.2,-0.1zM288.5,4.5C288,4.3 286.3,3.9 284.8,3.6 283.2,3.2 282,2.3 282,1.5 282,0.2 288.8,0 334.5,0 363.9,0 387,0.4 387,0.9c0,0.5 -0.7,1.5 -1.7,2.3 -1.3,1.1 -10.5,1.4 -48.8,1.6C310.7,4.8 289,4.7 288.5,4.5z"
+        android:fillColor="#d25e25"/>
+    <path
+        android:pathData="m372.9,403.6c-0.3,-0.3 -6.8,-0.7 -14.5,-1C326.3,401.7 262.8,397.8 236,395.1c-5.2,-0.5 -14.3,-1.4 -20.1,-2 -11,-1.1 -16.9,-1.8 -37.4,-4.5 -6.6,-0.9 -15.1,-2 -19,-2.5 -11,-1.4 -43.5,-6.8 -61,-10.1 -28.4,-5.4 -71.3,-15.1 -74.4,-16.8 -1.6,-0.9 770.2,-2 773.8,-1 2.6,0.7 -3,2.1 -32.4,8 -13.9,2.8 -59.4,10.8 -74.5,13 -49.3,7.3 -94.3,12.6 -135,16 -37.2,3.1 -72.9,5.3 -129,7.7 -21,0.9 -53.5,1.4 -54.1,0.8zM172.2,313.1c0.1,-1.6 0.6,-2.7 1,-2.4 0.4,0.3 0.6,0.9 0.3,1.3 -0.3,0.4 0.7,0.6 2.1,0.3l2.6,-0.5 -2.1,2.1c-2.9,2.9 -4.2,2.7 -4,-0.8zM193,295.5l0,-16.5 35,-0 35,-0 -0.3,16.2L262.5,311.5l-16.9,0.3c-10.9,0.2 -17.3,-0.1 -18.2,-0.8 -0.9,-0.7 -1.5,-0.8 -1.9,-0C225.1,311.6 219,312 208.9,312L193,312 193,295.5zM218,295.5c0,-1.8 -0.5,-2.5 -2,-2.5 -2,0 -2.8,2.8 -1.3,4.3C216.2,298.9 218,297.9 218,295.5zM241.3,296.8c0.7,-2.1 -0.4,-3.8 -2.4,-3.8 -1.9,0 -2.7,2.9 -1.2,4.3 1.1,1.1 3.1,0.8 3.6,-0.6zM580.9,289c-1.4,-3 -1.4,-3.6 -0.2,-4.3 2,-1.2 2.4,-0.4 2.1,4L582.5,292.5 580.9,289zM423,288l0,-3 55.9,0 55.9,0 -1.1,3 -1.1,3 -54.8,0 -54.8,0 0,-3zM545.5,281.8c-0.3,-0.7 -0.4,-11 -0.2,-22.8L545.5,237.5l11,0 11,0 0,22.5 0,22.5 -10.8,0.3c-8.2,0.2 -10.9,-0 -11.3,-1zM84.1,263.8C84,262.8 83.6,262 83,262c-0.6,0 -1,-0.6 -1,-1.4 0,-1.7 7.9,-12.6 12.7,-17.6l3.5,-3.6 23.4,0 23.4,0 0,10.6c0,6.9 -0.4,11 -1.2,11.8 -0.9,0.9 -8.9,1.2 -29.9,1.2 -22,0 -28.8,0.3 -29.2,1.3 -0.3,0.7 -0.5,0.5 -0.6,-0.5zM305.2,211.3 L305.5,189.5l11.3,-0.3 11.3,-0.3 0,12.5c0,6.9 0.5,13.7 1.1,15.2 0.7,2 0.7,4.7 -0.1,9.6L327.8,233l-11.4,0 -11.4,0 0.3,-21.8zM325.8,189.7c0,-2.8 -0.4,-3.9 -1.5,-3.9 -1.6,0 -2.6,4.5 -1.6,7.2 1.1,2.8 3.1,0.7 3.1,-3.3zM632.9,198.6C632.3,220 632,214.8 632,208.8L632,198l7,0 7,0 0,8.4 0,8.4 -5.8,2.8c-3.2,1.5 -6,2.9 -6.4,3.1 -0.3,0.2 -0.9,-0 -1.3,-0.4zM143.2,189 L141.1,187.3 146.6,176.5c3,-5.9 6.7,-13.6 8.2,-17 1.9,-4.3 3.4,-6.4 4.8,-6.7 3.7,-0.8 125,-0 126.8,0.8 1.7,0.8 11.5,21.7 13.9,29.5 1.2,4 1.2,4.4 -0.6,5.5 -1.4,0.8 -23.4,1.3 -78.1,1.6 -71.1,0.5 -76.3,0.4 -78.3,-1.2zM145.6,131.7c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.9,114.6c-0.4,-0.4 -0.7,-4.3 -0.7,-8.8 -0,-4.4 -0.3,-9.1 -0.6,-10.4l-0.6,-2.4 -67.6,0.9c-79.5,1 -89.9,1 -91.2,-0.3 -0.6,-0.6 0.1,-3.6 2,-8.3 1.7,-4 3.5,-9.2 4.1,-11.4 1.6,-6.3 10.1,-28 11.3,-29.1 0.7,-0.7 23.7,-0.9 65.9,-0.7l64.8,0.3 1.9,4.5c1.1,2.5 4.2,11 7.1,19 4.2,11.7 5.6,14.6 7.3,15 1.7,0.4 67.1,1.3 100.9,1.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM491.2,86.9c0.8,-0.9 1.1,-6.1 0.9,-16.3L491.5,77.5l-15.5,0 -15.5,0 -0.5,14.5c-0.3,8 -0.1,15.3 0.3,16.3 0.7,1.5 2.4,1.8 15.1,1.8 11,0 14.6,-0.3 15.5,-1.4zM547.8,108.8c0.8,-0.8 1.2,-5.9 1.2,-16.5l0,-15.3 -16.2,0.3 -16.2,0.3 0.3,15.5c0.2,8.5 0.5,15.8 0.8,16.2 0.8,1.3 28.8,0.9 30.2,-0.4zM467.5,74c0.3,-0.6 -0.1,-1 -0.9,-1C465.7,73 465,73.4 465,74c0,0.6 0.4,1 0.9,1 0.5,0 1.2,-0.4 1.6,-1zM477.5,74c-0.3,-0.6 -1.6,-1 -2.8,-0.9C472.7,73.2 472.7,73.3 475,74c1.4,0.4 2.6,0.8 2.8,0.9C478,75 477.8,74.6 477.5,74zM525,73.4C525,73.2 524.1,73 522.9,73c-1.1,0 -1.8,0.4 -1.5,1C522,74.8 525,74.3 525,73.4zM486.3,73.3c-0.7,-0.3 -1.8,-0.3 -2.5,0 -0.7,0.3 -0.1,0.5 1.3,0.5 1.4,0 1.9,-0.2 1.3,-0.5zM533.3,73.3c-0.7,-0.3 -1.8,-0.3 -2.5,0 -0.7,0.3 -0.1,0.5 1.3,0.5 1.4,0 1.9,-0.2 1.3,-0.5zM422.3,50.3C421,50.1 420,49.4 420,48.9 420,48.4 425.1,48 431.5,48c10.5,0 14,0.8 9.9,2.4 -1.7,0.7 -15.6,0.6 -19.2,-0.1zM283,3.2C282.4,3 282,2.2 282,1.4 282,0.2 289.9,0 334.5,0c48.6,0 55,0.3 51.5,2.5 -1,0.6 -101.2,1.3 -103,0.7z"
+        android:fillColor="#a26430"/>
+    <path
+        android:pathData="m372.9,403.6c-0.3,-0.3 -6.8,-0.7 -14.5,-1C326.3,401.7 262.8,397.8 236,395.1c-5.2,-0.5 -14.3,-1.4 -20.1,-2 -11,-1.1 -16.9,-1.8 -37.4,-4.5 -6.6,-0.9 -15.1,-2 -19,-2.5 -11,-1.4 -43.5,-6.8 -61,-10.1 -28.4,-5.4 -71.3,-15.1 -74.4,-16.8 -1.6,-0.9 770.2,-2 773.8,-1 2.6,0.7 -3,2.1 -32.4,8 -13.9,2.8 -59.4,10.8 -74.5,13 -49.3,7.3 -94.3,12.6 -135,16 -37.2,3.1 -72.9,5.3 -129,7.7 -21,0.9 -53.5,1.4 -54.1,0.8zM172,314c0,-1.3 0.5,-1.8 1.5,-1.4 0.8,0.3 1.5,1.2 1.5,2 0,0.8 -0.7,1.4 -1.5,1.4 -0.8,0 -1.5,-0.9 -1.5,-2zM193,295l0,-16 34.8,0.2 34.8,0.2 0,15.5 0,15.5 -34.8,0.2L193,311 193,295zM218.4,296.3c0.4,-1 -0,-2.3 -1,-3.3 -1.5,-1.4 -1.7,-1.4 -3,0.3 -0.8,1 -1.1,2.5 -0.8,3.3 0.7,1.9 4,1.8 4.8,-0.3zM241.7,296.4c0.7,-1.9 -2,-4.9 -3.6,-4 -0.6,0.4 -1.1,1.8 -1.1,3.1 0,1.8 0.5,2.4 2,2.4 1.1,0 2.3,-0.7 2.6,-1.6zM545,260l0,-22 11.5,0 11.5,0 0,22 0,22 -11.5,0 -11.5,0 0,-22zM82,260.6c0,-1.6 8,-12.6 12.7,-17.5l3.5,-3.6 21.5,0C145.1,239.5 144,239 144,251.1c0,4.2 -0.3,8.5 -0.6,9.3 -0.5,1.4 -4,1.6 -31,1.5C87.7,261.9 82,261.6 82,260.6zM305.8,220.8c-0.3,-6.8 -0.3,-16.7 -0,-22l0.5,-9.8 10.9,0 10.9,0 -0.1,17.3c-0,9.5 -0.4,19.3 -0.8,21.8l-0.7,4.5 -10.1,0.3 -10.1,0.3 -0.5,-12.3zM325.5,211.4c0,-3.7 -0.4,-4.9 -1.5,-4.9 -1.6,0 -2.7,6.3 -1.6,9.2 1.2,3.2 3.1,0.6 3.1,-4.3zM632.4,217.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.3L632.5,198.5l6.8,-0.3 6.8,-0.3 -0.3,7.7 -0.3,7.7 -5,2.8c-5.7,3.2 -7.3,3.5 -8.1,1.6zM144,211c-1.4,-0.6 -2.6,-1.2 -2.8,-1.4 -0.2,-0.2 2.1,-5.3 5.1,-11.2 3,-6 6.7,-13.5 8.1,-16.8 1.4,-3.3 3.1,-6.3 3.7,-6.6 1.4,-0.9 115.1,-1 122.2,-0.2l5.8,0.7 7.4,15.8C297.7,199.9 301,207.7 301,208.4c0,0.9 -1.6,1.6 -4.8,1.9 -9.6,1.1 -149.7,1.7 -152.2,0.6zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3c-0.4,-0.4 -0.7,-4.3 -0.7,-8.8 -0,-4.4 -0.3,-9.1 -0.6,-10.4l-0.6,-2.4 -67.6,0.9c-79.5,1 -89.9,1 -91.2,-0.3 -0.6,-0.6 0.1,-3.6 2,-8.3 1.7,-4 3.5,-9.2 4.1,-11.4 1.6,-6.3 10.1,-28 11.3,-29.1 0.7,-0.7 23.7,-0.9 65.9,-0.7l64.8,0.3 1.9,4.5c1.1,2.5 4.2,11 7.1,19 4.2,11.7 5.6,14.6 7.3,15 1.7,0.4 67.1,1.3 100.9,1.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM490.8,108.8c0.8,-0.8 1.2,-5.9 1.2,-16.4 0,-13.8 -0.2,-15.4 -2.1,-17.8C487.9,72 487.6,72 475.6,72c-10.5,0 -12.5,0.3 -13.9,1.8 -1.3,1.4 -1.6,4.7 -1.8,17.9 -0.1,8.9 0.1,16.6 0.5,17.2 1,1.6 28.8,1.5 30.4,-0.1zM547.8,108.8c0.8,-0.8 1.2,-6 1.2,-16.7C549,71.5 549.4,72 532.5,72c-16.7,0 -16.1,-0.8 -15.6,20.4 0.2,8.9 0.6,16.5 0.8,16.9 0.8,1.3 28.8,0.9 30.1,-0.4zM422.3,50.3C421,50.1 420,49.4 420,48.9 420,48.4 425.1,48 431.5,48c10.5,0 14,0.8 9.9,2.4 -1.7,0.7 -15.6,0.6 -19.2,-0.1zM283.3,2.3C278.4,0.4 287,0 334.5,0 364.6,0 387,0.4 387,0.9c0,0.5 -0.7,1.2 -1.6,1.5C383.5,3.1 285.1,3.1 283.3,2.3z"
+        android:fillColor="#699521"/>
+    <path
+        android:pathData="m193,295 l0,-16 34.8,0.2 34.8,0.2 0,15.5 0,15.5 -34.8,0.2L193,311 193,295zM218.4,296.3c0.4,-1 -0,-2.3 -1,-3.3 -1.5,-1.4 -1.7,-1.4 -3,0.3 -0.8,1 -1.1,2.5 -0.8,3.3 0.7,1.9 4,1.8 4.8,-0.3zM241.7,296.4c0.7,-1.9 -2,-4.9 -3.6,-4 -0.6,0.4 -1.1,1.8 -1.1,3.1 0,1.8 0.5,2.4 2,2.4 1.1,0 2.3,-0.7 2.6,-1.6zM545,260l0,-22 11.5,0 11.5,0 0,22 0,22 -11.5,0 -11.5,0 0,-22zM83.4,260.6c-0.3,-0.8 2.5,-5.4 6.5,-10.9 5.8,-7.8 7.7,-9.6 10.3,-10 5.9,-1.1 41.9,1.1 42.9,2.5 1,1.5 1.2,15.9 0.3,18.2C142.9,261.8 139.3,262 113.4,262 88.8,262 83.8,261.8 83.4,260.6zM305.8,220.8c-0.3,-6.8 -0.3,-16.7 -0,-22l0.5,-9.8 10.9,0 10.9,0 -0.1,17.3c-0,9.5 -0.4,19.3 -0.8,21.8l-0.7,4.5 -10.1,0.3 -10.1,0.3 -0.5,-12.3zM325.5,211.4c0,-3.7 -0.4,-4.9 -1.5,-4.9 -1.6,0 -2.7,6.3 -1.6,9.2 1.2,3.2 3.1,0.6 3.1,-4.3zM632.4,217.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.3L632.5,198.5l6.8,-0.3 6.8,-0.3 -0.3,7.7 -0.3,7.7 -5,2.8c-5.7,3.2 -7.3,3.5 -8.1,1.6zM144,211c-1.4,-0.6 -2.6,-1.2 -2.8,-1.4 -0.2,-0.2 2.1,-5.3 5.1,-11.2 3,-6 6.7,-13.5 8.1,-16.8 1.4,-3.3 3.1,-6.3 3.7,-6.6 1.4,-0.9 115.1,-1 122.2,-0.2l5.8,0.7 7.4,15.8C297.7,199.9 301,207.7 301,208.4c0,0.9 -1.6,1.6 -4.8,1.9 -9.6,1.1 -149.7,1.7 -152.2,0.6zM145.3,153.5c-0.2,-0.6 2.8,-7.7 6.6,-15.8l7,-14.8 53.7,0.5c29.5,0.3 54,0.9 54.4,1.3 1.3,1.4 13,27.6 12.7,28.5 -0.4,1.3 -133.9,1.6 -134.4,0.3zM579.7,136.3c-0.4,-0.4 -0.7,-4.3 -0.7,-8.8 -0,-4.4 -0.3,-9.1 -0.6,-10.4l-0.6,-2.4 -67.6,0.9c-79.5,1 -89.9,1 -91.2,-0.3 -0.6,-0.6 0.1,-3.6 2,-8.3 1.7,-4 3.5,-9.2 4.1,-11.4 1.6,-6.3 10.1,-28 11.3,-29.1 0.7,-0.7 23.7,-0.9 65.9,-0.7l64.8,0.3 1.9,4.5c1.1,2.5 4.2,11 7.1,19 4.2,11.7 5.6,14.6 7.3,15 1.7,0.4 67.1,1.3 100.9,1.5l6.8,0 6.9,14.6c3.8,8 6.9,15 6.9,15.5 0,1.1 -124.3,1.3 -125.3,0.3zM490.8,108.8c0.8,-0.8 1.2,-5.9 1.2,-16.4 0,-13.8 -0.2,-15.4 -2.1,-17.8C487.9,72 487.6,72 475.6,72c-10.5,0 -12.5,0.3 -13.9,1.8 -1.3,1.4 -1.6,4.7 -1.8,17.9 -0.1,8.9 0.1,16.6 0.5,17.2 1,1.6 28.8,1.5 30.4,-0.1zM547.8,108.8c0.8,-0.8 1.2,-6 1.2,-16.7C549,71.5 549.4,72 532.5,72c-16.7,0 -16.1,-0.8 -15.6,20.4 0.2,8.9 0.6,16.5 0.8,16.9 0.8,1.3 28.8,0.9 30.1,-0.4zM422.3,50.3C421,50.1 420,49.4 420,48.9 420,48.4 425.1,48 431.5,48c10.5,0 14,0.8 9.9,2.4 -1.7,0.7 -15.6,0.6 -19.2,-0.1zM283.3,2.3C278.4,0.4 287,0 334.5,0 364.6,0 387,0.4 387,0.9c0,0.5 -0.7,1.2 -1.6,1.5C383.5,3.1 285.1,3.1 283.3,2.3z"
+        android:fillColor="#635f5c"/>
+    <path
+        android:pathData="m193,295 l0,-16 34.8,0.2 34.8,0.2 0,15.5 0,15.5 -34.8,0.2L193,311 193,295zM218.4,296.3c0.4,-1 -0,-2.3 -1,-3.3 -1.5,-1.4 -1.7,-1.4 -3,0.3 -0.8,1 -1.1,2.5 -0.8,3.3 0.7,1.9 4,1.8 4.8,-0.3zM241.7,296.4c0.7,-1.9 -2,-4.9 -3.6,-4 -0.6,0.4 -1.1,1.8 -1.1,3.1 0,1.8 0.5,2.4 2,2.4 1.1,0 2.3,-0.7 2.6,-1.6zM545,260l0,-22 11.5,0 11.5,0 0,22 0,22 -11.5,0 -11.5,0 0,-22zM83.4,260.6c-0.6,-1.5 8.5,-14.4 12.7,-18.2 3.5,-3.2 5.7,-3.4 26.8,-2.4 14.3,0.6 19.6,1.2 20.2,2.2 1,1.5 1.2,15.9 0.3,18.2C142.9,261.8 139.3,262 113.4,262 89,262 83.8,261.8 83.4,260.6zM305.8,220.8c-0.3,-6.8 -0.3,-16.7 -0,-22l0.5,-9.8 10.9,0 10.9,0 -0.1,17.3c-0,9.5 -0.4,19.3 -0.8,21.8l-0.7,4.5 -10.1,0.3 -10.1,0.3 -0.5,-12.3zM325.5,211.4c0,-3.7 -0.4,-4.9 -1.5,-4.9 -1.6,0 -2.7,6.3 -1.6,9.2 1.2,3.2 3.1,0.6 3.1,-4.3zM632.4,217.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.3L632.5,198.5l6.8,-0.3 6.8,-0.3 -0.3,7.7 -0.3,7.7 -5,2.8c-5.7,3.2 -7.3,3.5 -8.1,1.6zM144.4,211.1c-1.2,-0.5 -2.4,-1.3 -2.6,-1.8 -0.3,-0.5 3.4,-8.2 8.1,-17.3l8.6,-16.5 63.8,0 63.8,0 7.4,15.8C297.7,199.9 301,207.7 301,208.4c0,0.9 -1.6,1.6 -4.8,1.9 -8.7,1 -149.6,1.7 -151.9,0.7zM147,152c0,-0.5 2.8,-7.1 6.3,-14.6l6.3,-13.6 38.9,0.6C219.8,124.7 243.8,125 251.7,125l14.4,0 5.6,11.8c3.1,6.5 6,12.8 6.4,14l0.9,2.3 -66,0C170.1,153 147,152.7 147,152zM580.5,134.8c-0.2,-0.7 -0.6,-5.5 -0.7,-10.8l-0.3,-9.5 -34.5,0c-19,0 -54.8,0.2 -79.7,0.5 -24.8,0.3 -45.5,0.2 -45.9,-0.2 -0.4,-0.4 0.7,-4.2 2.4,-8.5 1.7,-4.3 3.1,-8.2 3.1,-8.7 -0,-0.5 2.7,-7.8 6.1,-16.3l6.1,-15.4 64.7,0.3 64.7,0.3 1.3,2.6c0.7,1.5 3.9,10 7.2,18.9 3.3,8.9 6.3,16.6 6.7,17 0.4,0.4 25,1.1 54.5,1.5 37.6,0.5 54,1.1 54.6,1.8C692.1,109.9 703,134 703,135.1 703,135.6 677.5,136 642,136c-47.9,0 -61.1,-0.3 -61.5,-1.3zM490.8,109.8c0.8,-0.8 1.2,-6 1.2,-16.9 0,-14.3 -0.2,-15.9 -2.1,-18.3C487.9,72 487.6,72 475.6,72c-16.6,0 -16,-0.8 -16.4,20.3 -0.3,14.5 -0.2,16.2 1.4,17.4 2.4,1.8 28.5,1.8 30.2,0.1zM548,109.5c0.9,-1.1 1.2,-5.8 1.1,-17.2C548.8,71.5 549.3,72 532.6,72 515.6,72 516,71.6 516,91.7c0,8.7 0.5,16.2 1,17.3 0.9,1.8 2.2,1.9 15.4,1.9 11.6,0 14.6,-0.3 15.6,-1.5zM427.7,49.3c2.3,-0.2 6.4,-0.2 9,-0 2.6,0.2 0.7,0.4 -4.2,0.4 -4.9,0 -7.1,-0.2 -4.8,-0.4zM283.3,2.3C278.4,0.4 287,0 334.5,0 364.6,0 387,0.4 387,0.9c0,0.5 -0.7,1.2 -1.6,1.5C383.5,3.1 285.1,3.1 283.3,2.3z"
+        android:fillColor="#634431"/>
+    <path
+        android:pathData="M194,295.5 L194,280l15,0 15,0 -0.3,15.3 -0.3,15.3 -14.8,0.3 -14.8,0.3 0,-15.5zM218.8,279.7c0.3,-3.1 0.1,-3.3 -2.5,-3 -1.8,0.2 -2.9,1 -3.2,2.1 -0.6,3 0.7,4.9 3.1,4.5 1.7,-0.2 2.3,-1.1 2.6,-3.6zM229.7,294.8C229.3,310 229,303 229,294.8L229,280l16.5,0 16.5,0 -0.3,15.3 -0.3,15.3 -15.6,0.3c-8.6,0.2 -15.9,-0 -16.3,-0.4zM241.8,281.8c1.6,-2.9 0.2,-5.5 -2.7,-5.2 -2.7,0.3 -3.8,2.6 -2.7,5.4 0.8,2 4.3,1.8 5.4,-0.2zM545,260l0,-22 11.5,0 11.5,0 0,22 0,22 -11.5,0 -11.5,0 0,-22zM108.6,261c-14.9,-0.3 -23,-0.9 -23.3,-1.6 -0.2,-0.6 2.6,-5 6.3,-9.9l6.7,-8.8 21.5,0.6c14.6,0.4 22,1 23,1.9 1.2,1 1.3,2.8 0.8,9.3 -0.4,4.4 -1.2,8.4 -1.9,8.8 -0.6,0.4 -3.2,0.6 -5.7,0.5 -2.5,-0.1 -14.8,-0.4 -27.4,-0.7zM305.8,220.8c-0.3,-6.8 -0.3,-16.7 -0,-22l0.5,-9.8 10.9,0 10.9,0 -0.1,17.3c-0,9.5 -0.4,19.3 -0.8,21.8l-0.7,4.5 -10.1,0.3 -10.1,0.3 -0.5,-12.3zM325.5,211.4c0,-3.7 -0.4,-4.9 -1.5,-4.9 -1.6,0 -2.7,6.3 -1.6,9.2 1.2,3.2 3.1,0.6 3.1,-4.3zM632.4,217.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.3L632.5,198.5l6.8,-0.3 6.8,-0.3 -0.3,7.7 -0.3,7.7 -5,2.8c-5.7,3.2 -7.3,3.5 -8.1,1.6zM144.6,210c-1.9,-2 -1.8,-2.2 6.2,-17.8l8.1,-15.8 63.3,0 63.3,0 5.7,11.5c3.1,6.3 6.4,13.4 7.2,15.8 1.4,4 1.4,4.3 -0.2,4.9 -0.9,0.3 -1.9,0.9 -2.2,1.3 -0.3,0.4 -34,1 -75,1.3 -73.7,0.6 -74.5,0.6 -76.4,-1.4zM147,152c0,-0.5 2.8,-7.1 6.3,-14.6l6.3,-13.6 38.9,0.6C219.8,124.7 243.8,125 251.7,125l14.4,0 5.6,11.8c3.1,6.5 6,12.8 6.4,14l0.9,2.3 -66,0C170.1,153 147,152.7 147,152zM580.4,134.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.2 0.3,-8.5 0.4,-8.9 2.8,-9.5 2.6,-0.6 3,-2.4 1.6,-6.8l-0.8,-2.4 52.9,0.7c37.6,0.5 53.2,1 54,1.9C691.9,109.6 703,133.7 703,135.1 703,135.6 677.5,136 642,136c-49.8,0 -61.1,-0.2 -61.5,-1.3zM283.3,2.3C278.4,0.4 287,0 334.5,0 364.6,0 387,0.4 387,0.9c0,0.5 -0.7,1.2 -1.6,1.5C383.5,3.1 285.1,3.1 283.3,2.3z"
+        android:fillColor="#a11718"/>
+    <path
+        android:pathData="M194,295.5 L194,280l15,0 15,0 -0.3,15.3 -0.3,15.3 -14.8,0.3 -14.8,0.3 0,-15.5zM218.8,279.7c0.3,-3.1 0.1,-3.3 -2.5,-3 -1.8,0.2 -2.9,1 -3.2,2.1 -0.6,3 0.7,4.9 3.1,4.5 1.7,-0.2 2.3,-1.1 2.6,-3.6zM229.7,294.8C229.3,310 229,303 229,294.8L229,280l16.5,0 16.5,0 -0.3,15.3 -0.3,15.3 -15.6,0.3c-8.6,0.2 -15.9,-0 -16.3,-0.4zM241.8,281.8c1.6,-2.9 0.2,-5.5 -2.7,-5.2 -2.7,0.3 -3.8,2.6 -2.7,5.4 0.8,2 4.3,1.8 5.4,-0.2zM108.6,261c-14.9,-0.3 -23,-0.9 -23.3,-1.6 -0.2,-0.6 2.6,-5 6.3,-9.9l6.7,-8.8 21.4,0.6c11.8,0.4 21.9,0.9 22.4,1.2 0.5,0.3 0.9,4.5 0.9,9.4 0,9.9 -0.2,10.2 -7.3,9.8 -2.3,-0.1 -14.5,-0.5 -27.1,-0.8zM144.5,209.7c-1.9,-1.4 -1.7,-1.9 6.2,-17.3l8.2,-15.9 63.3,0 63.3,0 5.7,11.5c3.1,6.3 6.4,13.4 7.2,15.8 1.5,4.2 1.5,4.3 -0.7,5.1 -1.2,0.5 -35.7,1.2 -76.7,1.5 -65,0.6 -74.7,0.5 -76.5,-0.8zM147,152c0,-0.5 2.8,-7.1 6.3,-14.6l6.3,-13.6 38.9,0.6C219.8,124.7 243.8,125 251.7,125l14.4,0 5.6,11.8c3.1,6.5 6,12.8 6.4,14l0.9,2.3 -66,0C170.1,153 147,152.7 147,152zM580.4,134.7c-0.3,-0.7 -0.4,-5.3 -0.2,-10.2 0.3,-8.5 0.4,-8.9 2.8,-9.5 2.6,-0.6 3,-2.4 1.6,-6.8l-0.8,-2.4 52.9,0.7c37.6,0.5 53.2,1 54,1.9C691.9,109.6 703,133.7 703,135.1 703,135.6 677.5,136 642,136c-49.8,0 -61.1,-0.2 -61.5,-1.3z"
+        android:fillColor="#2e3d44"/>
+    <path
+        android:pathData="M194,295.5 L194,280l15,0 15,0 -0.3,15.3 -0.3,15.3 -14.8,0.3 -14.8,0.3 0,-15.5zM218.8,279.7c0.3,-3.1 0.1,-3.3 -2.5,-3 -1.8,0.2 -2.9,1 -3.2,2.1 -0.6,3 0.7,4.9 3.1,4.5 1.7,-0.2 2.3,-1.1 2.6,-3.6zM229.7,294.8C229.3,310 229,303 229,294.8L229,280l16.5,0 16.5,0 -0.3,15.3 -0.3,15.3 -15.6,0.3c-8.6,0.2 -15.9,-0 -16.3,-0.4zM241.8,281.8c1.6,-2.9 0.2,-5.5 -2.7,-5.2 -2.7,0.3 -3.8,2.6 -2.7,5.4 0.8,2 4.3,1.8 5.4,-0.2zM108.6,261c-14.9,-0.3 -23,-0.9 -23.3,-1.6 -0.2,-0.6 2.6,-5 6.3,-9.9l6.7,-8.8 21.4,0.6c11.8,0.4 21.9,0.9 22.4,1.2 0.5,0.3 0.9,4.5 0.9,9.4 0,9.9 -0.2,10.2 -7.3,9.8 -2.3,-0.1 -14.5,-0.5 -27.1,-0.8zM144.5,209.7c-1.9,-1.4 -1.7,-1.9 6.2,-17.3l8.2,-15.9 63.3,0 63.3,0 5.7,11.5c3.1,6.3 6.4,13.4 7.2,15.8 1.5,4.2 1.5,4.3 -0.7,5.1 -1.2,0.5 -35.7,1.2 -76.7,1.5 -65,0.6 -74.7,0.5 -76.5,-0.8z"
+        android:fillColor="#59190c"/>
+</vector>
diff --git a/app/src/main/res/layout/activity_scrolling.xml b/app/src/main/res/layout/activity_scrolling.xml
new file mode 100644
index 0000000..319fe63
--- /dev/null
+++ b/app/src/main/res/layout/activity_scrolling.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.scwang.refreshlayout.ScrollingActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/app_bar"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/app_bar_height"
+        android:fitsSystemWindows="true"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.design.widget.CollapsingToolbarLayout
+            android:id="@+id/toolbar_layout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:fitsSystemWindows="true"
+            app:contentScrim="?attr/colorPrimary"
+            app:layout_scrollFlags="scroll|exitUntilCollapsed">
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                app:layout_collapseMode="pin"
+                app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+        </android.support.design.widget.CollapsingToolbarLayout>
+    </android.support.design.widget.AppBarLayout>
+
+    <com.scwang.smartrefreshlayout.SmartRefreshLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:srlPrimaryColor="@color/colorPrimary"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+        <com.scwang.smartrefreshheader.PhoenixHeader
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+        <!--<com.scwang.smartrefreshheader.TaurusHeader-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="wrap_content" />-->
+        <include layout="@layout/content_scrolling" />
+    </com.scwang.smartrefreshlayout.SmartRefreshLayout>
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/fab_margin"
+        app:layout_anchor="@id/app_bar"
+        app:layout_anchorGravity="bottom|end"
+        app:srcCompat="@android:drawable/ic_dialog_email" />
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/app/src/main/res/layout/content_scrolling.xml b/app/src/main/res/layout/content_scrolling.xml
new file mode 100644
index 0000000..04ec2d7
--- /dev/null
+++ b/app/src/main/res/layout/content_scrolling.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.scwang.refreshlayout.ScrollingActivity"
+    tools:showIn="@layout/activity_scrolling">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:padding="@dimen/text_margin"
+        android:text="@string/large_text" />
+
+</android.support.v4.widget.NestedScrollView>
diff --git a/app/src/main/res/menu/menu_scrolling.xml b/app/src/main/res/menu/menu_scrolling.xml
new file mode 100644
index 0000000..8af698a
--- /dev/null
+++ b/app/src/main/res/menu/menu_scrolling.xml
@@ -0,0 +1,10 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.scwang.refreshlayout.ScrollingActivity">
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:title="@string/action_settings"
+        app:showAsAction="never" />
+</menu>
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.png b/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..cde69bcccec65160d92116f20ffce4fce0b5245c
GIT binary patch
literal 3418
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

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..9a078e3e1a42d474c78470a73c7987cf7ac5d9a0
GIT binary patch
literal 4208
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
GLSTY@)Y2*d

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.png b/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..c133a0cbd379f5af6dbf1a899a0293ca5eccfad0
GIT binary patch
literal 2206
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

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..efc028a636dd690a51db5a525cf781a5a7daba68
GIT binary patch
literal 2555
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
Rt2+Py002ovPDHLkV1hi2&h!8P

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..bfa42f0e7b91d006d22352c9ff2f134e504e3c1d
GIT binary patch
literal 4842
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

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..3af2608a4492ef9ae63a77ec3305aedda89594cb
GIT binary patch
literal 6114
zc$@*^7aiz{P)<h;3K|Lk000e1NJLTq003YB003YJ1^@s6;+S_h000-MNkl<Zc-rk<
z33OCNx;6<x2`IuF0TBme5g8Wo;W9pSj^jB`M<Ja>QBg$Z&8YKy<2dSjG6I2&!<K}d
z$i9hS5(xVi0!cdQkc9vtWFa9CvOqQ<iEJWS>iu7JRdT!gcBlJx2NL9-^PTGD_Ptf#
z_t*dbRdw&}d+xcr-QAko7-Mb(cL9%PAop{-%ba$?L0~%p4=0Y}p*W8FU1n`tILPv}
zML2!uMd(K8O&CZREHF@fhVQ(Z5yVrJcYBD!Lfy<hZ%-IR@Fz?mtRut_G6^MwD#BI5
zb%CqmvtqGNjQGtIaSR-*y^82g^{}=~yhX$5eNV#Mgk^+u!W9B*XlQ6eeSN*%Q2tIF
z>zFt;&e2oN5Pm5Z@1b~qKj96+4}@|h;R-VA2(=2-37BtnR`#_JMV#vgaqj!A)$dLw
zzAqt=kf%brlHdkMtlkP5%mgwQBTv+&?;R(E^s|ch{RoQ*)slEY&`lQ-Zm%FW<@tmV
z)uL|w%v_~goAvXG*IfwH2{j7hrMtKlq}vjs(Nzf{YD8VTsI{f7SiPs>{X2v+3gRt%
zb1Q)~2q^^WJXX;T&sN_X<VaP#?oJ3-5HH;fYvqvciHQwu=&pzj?yWY^Dqg=X@^#s$
z+BQJEIh4Ht<BQkT+S=;;Jyklu%<3E3Ao<D|aZ_eYwY9ZVsfli_DlW*1z$&P+>m~Vh
zb#=9En0OP&wxC@%Z{GYqE-tQJs}Mm3TMTBXa{GnLsc$2`UQ2AK7a~NTIdi77l7ri6
z`43X1QUv+6ZQSM9m9|2JpMU;2wWOq^>uu=?@`M*IT!7^#gZw+m<=EqrAj0+Q*Hg$H
zJ$Oq+P^6h2REa1@$fx}f$avWbNp+}hvdvenT!~)3e7WZ>$&QpcFrEB6N8An?S5|d~
zB^5-n^6EnVzO|5VtXly~JQKl6t4`ZnH?qHmS_oEMUA;k(9l5u-^-~3>C<3lsKL5sz
z8*E#~Y!;d{mW8E%&1x=JwThmAI-oA!r+v=m8+=*h@o#ut?Trbv)l*PrWo2c7E!qoY
zv?ucapvd#>&UUU|y~?7Ft!1Hy#&Qu1ry?9_Xo~@Lh|Ar;$)A_t%k~~!$?NJ!b|m5f
zD<~+?wMb?p0}NHHJDsdpOP+u2+BKGS@&sFv@K-LtvgALql8XG>>WXmgqKZ7WIB_f&
zU}@aPypE`=gT1H@oRBLjNl8iR<<g)mCfDHK+~_=ES~DI>+gNF7DT_{uWTA=gaS^s<
z%wkurUa`v+VILVNZ9(p5&+%~X&FO)h{Q2?zEb7oEUPshb%hUyrC1qui#Fe{(H`iD{
zRqAcU+)jfQUrQMS%gf7S-|N5O0)!^L%Z?YuT5Yf-9N%BNewEc+xx~t=irJa+43>S)
zz%q&ta%7!LpwEu;@37DH>(}^iY-Kh0{%FB|wjj};3$QLWfY%M~M`LW_lSb%0be!=n
z=>;;NR8>`VrY@E*Tu+@dUH;<5i!9}cfh{roiHor2@c*#Ns?tVRBuR&FuDMdhPL?LI
znB3KD)A6ZndFr3ox5@9Z#Yu0oMTf?4EIjlk$D*XSSZFf2wv-7hB0Ye9vyz=WpTq+!
zj-?a>uPZK{XDd?v%;qQhv4#3^RHsB<H)mX;bVZjgT{^RC*REeV9hAk7-N;(L5w6GS
zdHkP#`iT`67qcA+Yeg>@%l79i<(6Z#^lR)?X&T#`y^t+W`7gHk(A$K!h-@XsSO{Q_
z1&MDE-egNtK45#Y=JR7-yLJ`R2>e{TGZ%95=NtUkj`-EQPN<u+?IQu|Ao%Iir-Q+r
zW&z|6Yierx(m|_)_1C*1?fdb^A6a%z7F!+ne_Vhi$?vlhg$8z_IF5y<PiEheYl4-7
zcnNI+Nci)8!;bxfpCjX}o*xGStcd+P%g)YXmoHy-Nm>k!V64;&s^jD12Z2L5d8ftq
zyOG5#aFz8-zzQoWDwsZbKMOUyPa?cS*8WGfB+2Mr8lh1DQ}T@ha9>YYm^g+69%r=v
z__uf+P#4t6m8)x_7c3LKpq-|`OA);fS^h;=S--LuAlT)cq+Ve7k_#Z=dI9`R1ZaXE
zTN(c;%gN1hCh%JA1>lTg$|Z^gPk_rKM~-+p?EA?l1}H|n%#}T$>{1bnI5thh0oRf5
zhyW<Vj!b4{7mHlo12}CMoMmTc&vYmj$hi#iTb<}Y+0JG@YUy8LMGpHe?QbTQe|rQl
zVs+|Ys7~2h^M9)u5lR|Y<OT)?cC~w+Ncw&XO1{qI{np4oU6#&PAO6^G@^6Iz7zZq;
zkvZz-DiM&8f<FZJ)YQ~>?TQ78(VIKDpAD{DT0|E=TTVVd^}lVCZ>RO!CxE{d0Zhr4
zKq633p6N<=REuMsI(2F@aq7|R=va0U@>@OV$LCxXeEATae15ZT$0qqLXZ;fM3_ffX
zxudd6u9+^EDQS6mdFj%nOZ$M^O`A4(G&kevMmg-8u5v%dIhV^U@_3+a;vH~3EhzvH
zerz(Yv$L6z(hVghCVl{J$++7$m;JcYNby@&SU(zo(Pezz59)-Qkso^K9k!GPWv;P)
zO92*B#)Z$D69CZXZRB-#L3&z`xI)CQ5tDQtHr>yN5hFawZ>70H0O|KJ(zQiAM!xa+
z8(8I~Qbr?h^1~-+L_EnM@@-i^M!+~Gj*WA~o%)U+ODTYod;sSyD04m@NDd1N3)6e{
z?CE9I4aw{$H#c`6{h(U;W3ASI`O1%cg{e7L6PLG+Ro7H=f+Wf>7PB>JpV;kstO>CC
z@L%XyB__wlxngoxS+#zNh+_fdihgve7sxnJSy@@LapT6};8=A~CIz6p)lcF7>z%Rw
ztYQOqE9QhNf$vKy^GyhnIGDTAY3o0jyF&HY#g%z%fx*wF0GO!DEJ|>;7jOYE{}mGx
z^S;$|RQms_s;aLQ%Z&}rSbxN^DK^QM?x&2bU5zBTCCAA(6(Ii92GwJi(&%?#;+s~<
zm)Lk@BDKY-fZQNQ#c642(^cbuB0p_M5qq_>qhDA|-npa3Sxqa%D+6psajXSF)zwvO
z)A4|2$+u<wK*aGW<Z`Mkj-Ot1z^3&Ba}7HB-k;@`q&d|KFhz|(eB#83jl{91#dtt5
zL~c(RP_(lGK<z!5i&Ziib*v>{kLd}ek4`)t&f|q+<XdJw3uqt1=`fQRgT!D}>W6j-
z0PM_|$J^x0>?nE=#aBIX>}4@6A>O!+88fESjT<+PE9Ww_xSxwv6>LSyhjt49D_@d4
zj_t^t&7w~(WgCuu$v=0Nd<lHF{^;LXRL-|-+ld)`k*7KGl>#hD8qeFL)eT85DHF<i
z{`u!IFXU#D3CY>dl`B_vr><7ui~v0N7AEpW8vVEJ0hJn>BfdHEZ4SI_<o;^p1M?Dm
zSZ1L?vm4^(j~gaRN{T-F?6Y56%#KO{wr$(ikM=EhCI!Xd<v`XdyNJFu<oi2JzPSK%
z6TI2}%oUoKEM+QMR#sLyW5$dj)&y`raNxio+S#cw0IqxpPYZB4>DI}ALlgP-T0h7K
zHXi<(x6K&=Dk>^!LPJCU-69i`0_@wjZy5dHvQ`1m(<qH)OOqxTuT*dW;f|2+3fE&z
zfKbD`Sm)Ig2NZ*`D<r^k)&%g_wQJXt&Io`R#FElNKDg3K@~t4>ZtGVFFh9YMw@u3|
zsZxMNix&M>Oifz~5E&Uc*clguAeCE~ZdV55O5$DRdaPN$5kBlBwM|PPR=S{|prEI%
z3b10uipNP|%|RH0jr7xTMBJDbB3=XePP!h6ISD#;^i-^-6*DP7X=!QY#EBE1v?{<?
zUwze!#sO!wrlGhLBPBPA&C|cZ=Ed8KH!VJ!s|Wmf$&bZf8-dsJ;*I6pcysuf!Iys1
zggJU2s|eBS6!2ytaZLyoNXgx&>56WdhMqlpwur`B{lT@#wL)Sb=014v;I1?hKJJVF
ziCMeZ)CgZT@jD+Q*6Y|m2w$)FG2(j#Hu$hfz(yZ7`3D`FM40>oy$<tXQ^IvdMEI}(
z@j4*Fh^d>X+~mWiZq^wQN!a4U%W09`Y}ytox6)@@>Gjsp1aB6&4H(@B<L63@YQ)s7
zubW`nwoxo_=O|{#+^O}Fdd_8jetuS;K7D$CYx98^Uk4^UKtuHdTBjnACnx3XX2CK3
z?4R5GI7t#yH~AW|nGgy1a7-iOrfu~hQmEX9(wF^nJK)2<0e1MXe-XafN#!nq-GDEf
zP9?{lCd}BQV>9+rxsS>y9h<q&o6SVI-@6G>rkD{m+6<!_F`Z*Hn;AWtC1&r`Iu_ua
z;KYd&n2Nwi*gY^X&}1sYjXpq^=tO~Hty2P=+|6CY+&F(C!;ggUB_aVoBC`qq0(Sbb
z>AQ@Wv75@>#&X6UUn0?$%>?%Ou~~$fQB>|XVzxj~G?mf5Z1w?P7Icu_AM|CxK#VU7
ziKQ}@Tni!CCUh*w1m0G0D93RDK)jrcOG!xyCywt2*A|QOVv)d$y2(_<V`Lh%2r%F9
z2BmFAUp*_TiDV8nqW4iLU?kd?gOkfiCLADw0U|mWi1Fh@2ge!_66?oFpF^b1iG#nF
zK3~V?#8ZG(!JK%VDaiLrgqUD73yB}i4xQ8_0H&iGaP=LHvv9$#m+FFy`0zf1!7x_w
z@T7W21xO|VOfnRMKMUG#O1Q*KPPmcmnVfWC;nJ!l>5}*ufmkC#VvUv_!U^}|q|YVN
zdC;W*Y$RUCQ^@AC9-Ud%V-9Ts$OW0|>T0%j?b;8)G5P=Y)>g#YFI>2A1f`;vw4|bH
z0&tKBuwo1HRRowV+)7ZiQGj3z@_kjv_q8NH!2$9O&6BTH0GWcGJ9n=7^Uptj5gc1v
zl7vsf7Y|*&d^ydf0*IcV6rqv)C|UY(%-*jqKoGf`phlOY6u`$!0O4M22w;o+xmL(`
zMgWwVnVA{H?IYmWBmgTn8YbUMMVF$YqUBnyifD`hs)HjT0ukD1{rgM>Fel&WddM9e
z^i>hS7+{qG%!$)+zi&$b$H;eH0Nlok-^9ekU^T3Z;8=azyLT_X>~!$p!4DL1puuGV
z$e3`@Pn~?}|D%0G3{WHAw~2hE04SRgz!~yG5=J>JfV?mZlX%OQFaImJr8sb(RRP4{
zpu>Cbz4x2z*RK~l>W1tRK!|`$W@c2A8{(M{h*ywrDu7HIeND)hutvTVz!~zL5P<vt
zQ>RXyfA!T@F%8{8r2E#l*Is)Ky`WoRVPTl^nF#g^u*-5TMhym|dzooYzJ>MsD9ASz
z06Bbf0=SBNM+Ff1e=YWpjg8$-oOT!7+TKVZq(~2L-@bjkV(z=a<pK!6x<S6F^;3D!
z2vY%k8;O@_wg<R~d<_C{_jBRG1-4+pf=|GyP5*D^hP)nq^wECgyRsdb7t$gCdO~mv
z$k!41J{(d2OY66vd_J&BaFl#+tK=I6*x`r^;+$n<WaK^k@WZ%S&#PJYBe#z}`Usa!
zbUS?b@GQ{_?7B#+Q2?{~cY6SG)yNNu(FvH6Z%cqV@!l>cKP3Kjy9E%|Uyn;*HgDd%
z2wVzI?c0PKdSLwc@z2tjpxoY+)ENN)xEG`A(KW&$^2zE$5_FaVxPW{I1(3nFQm51X
z4qSfv>8JNPa-$@_Mu^IuM~@y|CYIq^OaNt`4sy-OHy1!H`>`ND!IF4Q<U1&U2)^~W
zCxGJUci>QP>DY54gkoLBjT`qL)Riji=><{%TdPj?fX`6c>3Tx+O_OP+0(d(WaLvhg
zKmcz2d3kvk$ohW|4kt{QaG#c&<=sY(9EnG}_ew}em@5_{ZixT@+>tHv8&|CKX5_~^
zZuRz%Z;t@d`Z4hq78bSy+zAe~JvD{84q`!9%7})Pl$7K)H!g6c09=GPQ}To3nxIO)
zezb)Et|C9!z8=6AUdV0d_wL;r1Fx=j<^HyM0d*rN_{geNt3JVnNw#j>MlVS|xyNM!
zND;6YqDsCLK!tpJh<Aj1E<nyMt4orKg?APd6!axHBk~{6Z2gL@U9Vofu#DD^($X!c
z09JUc36Pzi&aa_yhII466Ua6pKhC&N!WT{y<Vyisg8X1QS9bm}RRQFx7YuY4ZQx39
z=8~soxp{kgBZuuVeE9HZ3JVJh#Mq!#?Yf|I=gzTp`pG;C(L%O0@T(ORS1Op0F9mRh
zd^6&e<Ok_rXKVFev-9WATU-|;xj=dB*s;Q)Lx(;Ou3mcSrB1G}e!027@WKoDLxW$>
znl)<z4X<m}vLd9b2tY^DQ`w3GUm2GO6Le0(yV1Hi`LRtsfG-usjW)iHSHox(j3QFa
z0Sh-pkihI1Z?-J@OWr25&HTzZ>3RwZ3Th`#ocJ*~5?s0b>4~1hh7IdRW&f>Pw+5p!
zYViPF6n-#0J)IrU?_rzvuVUf*mTSPWTY|8CORXXzY6Xjq+s)g8HkrF0#f{i(&6+g}
zz>VOjMV=?^Mt-eB$BrFwUCR@(v9aM8Y(N7Hz0L0p#w66)vuANv2+PUI!F{rA3aB&c
zjy9kz=JyQC=?2X8M@B|&0Vm)_+=|*_|Fq%WzkmM+#M0W(<mBXNto9=SnTr5liAv*p
z1gEwL)E#X=Tg=Hvn{nr3R8&+faWM>>2yR;ZA2vKF(C~QR>FGH<EiElcO$77DO}162
zO|+q{=>0J<F{#AC2yh`dxh4Os!SAMg>Zzw5qOy;dm)D4tl$2!Yj_%O^4p931dU4P1
z;SL=-JPQs47wuZo^{9y;gYsj9r}TRL0U4N4(bo8cbZ74RS3Hc5?b)*jZU>i{Kc)z}
zxBMTLaKiROh77?!4B=nsp4_{4?<PC|Pd-)sP7p!n`Qjcg%<m)M;*kS=Mcdoo4)RSz
zpy2b6=m|sDty?#T25UDFxWtILP4)(9^&+<635YkBEn9|Eb12#>+I(BdH*rUgJo3oD
zb?)35A`G51Y0{r*R9FCC*%o_)((2KM)YR0oUwrWe23dpAMzr;IxgDD#bm`Kib06C1
z^`OTefBc2ryLWGw!*@*6))}|fZuNDduDGw4ZP~JA=YRnNu&Ol(ZF`Wm)<(Wk1f*dd
z`}OPhD3t?{A5Wh?{fi?<j^yIG%;NvJ>P3)lXhp;~2zSE+E$T{EpBESy_`f2@A0XP)
zQM9pD|D_=YBKJM^*kj$hb?b(ICjCv<u3dk-e*OB;tgNhZWJ==S=^DiR`E7|2(#N9?
zs0;rW&zc%s!&$y&&6*{sGwO~upe<<Atr%pv)Ft6&guZ?I{#x{gp)bDp;;Z4|;cH2V
zGWn!(@oyZp!aX&#q!@zq2H|FEMas-mOVlYWENtD#kt1Idfp&nX`~9ue<=E?z?(5N`
z$3wk)_eOvoh%WuybI-j(R<@A3c{XB%7)eVp>P6-x%LaS@ltE?m-Jm>{bTRTd|41uQ
zht;cBFM8&gXZ|4E%|O%@brx3d(H6<K7&*g#Qg`l7!MU#xVkiycpPe#g%4gfRZ{L=Y
zkx>LfFb5-hhTK4$NNMZLHW^QvKA?TDuaazO=@1&@6gpQS&WUqV9i9^wKM-|89fhxN
z*Vc(wiw)??9pO_&wglHSm`HeX;J|^u4+seOf(AMpl9G~+;;Mr3@^ZewE&p3UtUNJm
zn^>dZSr?w~!ynRDSy`W-pI@1roO~3=#yM~<oD=6p9Z(nH=R1lzy5DmLZ&C;^<kN&+
zlv~SQF$BaAo_Xb!SG;LF@!6_XtLE<5u_GdmwzRagbn?}wb8~agpE+};qNu3oB7oN<
z*m-=1ee`;L+|Hdl!^ySGojiH+-*7A(Q;?3Ql?=o=ac+^*d;JoKw-zJ#Jqhr+2zt0C
z6$=}fUl(Kz!>lW29pNtM``<nN^wa<O^2;xK)8+%<H9n*7Uc^3P-{Hci4-v=ek7MH;
z!oPPC=k~bMT#XhX+=b5tAsxv&yWoaq<lb-(qKEVoE^DA56d0ty6XHAU(+|JFZ^bcs
z;F!Y2+$+xI{!1s`9zihI(gDO_l#MG5diL!3D-lC_D1p!L9rnS#g6t0B7<UPGQV=PM
oyKosEf>b5s=k5x!TRq|b4{^B1?GF9`<NyEw07*qoM6N<$g6Hq^2><{9

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..324e72cdd7480cb983fa1bcc7ce686e51ef87fe7
GIT binary patch
literal 7718
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

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..9bec2e623103ac9713b00cad8502a057c1efda61
GIT binary patch
literal 10056
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

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..aee44e138434630332d88b1680f33c4b24c70ab3
GIT binary patch
literal 10486
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
WUBU6>V)wri#5eM4ay2p*VgCbZ86-jg

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..34947cd6bbf9c729be83edc96ad08a1d42b82bc9
GIT binary patch
literal 14696
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
H750As=pbOV

literal 0
Hc$@<O00001

diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
new file mode 100644
index 0000000..3ab3e9c
--- /dev/null
+++ b/app/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
new file mode 100644
index 0000000..da62b5f
--- /dev/null
+++ b/app/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <dimen name="app_bar_height">180dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+    <dimen name="text_margin">16dp</dimen>
+</resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
new file mode 100644
index 0000000..f946031
--- /dev/null
+++ b/app/src/main/res/values/strings.xml
@@ -0,0 +1,93 @@
+<resources>
+    <string name="app_name">RefreshLayout</string>
+    <string name="large_text">
+        "Material is the metaphor.\n\n"
+
+        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
+        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
+        "technologically advanced and open to imagination and magic.\n"
+        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
+        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
+        "flexibility of the material creates new affordances that supercede those in the physical "
+        "world, without breaking the rules of physics.\n"
+        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
+        "interact, and exist in space and in relation to each other. Realistic lighting shows "
+        "seams, divides space, and indicates moving parts.\n\n"
+
+        "Bold, graphic, intentional.\n\n"
+
+        "The foundational elements of print based design typography, grids, space, scale, color, "
+        "and use of imagery guide visual treatments. These elements do far more than please the "
+        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
+        "imagery, large scale typography, and intentional white space create a bold and graphic "
+        "interface that immerse the user in the experience.\n"
+        "An emphasis on user actions makes core functionality immediately apparent and provides "
+        "waypoints for the user.\n\n"
+
+        "Motion provides meaning.\n\n"
+
+        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
+        "inflection points that initiate motion, transforming the whole design.\n"
+        "All action takes place in a single environment. Objects are presented to the user without "
+        "breaking the continuity of experience even as they transform and reorganize.\n"
+        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
+        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"
+
+        "3D world.\n\n"
+
+        "The material environment is a 3D space, which means all objects have x, y, and z "
+        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
+        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
+        "position along the z-axis and has a standard 1dp thickness.\n"
+        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
+        "emulated by manipulating the y-axis.\n\n"
+
+        "Light and shadow.\n\n"
+
+        "Within the material environment, virtual lights illuminate the scene. Key lights create "
+        "directional shadows, while ambient light creates soft shadows from all angles.\n"
+        "Shadows in the material environment are cast by these two light sources. In Android "
+        "development, shadows occur when light sources are blocked by sheets of material at "
+        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
+        "y-axis only. The following example shows the card with a height of 6dp.\n\n"
+
+        "Resting elevation.\n\n"
+
+        "All material objects, regardless of size, have a resting elevation, or default elevation "
+        "that does not change. If an object changes elevation, it should return to its resting "
+        "elevation as soon as possible.\n\n"
+
+        "Component elevations.\n\n"
+
+        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
+        "does not vary from 6dp in one app to 16dp in another app).\n"
+        "Components may have different resting elevations across platforms, depending on the depth "
+        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"
+
+        "Responsive elevation and dynamic elevation offsets.\n\n"
+
+        "Some component types have responsive elevation, meaning they change elevation in response "
+        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
+        "changes are consistently implemented using dynamic elevation offsets.\n"
+        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
+        "to the component’s resting state. They ensure that elevation changes are consistent "
+        "across actions and component types. For example, all components that lift on press have "
+        "the same elevation change relative to their resting elevation.\n"
+        "Once the input event is completed or cancelled, the component will return to its resting "
+        "elevation.\n\n"
+
+        "Avoiding elevation interference.\n\n"
+
+        "Components with responsive elevations may encounter other components as they move between "
+        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
+        "through other material, components avoid interfering with one another any number of ways, "
+        "whether on a per component basis or using the entire app layout.\n"
+        "On a component level, components can move or be removed before they cause interference. "
+        "For example, a floating action button (FAB) can disappear or move off screen before a "
+        "user picks up a card, or it can move if a snackbar appears.\n"
+        "On the layout level, design your app layout to minimize opportunities for interference. "
+        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
+        "when a user tries to pick up one of cards.\n\n"
+    </string>
+    <string name="action_settings">Settings</string>
+</resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
new file mode 100644
index 0000000..545b9c6
--- /dev/null
+++ b/app/src/main/res/values/styles.xml
@@ -0,0 +1,20 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+</resources>
diff --git a/app/src/test/java/com/scwang/refreshlayout/ExampleUnitTest.java b/app/src/test/java/com/scwang/refreshlayout/ExampleUnitTest.java
new file mode 100644
index 0000000..082813c
--- /dev/null
+++ b/app/src/test/java/com/scwang/refreshlayout/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package com.scwang.refreshlayout;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
new file mode 100644
index 0000000..1f4e746
--- /dev/null
+++ b/build.gradle
@@ -0,0 +1,25 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:2.3.2'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+        classpath 'me.tatarka:gradle-retrolambda:3.6.0'
+        classpath 'com.novoda:bintray-release:0.5.0'
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
diff --git a/gradlew b/gradlew
new file mode 100644
index 0000000..9d82f78
--- /dev/null
+++ b/gradlew
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
index 0000000..8a0b282
--- /dev/null
+++ b/gradlew.bat
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/refresh-footer/.gitignore b/refresh-footer/.gitignore
new file mode 100644
index 0000000..796b96d
--- /dev/null
+++ b/refresh-footer/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/refresh-footer/build.gradle b/refresh-footer/build.gradle
new file mode 100644
index 0000000..77a9d35
--- /dev/null
+++ b/refresh-footer/build.gradle
@@ -0,0 +1,48 @@
+apply plugin: 'com.android.library'
+apply plugin: 'me.tatarka.retrolambda'
+apply plugin: 'maven'
+apply plugin: 'com.novoda.bintray-release'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "25.0.3"
+
+    defaultConfig {
+        minSdkVersion 12
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    testCompile 'junit:junit:4.12'
+    compile project(':refresh-layout')
+}
+
+publish {
+    userOrg = 'scwang90'
+    groupId = 'com.scwang.refreshlayout'
+    artifactId = 'SmartRefreshFooter'
+    version = '0.0.1'
+    description = 'Some delicate footers of SmartRefreshLayout'
+    website = "https://github.com/scwang90/${rootProject.name}"
+}
\ No newline at end of file
diff --git a/refresh-footer/proguard-rules.pro b/refresh-footer/proguard-rules.pro
new file mode 100644
index 0000000..8fe066b
--- /dev/null
+++ b/refresh-footer/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in E:\Android\android-sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/refresh-footer/src/androidTest/java/com/scwang/smartrefreshfooter/ExampleInstrumentedTest.java b/refresh-footer/src/androidTest/java/com/scwang/smartrefreshfooter/ExampleInstrumentedTest.java
new file mode 100644
index 0000000..ad487ee
--- /dev/null
+++ b/refresh-footer/src/androidTest/java/com/scwang/smartrefreshfooter/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package com.scwang.smartrefreshfooter;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.scwang.smartrefreshfooter.test", appContext.getPackageName());
+    }
+}
diff --git a/refresh-footer/src/main/AndroidManifest.xml b/refresh-footer/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..7d3d97d
--- /dev/null
+++ b/refresh-footer/src/main/AndroidManifest.xml
@@ -0,0 +1,10 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+
+    package="com.scwang.smartrefreshfooter">
+
+    <application android:allowBackup="true" android:label="@string/app_name"
+        android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/refresh-footer/src/main/res/values/attrs.xml b/refresh-footer/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..07be744
--- /dev/null
+++ b/refresh-footer/src/main/res/values/attrs.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--<attr name="srlPrimaryColor" format="color"/>-->
+    <!--<attr name="srlAccentColor" format="color"/>-->
+</resources>
\ No newline at end of file
diff --git a/refresh-footer/src/main/res/values/strings.xml b/refresh-footer/src/main/res/values/strings.xml
new file mode 100644
index 0000000..2740fff
--- /dev/null
+++ b/refresh-footer/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">SmartRefreshFooter</string>
+</resources>
diff --git a/refresh-footer/src/test/java/com/scwang/smartrefreshfooter/ExampleUnitTest.java b/refresh-footer/src/test/java/com/scwang/smartrefreshfooter/ExampleUnitTest.java
new file mode 100644
index 0000000..98bbe58
--- /dev/null
+++ b/refresh-footer/src/test/java/com/scwang/smartrefreshfooter/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package com.scwang.smartrefreshfooter;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/refresh-header/.gitignore b/refresh-header/.gitignore
new file mode 100644
index 0000000..796b96d
--- /dev/null
+++ b/refresh-header/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/refresh-header/build.gradle b/refresh-header/build.gradle
new file mode 100644
index 0000000..3f08d1a
--- /dev/null
+++ b/refresh-header/build.gradle
@@ -0,0 +1,48 @@
+apply plugin: 'com.android.library'
+apply plugin: 'me.tatarka.retrolambda'
+apply plugin: 'maven'
+apply plugin: 'com.novoda.bintray-release'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "25.0.3"
+
+    defaultConfig {
+        minSdkVersion 12
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    testCompile 'junit:junit:4.12'
+    compile project(':refresh-layout')
+}
+
+publish {
+    userOrg = 'scwang90'
+    groupId = 'com.scwang.refreshlayout'
+    artifactId = 'SmartRefreshHeader'
+    version = '0.0.1'
+    description = 'Some delicate headers of SmartRefreshLayout'
+    website = "https://github.com/scwang90/${rootProject.name}"
+}
\ No newline at end of file
diff --git a/refresh-header/proguard-rules.pro b/refresh-header/proguard-rules.pro
new file mode 100644
index 0000000..8fe066b
--- /dev/null
+++ b/refresh-header/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in E:\Android\android-sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/refresh-header/src/androidTest/java/com/scwang/smartrefreshheader/ExampleInstrumentedTest.java b/refresh-header/src/androidTest/java/com/scwang/smartrefreshheader/ExampleInstrumentedTest.java
new file mode 100644
index 0000000..2b5d5a0
--- /dev/null
+++ b/refresh-header/src/androidTest/java/com/scwang/smartrefreshheader/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package com.scwang.smartrefreshheader;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.scwang.smartrefreshheader.test", appContext.getPackageName());
+    }
+}
diff --git a/refresh-header/src/main/AndroidManifest.xml b/refresh-header/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..58ba91e
--- /dev/null
+++ b/refresh-header/src/main/AndroidManifest.xml
@@ -0,0 +1,10 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+
+    package="com.scwang.smartrefreshheader">
+
+    <application android:allowBackup="true" android:label="@string/app_name"
+        android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/refresh-header/src/main/java/com/scwang/smartrefreshheader/PhoenixHeader.java b/refresh-header/src/main/java/com/scwang/smartrefreshheader/PhoenixHeader.java
new file mode 100644
index 0000000..b3f6124
--- /dev/null
+++ b/refresh-header/src/main/java/com/scwang/smartrefreshheader/PhoenixHeader.java
@@ -0,0 +1,338 @@
+package com.scwang.smartrefreshheader;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Rect;
+import android.support.annotation.NonNull;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.Interpolator;
+import android.view.animation.LinearInterpolator;
+import android.view.animation.Transformation;
+
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.api.SizeDefinition;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.internal.pathview.PathsDrawable;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+/**
+ *
+ * Created by SCWANG on 2017/5/31.
+ */
+
+public class PhoenixHeader extends View implements RefreshHeader, SizeDefinition {
+
+    private static final int ANIMATION_DURATION = 1000;
+    private static final float SUN_INITIAL_ROTATE_GROWTH = 1.2f;
+    private static final Interpolator LINEAR_INTERPOLATOR = new LinearInterpolator();
+
+    private static String[] townPaths = new String[]{
+            "m 527,396 v -8 h 39.5 39.5 v 8 8 H 566.5 527 Z m 84,-6 v -14 h 7.5 7.5 v 14 14 h -7.5 -7.5 z m 20,6 v -8 h 65.5 65.5 v 8 8 H 696.5 631 Z m 143,-54 v -62 h 52 52 v 62 62 h -52 -52 z m 44,34 c 0,-3.33333 -0.33333,-4 -2,-4 -1.91667,0 -2,-0.66667 -2,-16 v -16 h -10 -10 v 16 c 0,15.33333 -0.0833,16 -2,16 -1.66667,0 -2,0.66667 -2,4 v 4 h 14 14 z m -20,-12 v -8 h 6 6 v 8 8 h -6 -6 z m 0,-16 v -4 h 6 6 v 4 4 h -6 -6 z m 64,28 c 0,-3.33333 -0.33333,-4 -2,-4 -1.91667,0 -2,-0.66667 -2,-16 v -16 h -10 -10 v 16 c 0,15.33333 -0.0833,16 -2,16 -1.66667,0 -2,0.66667 -2,4 v 4 h 14 14 z m -20,-12 v -8 h 6 6 v 8 8 h -6 -6 z m 0,-16 v -4 h 6 6 v 4 4 h -6 -6 z m -24,-24 c 0,-3.33333 -0.33333,-4 -2,-4 -1.91667,0 -2,-0.66667 -2,-16 v -16 h -10 -10 v 16 c 0,15.33333 -0.0833,16 -2,16 -1.66667,0 -2,0.66667 -2,4 v 4 h 14 14 z m -20,-12 v -8 h 6 6 v 8 8 h -6 -6 z m 0,-16 v -4 h 6 6 v 4 4 h -6 -6 z m 64,28 c 0,-3.33333 -0.33333,-4 -2,-4 -1.91667,0 -2,-0.66667 -2,-16 v -16 h -10 -10 v 16 c 0,15.33333 -0.0833,16 -2,16 -1.66667,0 -2,0.66667 -2,4 v 4 h 14 14 z m -20,-12 v -8 h 6 6 v 8 8 h -6 -6 z m 0,-16 v -4 h 6 6 v 4 4 h -6 -6 z m 448,46 v -62 h 51.5 51.5 v 62 62 h -29.5 -29.5 v -26 -26 h -14.5 -14.5 v 26 26 h -7.5 -7.5 z m 88,42 c 0,-3.33333 -0.3333,-4 -2,-4 -1.9048,0 -2,-0.66667 -2,-14 v -14 h -10.5 -10.5 v 14 c 0,13.33333 -0.095,14 -2,14 -1.6667,0 -2,0.66667 -2,4 v 4 h 14.5 14.5 z m -21,-10 v -6 h 6.5 6.5 v 6 6 h -6.5 -6.5 z m 0,-14 v -4 h 6.5 6.5 v 4 4 h -6.5 -6.5 z m -23,-24 c 0,-3.33333 -0.3333,-4 -2,-4 -1.9048,0 -2,-0.66667 -2,-14 v -14 h -10.5 -10.5 v 14 c 0,13.33333 -0.095,14 -2,14 -1.6667,0 -2,0.66667 -2,4 v 4 h 14.5 14.5 z m -21,-10 v -6 h 6.5 6.5 v 6 6 h -6.5 -6.5 z m 0,-14 v -4 h 6.5 6.5 v 4 4 h -6.5 -6.5 z m 65,24 c 0,-3.33333 -0.3333,-4 -2,-4 -1.9048,0 -2,-0.66667 -2,-14 v -14 h -10.5 -10.5 v 14 c 0,13.33333 -0.095,14 -2,14 -1.6667,0 -2,0.66667 -2,4 v 4 h 14.5 14.5 z m -21,-10 v -6 h 6.5 6.5 v 6 6 h -6.5 -6.5 z m 0,-14 v -4 h 6.5 6.5 v 4 4 h -6.5 -6.5 z M 29.8125,370.31689 c 0.721875,-0.28887 1.584375,-0.25335 1.916667,0.0789 0.332291,0.33229 -0.258334,0.56864 -1.3125,0.52522 -1.164943,-0.048 -1.4019,-0.28494 -0.604167,-0.60416 z m 1811,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z M 527,324 v -24 h 31.5 31.5 v 24 24 H 558.5 527 Z m 68,0 v -24 h 83.5 83.5 v 24 24 H 678.5 595 Z m 69,10 c 0,-1.95471 -0.66667,-2 -29.44098,-2 -28.44028,0 -31.71136,0.32647 -30.05902,3 0.38938,0.63003 11.51038,1 30.05902,1 C 663.33333,336 664,335.95471 664,334 Z m 24,0 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 64,0 c 0,-1.94872 -0.66667,-2 -26,-2 -25.33333,0 -26,0.0513 -26,2 0,1.94872 0.66667,2 26,2 25.33333,0 26,-0.0513 26,-2 z M 363.5,317 c 0.99549,-1.1 2.03498,-2 2.30998,-2 0.275,0 -0.31449,0.9 -1.30998,2 -0.99549,1.1 -2.03498,2 -2.30998,2 -0.275,0 0.31449,-0.9 1.30998,-2 z m 1143.905,-0.25 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z m -1095.00001,-1 -1.90499,-2.25 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z M 1458.5,316 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z M 161.92431,313.25 159.5,310.5 l 2.75,2.42431 c 2.57029,2.26589 3.20859,3.07569 2.42431,3.07569 -0.17912,0 -1.41662,-1.2375 -2.75,-2.75 z M 1709,313.5 c 1.2917,-1.375 2.5736,-2.5 2.8486,-2.5 0.275,0 -0.5569,1.125 -1.8486,2.5 -1.2917,1.375 -2.5736,2.5 -2.8486,2.5 -0.275,0 0.5569,-1.125 1.8486,-2.5 z m -1608,1.12244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 C 101.82119,314.91575 101,315.44548 101,314.62244 Z M 1769,313.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 527,282 v -6 h 7.5 7.5 v 6 6 h -7.5 -7.5 z m 20,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 16,0 v -6 h 5.5 5.5 v 6 6 h -5.5 -5.5 z m 15.2001,0.25 0.2999,-5.75 5.75,-0.2999 5.75,-0.29991 V 281.9501 288 h -6.0499 -6.04991 z m 16,0 0.2999,-5.75 5.75,-0.2999 5.75,-0.29991 V 281.9501 288 h -6.0499 -6.04991 z m 16,0 0.2999,-5.75 5.75,-0.2999 5.75,-0.29991 V 281.9501 288 h -6.0499 -6.04991 z m 16,0 0.2999,-5.75 5.75,-0.2999 5.75,-0.29991 V 281.9501 288 h -6.0499 -6.04991 z m 16,0 0.2999,-5.75 5.75,-0.2999 5.75,-0.29991 V 281.9501 288 h -6.0499 -6.04991 z m 16,0 0.2999,-5.75 3.75,-0.31037 3.75,-0.31036 V 281.93963 288 h -4.0499 -4.04991 z M 774,274 c 0,-1.91667 0.66667,-2 16,-2 15.33333,0 16,0.0833 16,2 0,1.91667 -0.66667,2 -16,2 -15.33333,0 -16,-0.0833 -16,-2 z m 36,0 c 0,-1.91667 0.66667,-2 16,-2 15.33333,0 16,0.0833 16,2 0,1.91667 -0.66667,2 -16,2 -15.33333,0 -16,-0.0833 -16,-2 z m 36,0 c 0,-1.91667 0.66667,-2 16,-2 15.33333,0 16,0.0833 16,2 0,1.91667 -0.66667,2 -16,2 -15.33333,0 -16,-0.0833 -16,-2 z m 444,0 c 0,-1.97411 0.6667,-2 51.5,-2 50.8333,0 51.5,0.0259 51.5,2 0,1.97411 -0.6667,2 -51.5,2 -50.8333,0 -51.5,-0.0259 -51.5,-2 z M 774,258 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 12,0 v -10 h 4 4 v 10 10 h -4 -4 z m 420,0 v -10 h 51.5 51.5 v 10 10 h -51.5 -51.5 z m 23.6418,-26.34524 c 2.672,-2.38988 10.2499,-9.1272 16.8397,-14.97183 l 11.9814,-10.6266 3.0186,2.80156 c 1.6602,1.54085 8.981,8.09794 16.2685,14.57131 7.2875,6.47336 13.25,11.94998 13.25,12.17027 0,0.22029 -14.8987,0.40053 -33.1082,0.40053 h -33.1081 z M 1394,228.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -103,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z m 93.405,-7.87244 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z M 1301,218.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1375,211.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -65,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1366,203.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 1141.4469,172 c 0,-17.875 0.1356,-25.1875 0.3013,-16.25 0.1657,8.9375 0.1657,23.5625 0,32.5 -0.1657,8.9375 -0.3013,1.625 -0.3013,-16.25 z M 1319,202.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1357,195.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -29,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1348,187.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -11,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z"  ,
+            "m 918,382 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z M 32.75,370.33772 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z m 1804,0 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z M 918,346 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -564,-2.37756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 C 434.82119,307.91575 434,308.44548 434,307.62244 Z M 485.40499,305.75 483.5,303.5 l 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z M 1436,306.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 387.75,306.33772 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z m 1094,0 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z M 918,300 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m -80,-26 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.33333,0 8,0.16667 8,2 0,1.83333 -0.66667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m 40,0 c 0,-1.83333 0.66667,-2 8,-2 7.3333,0 8,0.16667 8,2 0,1.83333 -0.6667,2 -8,2 -7.33333,0 -8,-0.16667 -8,-2 z m -80,-10 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z M 918,94 c 0,-1.833333 0.66667,-2 8,-2 7.33333,0 8,0.166667 8,2 0,1.833333 -0.66667,2 -8,2 -7.33333,0 -8,-0.166667 -8,-2 z m 40,0 c 0,-1.833333 0.66667,-2 8,-2 7.33333,0 8,0.166667 8,2 0,1.833333 -0.66667,2 -8,2 -7.33333,0 -8,-0.166667 -8,-2 z m 40,0 c 0,-1.833333 0.66667,-2 8,-2 7.3333,0 8,0.166667 8,2 0,1.833333 -0.6667,2 -8,2 -7.33333,0 -8,-0.166667 -8,-2 z M 918,84 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z m 40,0 v -4 h 8 8 v 4 4 h -8 -8 z"  ,
+            "M 4.5739313,406 C 6.1329087,390.62752 17.222484,379.98335 32.5,379.19556 c 6.349167,-0.3274 7.623849,-0.0454 13.709769,3.03352 l 6.709769,3.39448 1.998297,-6.56178 c 5.136604,-16.86699 17.015502,-29.38079 34.72114,-36.5769 5.16164,-2.09785 5.86426,-2.74348 6.936094,-6.37356 5.154111,-17.45591 23.527961,-28.88239 41.762181,-25.97142 8.34594,1.33237 14.35275,4.46572 20.73472,10.81589 l 5.57197,5.54421 3.32907,-2.25213 c 6.54497,-4.42769 14.65489,-5.09439 22.18665,-1.8239 1.18896,0.51628 1.85615,0.10158 2.35247,-1.46219 1.05757,-3.33211 7.39525,-9.87388 11.68701,-12.06337 7.23167,-3.68932 14.39827,-4.13543 23.30086,-1.45042 1.67658,0.50565 2.39169,-0.30815 4.42215,-5.03249 3.27759,-7.62603 10.43307,-14.74295 18.80259,-18.70124 6.07019,-2.87084 7.71185,-3.20318 15.77526,-3.19355 7.71529,0.009 9.8465,0.40492 14.93013,2.77216 7.35743,3.42605 13.31091,8.25668 16.54026,13.42071 l 2.47038,3.95037 9.02962,-0.0438 c 7.41544,-0.036 9.85838,0.36168 13.66573,2.22462 6.52502,3.1927 12.10496,8.24858 14.88295,13.48514 2.17316,4.09644 2.64122,4.43724 5.46495,3.97901 5.13645,-0.83353 11.65968,1.52475 15.56677,5.62771 l 3.55078,3.72879 3.79778,-4.36579 c 5.1783,-5.95279 12.42156,-9.47438 20.71688,-10.07229 9.02781,-0.65072 15.4615,1.59319 22.11856,7.71438 l 5.17953,4.76259 4.44007,-1.96406 c 3.00957,-1.33128 5.68986,-1.79642 8.31925,-1.44375 3.65414,0.49013 3.9889,0.30808 5.77025,-3.13807 2.68961,-5.20323 9.71564,-11.67993 15.55611,-14.33986 6.95882,-3.16927 17.97335,-3.16151 25.09189,0.0177 6.89689,3.08019 13.92869,10.43489 16.85081,17.62461 l 2.36103,5.80918 9.59878,-0.19361 c 5.27933,-0.10648 10.07704,0.10197 10.66157,0.46324 0.61329,0.37903 -0.5943,1.87548 -2.85512,3.53811 -3.07459,2.26107 -5.41383,3.0203 -10.86758,3.52717 l -6.94967,0.6459 -1.30921,-4.36976 c -4.02335,-13.42874 -18.85899,-23.02547 -33.26717,-21.51952 -10.13485,1.0593 -20.27562,7.78121 -24.67467,16.35585 -1.81846,3.54454 -2.06491,3.66981 -6.76394,3.438 -3.21294,-0.1585 -6.11836,0.40028 -8.51608,1.63783 l -3.63936,1.8784 -4.25534,-4.31809 C 404.74267,326.05322 397.13098,323 389.14063,323 c -8.81293,0 -14.67534,2.46351 -21.21261,8.91399 l -5.66117,5.58601 -2.32695,-2.89183 c -3.28645,-4.08428 -10.22613,-6.94873 -15.41711,-6.36363 -4.07398,0.4592 -4.23458,0.3627 -6.49832,-3.90448 -2.88192,-5.43248 -8.83317,-10.90017 -14.90207,-13.69122 -3.56971,-1.6417 -6.63508,-2.13634 -13.46018,-2.17197 l -8.83777,-0.0462 -3.41786,-4.70973 C 290.60953,294.35478 278.11638,288 266.5,288 c -7.13081,0 -16.96947,3.24874 -22.74437,7.51023 -5.62304,4.14943 -11.28119,11.49825 -12.92054,16.78125 -0.87243,2.81152 -1.58413,3.63506 -2.75357,3.18631 -13.86254,-5.31956 -28.24371,0.0421 -36.08698,13.45405 -0.69326,1.18547 -1.51606,1.22849 -4.78196,0.25 -7.07459,-2.1196 -14.51841,-0.90988 -19.65288,3.19386 l -2.65786,2.1243 -6.24982,-6.10291 c -8.11829,-7.92746 -14.86653,-10.68447 -26.15202,-10.68447 -5.8209,0 -9.5382,0.59299 -13.64709,2.17703 -9.85759,3.80025 -18.83585,13.36668 -22.22847,23.68467 -1.598023,4.86007 -1.896764,5.14628 -7.075558,6.77875 -15.31023,4.82612 -30.615041,21.10102 -35.129657,37.35632 l -1.724546,6.20939 -2.781269,-1.98044 c -6.42973,-4.57837 -16.855946,-6.19291 -25.138154,-3.89273 -7.540377,2.09415 -17.1209318,11.94164 -19.76831,20.3191 C 4.1852701,410.96485 4.1113608,410.56123 4.5739313,406 Z M 1867,409.46016 c 0,-2.36037 -3.6559,-8.99868 -7.1433,-12.97058 -9.1835,-10.45943 -25.0776,-12.59415 -36.9649,-4.96469 l -3.6082,2.3158 -1.7137,-6.17034 c -4.5035,-16.2155 -19.8253,-32.49643 -35.1188,-37.31728 -5.1788,-1.63247 -5.4775,-1.91868 -7.0755,-6.77875 -3.3927,-10.31799 -12.3709,-19.88442 -22.2285,-23.68467 -4.1089,-1.58404 -7.8262,-2.17703 -13.6471,-2.17703 -11.2855,0 -18.0337,2.75701 -26.152,10.68447 l -6.2498,6.10291 -2.6579,-2.1243 c -5.1345,-4.10374 -12.5783,-5.31346 -19.6529,-3.19386 -3.2659,0.97849 -4.0887,0.93547 -4.7819,-0.25 -6.5917,-11.27181 -18.7592,-17.43715 -29.7577,-15.0784 -2.6138,0.56055 -5.4619,1.2915 -6.3293,1.62435 -1.1695,0.44875 -1.8812,-0.37479 -2.7536,-3.18631 -2.9015,-9.35059 -13.1479,-18.8575 -24.0202,-22.28688 -15.7846,-4.97878 -33.0149,0.57538 -42.5513,13.71639 l -3.4178,4.70973 -8.8378,0.0462 c -6.8251,0.0356 -9.8905,0.53027 -13.4602,2.17197 -6.0689,2.79105 -12.0201,8.25874 -14.9021,13.69122 -2.2637,4.26718 -2.4243,4.36368 -6.4983,3.90448 -5.191,-0.5851 -12.1306,2.27935 -15.4171,6.36363 l -2.3269,2.89183 -5.6612,-5.58601 C 1497.5347,325.46351 1491.6723,323 1482.8594,323 c -7.9904,0 -15.6021,3.05322 -20.8253,8.3535 l -4.2554,4.31809 -3.6393,-1.8784 c -2.3978,-1.23755 -5.3032,-1.79633 -8.5161,-1.63783 -4.6991,0.23181 -4.9455,0.10654 -6.764,-3.438 -4.5554,-8.87949 -14.4301,-15.23729 -25.5782,-16.46847 L 1406.5,311.5 l -0.3189,-3.89244 -0.3188,-3.89244 6.38,0.51214 c 3.5091,0.28167 8.6026,1.49229 11.3189,2.69028 5.7461,2.53417 12.79,9.00802 15.4949,14.24085 1.7814,3.44615 2.1161,3.6282 5.7703,3.13807 2.6293,-0.35267 5.3096,0.11247 8.3192,1.44375 l 4.4401,1.96406 5.1795,-4.76259 c 6.6571,-6.12119 13.0908,-8.3651 22.1186,-7.71438 8.2953,0.59791 15.5385,4.1195 20.7168,10.07229 l 3.7978,4.36579 3.5508,-3.72879 c 3.9071,-4.10296 10.4303,-6.46124 15.5668,-5.62771 2.8237,0.45823 3.2918,0.11743 5.4649,-3.97901 2.778,-5.23656 8.358,-10.29244 14.883,-13.48514 3.8073,-1.86294 6.2503,-2.26063 13.6657,-2.22462 l 9.0296,0.0438 2.4704,-3.95037 c 3.2294,-5.16403 9.1828,-9.99466 16.5403,-13.42071 5.0836,-2.36724 7.2148,-2.76295 14.9301,-2.77216 8.0634,-0.01 9.7051,0.32271 15.7753,3.19355 8.3695,3.95829 15.525,11.07521 18.8025,18.70124 2.0305,4.72434 2.7456,5.53814 4.4222,5.03249 8.9026,-2.68501 16.0692,-2.2389 23.3009,1.45042 4.2917,2.18949 10.6294,8.73126 11.687,12.06337 0.4963,1.56377 1.1635,1.97847 2.3524,1.46219 7.5318,-3.27049 15.6417,-2.60379 22.1867,1.8239 l 3.3291,2.25213 5.5719,-5.54421 c 6.382,-6.35017 12.3888,-9.48352 20.7348,-10.81589 18.2342,-2.91097 36.608,8.51551 41.7621,25.97142 1.0719,3.63008 1.7745,4.27571 6.9361,6.37356 17.7057,7.19611 29.5846,19.70991 34.7212,36.5769 l 1.9983,6.56178 6.7097,-3.39448 c 6.086,-3.07888 7.3606,-3.36092 13.7098,-3.03352 15.1064,0.77897 26.0186,11.10459 28.063,26.55444 0.3821,2.8875 0.4117,5.25 0.066,5.25 -0.3458,0 -0.6288,-0.69293 -0.6288,-1.53984 z M 501.76166,321.29274 c 1.24391,-0.23919 3.04391,-0.23011 4,0.0202 0.95609,0.25029 -0.0617,0.446 -2.26166,0.4349 -2.2,-0.0111 -2.98225,-0.21589 -1.73834,-0.45508 z M 128.8125,301.31689 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 6,0 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1601,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 6,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -1528,-4 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1443,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z M 236,284.5 c 1.29175,-1.375 2.57363,-2.5 2.84863,-2.5 0.275,0 -0.55688,1.125 -1.84863,2.5 -1.29175,1.375 -2.57363,2.5 -2.84863,2.5 -0.275,0 0.55688,-1.125 1.84863,-2.5 z m 1398.9243,-0.25 -2.4243,-2.75 2.75,2.42431 c 2.5703,2.26589 3.2086,3.07569 2.4243,3.07569 -0.1791,0 -1.4166,-1.2375 -2.75,-2.75 z M 930.22178,26.25 930.5,12.5 933.75,12.186642 937,11.873283 V 25.936642 40 h -3.52822 -3.52822 z M 942,26 V 12 h 3.5 3.5 v 14 14 h -3.5 -3.5 z m 12,0 V 12 h 3.5 3.5 v 14 14 h -3.5 -3.5 z m 12,0 V 12 h 3.5 3.5 v 14 14 h -3.5 -3.5 z m 12,0 V 12 h 3.5 3.5 v 14 14 h -3.5 -3.5 z m 12,-0.0499 V 11.900196 l 5.75,0.299904 5.75,0.299904 0.2782,13.75 0.2782,13.75 h -6.02818 L 990,40 V 25.950096 Z"  ,
+            "m 1310,410 c 0,-1.85965 0.6667,-2 9.5,-2 8.8333,0 9.5,0.14035 9.5,2 0,1.85965 -0.6667,2 -9.5,2 -8.8333,0 -9.5,-0.14035 -9.5,-2 z M 526.34941,396 c 0,-4.675 0.17226,-6.5875 0.3828,-4.25 0.21053,2.3375 0.21053,6.1625 0,8.5 -0.21054,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 84.04798,-6 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 19.95202,6 c 0,-4.675 0.17226,-6.5875 0.3828,-4.25 0.21053,2.3375 0.21053,6.1625 0,8.5 -0.21054,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 675.03909,-4.5 c 0,-7.15 0.1611,-9.94379 0.354,-6.20841 0.1929,3.73537 0.1915,9.58537 0,13 -0.1947,3.41462 -0.3525,0.35841 -0.3508,-6.79159 z M 1310,402 c 0,-1.85965 0.6667,-2 9.5,-2 8.8333,0 9.5,0.14035 9.5,2 0,1.85965 -0.6667,2 -9.5,2 -8.8333,0 -9.5,-0.14035 -9.5,-2 z m 83.4705,-60 c 0,-34.375 0.1255,-48.4375 0.279,-31.25 0.1534,17.1875 0.1534,45.3125 0,62.5 -0.1535,17.1875 -0.279,3.125 -0.279,-31.25 z M 1310,394 c 0,-1.85965 0.6667,-2 9.5,-2 8.8333,0 9.5,0.14035 9.5,2 0,1.85965 -0.6667,2 -9.5,2 -8.8333,0 -9.5,-0.14035 -9.5,-2 z m 0,-10.91667 c 0,-2.95555 0.4986,-5.14934 1.25,-5.5 1,-0.46666 1,-0.7 0,-1.16666 -0.8768,-0.40915 -1.25,-3.54445 -1.25,-10.5 V 356 h 9.5 9.5 v 16 16 h -9.5 -9.5 z M 1318,374 c 0,-1.46667 -0.6667,-2 -2.5,-2 -1.8333,0 -2.5,0.53333 -2.5,2 0,1.46667 0.6667,2 2.5,2 1.8333,0 2.5,-0.53333 2.5,-2 z m -791,6 v -4 h 39.5 39.5 v 4 4 H 566.5 527 Z m 104,0 v -4 h 65.5 65.5 v 4 4 H 696.5 631 Z m 674.3854,-16 c 0,-6.875 0.1597,-9.6875 0.355,-6.25 0.1953,3.4375 0.1953,9.0625 0,12.5 -0.1953,3.4375 -0.355,0.625 -0.355,-6.25 z M 526.43244,324 c 0,-13.475 0.14155,-18.9875 0.31456,-12.25 0.17301,6.7375 0.17301,17.7625 0,24.5 -0.17301,6.7375 -0.31456,1.225 -0.31456,-12.25 z m 68,0 c 0,-13.475 0.14155,-18.9875 0.31456,-12.25 0.17301,6.7375 0.17301,17.7625 0,24.5 -0.17301,6.7375 -0.31456,1.225 -0.31456,-12.25 z m -68.11237,-42 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 20,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 734.83783,-8 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 0.2121,-16 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m -91.3343,-23.38472 c 0.8054,-0.76159 10.156,-9.09636 20.7792,-18.52171 l 19.3148,-17.13699 2.8298,2.27171 c 1.5563,1.24944 10.918,9.47171 20.8038,18.27171 l 17.9741,16 -3.8856,0.30832 c -3.7026,0.29381 -4.5325,-0.26794 -17.6187,-11.92668 -7.5532,-6.72926 -15.0903,-13.49175 -16.7492,-15.02776 l -3.016,-2.79275 -16.8694,14.96944 C 1309.7217,235.11925 1308.4891,236 1304.6503,236 c -3.5131,0 -3.8757,-0.19209 -2.6146,-1.38472 z M 1397,231.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -9,-8 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -89.5,-2.5 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z"  ,
+            "M 890,227.99371 V 51.987428 l 75.75,0.256286 75.75,0.256286 0.2528,175.75 0.2528,175.75 H 966.00279 890 Z M 906,226 c 0,-161.333333 -0.008,-162 -2,-162 -1.99177,0 -2,0.666667 -2,162 0,161.33333 0.008,162 2,162 1.99177,0 2,-0.66667 2,-162 z m 32,150 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 12,-150 V 64 h -2.5 -2.5 v 162 162 h 2.5 2.5 z m -92,114 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m -80,-36 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z m 40,0 v -12 h -12 -12 v 12 12 h 12 12 z M 938,88 V 76 h -12 -12 v 12 12 h 12 12 z m 40,0 V 76 h -12 -12 v 12 12 h 12 12 z m 40,0 V 76 h -12 -12 v 12 12 h 12 12 z M 9.5,381 c 0.995486,-1.1 2.034975,-2 2.309975,-2 0.275,0 -0.314489,0.9 -1.309975,2 -0.9954863,1.1 -2.0349751,2 -2.3099751,2 -0.275,0 0.3144888,-0.9 1.3099751,-2 z m 1851.905,-0.25 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z M 62,352.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.586056,-1.24387 1.621426,-1.2085 0.377555,0.37756 C 62.821186,352.91575 62,353.44548 62,352.62244 Z M 1808,351.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 67,347.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.586056,-1.24387 1.621426,-1.2085 0.377555,0.37756 C 67.821186,347.91575 67,348.44548 67,347.62244 Z M 1803,346.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 501.73097,337.34406 c 0.67703,-0.27392 2.02703,-0.29059 3,-0.0371 0.97297,0.25354 0.41903,0.47766 -1.23097,0.49804 -1.65,0.0204 -2.44606,-0.18706 -1.76903,-0.46099 z m -140.12796,-8.17739 c -0.28327,-0.45834 0.12038,-0.83334 0.89699,-0.83334 0.77661,0 1.18026,0.375 0.89699,0.83334 C 363.11373,329.625 362.71008,330 362.5,330 c -0.21008,0 -0.61373,-0.375 -0.89699,-0.83333 z m 139.66074,0.11575 c 1.52006,-0.22986 3.77006,-0.22371 5,0.0136 1.22994,0.23736 -0.0138,0.42542 -2.76375,0.41792 -2.75,-0.008 -3.75631,-0.20172 -2.23625,-0.43157 z M 1508.603,329.16667 c -0.2833,-0.45834 0.1204,-0.83334 0.897,-0.83334 0.7766,0 1.1803,0.375 0.897,0.83334 -0.2833,0.45833 -0.6869,0.83333 -0.897,0.83333 -0.2101,0 -0.6137,-0.375 -0.897,-0.83333 z M 410.40499,323.75 408.5,321.5 l 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z M 1460.5,324 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z M 366,324.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 C 366.82119,324.91575 366,325.44548 366,324.62244 Z M 1504,323.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 437,322.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 C 437.82119,322.91575 437,323.44548 437,322.62244 Z M 483,321.5 c -0.68469,-0.825 -1.01989,-1.5 -0.74489,-1.5 0.275,0 1.0602,0.675 1.74489,1.5 0.68469,0.825 1.01989,1.5 0.74489,1.5 -0.275,0 -1.0602,-0.675 -1.74489,-1.5 z m 950,0 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 130.76166,317.29274 c 1.24391,-0.23919 3.04391,-0.23011 4,0.0202 0.95609,0.25029 -0.0617,0.446 -2.26166,0.4349 -2.2,-0.0111 -2.98225,-0.21589 -1.73834,-0.45508 z m 1607.00004,0 c 1.2439,-0.23919 3.0439,-0.23011 4,0.0202 0.956,0.25029 -0.062,0.446 -2.2617,0.4349 -2.2,-0.0111 -2.9823,-0.21589 -1.7383,-0.45508 z M 438,313.5 c 1.29175,-1.375 2.57363,-2.5 2.84863,-2.5 0.275,0 -0.55688,1.125 -1.84863,2.5 -1.29175,1.375 -2.57363,2.5 -2.84863,2.5 -0.275,0 0.55688,-1.125 1.84863,-2.5 z m 44.92431,-0.25 -2.42431,-2.75 2.75,2.42431 c 2.57029,2.26589 3.20859,3.07569 2.42431,3.07569 -0.17912,0 -1.41662,-1.2375 -2.75,-2.75 z m 949.99999,0 -2.4243,-2.75 2.75,2.42431 c 1.5125,1.33338 2.75,2.57088 2.75,2.75 0,0.78428 -0.8098,0.14598 -3.0757,-2.42431 z M 196,314.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 C 196.82119,314.91575 196,315.44548 196,314.62244 Z M 1674,313.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 215.25,313.31067 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z m 1438,0 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z M 128.8125,309.31689 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 6,0 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1601,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 6,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -1528,-4 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1443,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z M 335.40499,302.75 333.5,300.5 l 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z M 1535.5,303 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z M 131.8125,301.31689 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1607,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -1522,-4 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 1437,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z M 937.39739,26 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 12,0 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 12,0 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 12,0 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 12,0 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z"  ,
+            "m 1054,396 v -8 h 111.5 111.5 v 8 8 H 1165.5 1054 Z m 275.1579,6 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 0,-8 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 0.1281,-10.5 c 0.01,-2.75 0.2017,-3.75631 0.4316,-2.23625 0.2298,1.52006 0.2237,3.77006 -0.014,5 -0.2373,1.22994 -0.4254,-0.0138 -0.4179,-2.76375 z M 526.27236,380 c 0,-2.475 0.19502,-3.4875 0.43337,-2.25 0.23836,1.2375 0.23836,3.2625 0,4.5 -0.23835,1.2375 -0.43337,0.225 -0.43337,-2.25 z m 104,0 c 0,-2.475 0.19502,-3.4875 0.43337,-2.25 0.23836,1.2375 0.23836,3.2625 0,4.5 -0.23835,1.2375 -0.43337,0.225 -0.43337,-2.25 z M 1054,366 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 51.1579,8 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 16.2121,-8 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z M 1054,342 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m -208,-24 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z M 514.44225,293 c 0,-16.225 0.13752,-22.8625 0.30561,-14.75 0.16808,8.1125 0.16808,21.3875 0,29.5 -0.16809,8.1125 -0.30561,1.475 -0.30561,-14.75 z M 1054,296 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 8 8 v 8 8 h -8 -8 z m 20,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 8 8 v 8 8 h -8 -8 z m 20,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 10 10 v 8 8 h -10 -10 z m 24,0 v -8 h 8 8 v 8 8 h -8 -8 z m 143.4439,-30 c 0,-16.775 0.1368,-23.6375 0.3041,-15.25 0.1672,8.3875 0.1672,22.1125 0,30.5 -0.1673,8.3875 -0.3041,1.525 -0.3041,-15.25 z m -863.13403,16.5 c 0.006,-3.3 0.1923,-4.52944 0.41486,-2.73209 0.22256,1.79735 0.21797,4.49735 -0.0102,6 -0.22818,1.50265 -0.41027,0.0321 -0.40466,-3.26791 z m 16,0 c 0.006,-3.3 0.1923,-4.52944 0.41486,-2.73209 0.22256,1.79735 0.21797,4.49735 -0.0102,6 -0.22818,1.50265 -0.41027,0.0321 -0.40466,-3.26791 z m 16,0 c 0.006,-3.3 0.1923,-4.52944 0.41486,-2.73209 0.22256,1.79735 0.21797,4.49735 -0.0102,6 -0.22818,1.50265 -0.41027,0.0321 -0.40466,-3.26791 z M 1054,274 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m -208,-24 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 20,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 10 10 v 10 10 h -10 -10 z m 24,0 v -10 h 8 8 v 10 10 h -8 -8 z m 118,-17.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 1054,224 v -8 h 111.5 111.5 v 8 8 H 1165.5 1054 Z m 16,2 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m 24,0 c 0,-1.7037 -0.6667,-2 -4.5,-2 -3.8333,0 -4.5,0.2963 -4.5,2 0,1.7037 0.6667,2 4.5,2 3.8333,0 4.5,-0.2963 4.5,-2 z m -108,-40 v -18 h 49.5 49.5 v 18 18 h -11.5 -11.5 v -5.82186 c 0,-7.71571 -2.324,-14.17532 -6.7335,-18.71557 -5.4053,-5.56566 -10.3424,-7.41865 -19.7665,-7.41865 -9.2559,0 -14.214,1.82937 -19.1993,7.08397 -4.5799,4.82728 -6.3007,9.69951 -6.3007,17.83999 V 204 h -12 -12 z m 0,-28 v -6 h 49.5 49.5 v 6 6 h -49.5 -49.5 z"  ,
+            "M 7.7680134,405.56677 C 7.083138,401.98408 13.304524,394.37112 20,390.59878 24.878249,387.8503 26.404365,387.5 33.5,387.5 c 7.16991,0 8.590459,0.33463 13.690548,3.225 l 5.690548,3.22499 0.694233,-2.22499 c 0.381829,-1.22375 1.033665,-2.45 1.448525,-2.725 0.41486,-0.275 0.972713,-2.1353 1.239674,-4.134 1.364591,-10.21654 14.093734,-24.91755 27.297652,-31.52632 4.371314,-2.18791 8.958314,-4.24227 10.193332,-4.56523 1.297109,-0.3392 2.249614,-1.36586 2.255257,-2.43083 0.01703,-3.21322 4.568601,-11.67328 8.907731,-16.55687 2.6122,-2.93997 6.70168,-5.94984 10.86955,-8 6.26895,-3.08368 7.33147,-3.28675 17.19736,-3.28675 10.07635,0 10.77927,0.14297 16.82818,3.42269 3.47192,1.88247 8.19692,5.51389 10.5,8.06982 l 4.18741,4.64715 4.38634,-2.779 c 6.69501,-4.24169 13.27928,-4.68133 21.22074,-1.41697 1.15901,0.47642 1.95666,-0.18336 2.86091,-2.36642 1.76645,-4.26458 8.81031,-10.44528 14.28817,-12.5373 4.55501,-1.73957 14.91819,-1.80104 20.24384,-0.12006 1.68476,0.53177 2.38177,-0.25701 4.42215,-5.00441 6.54297,-15.22367 24.73576,-24.71039 41.18232,-21.47473 3.48088,0.68482 8.52897,2.36 11.21797,3.72262 5.21218,2.64122 12.86478,9.86419 15.16632,14.31487 1.36433,2.63833 1.51091,2.67532 6.5281,1.64756 9.97066,-2.04246 23.54057,3.63916 30.00483,12.56282 1.59937,2.20787 3.18351,4.88252 3.5203,5.94367 0.49871,1.57129 1.21805,1.81573 3.87596,1.31711 5.0735,-0.9518 11.24379,1.21232 15.45043,5.41896 l 3.76288,3.76288 3.78293,-4.34873 c 2.08062,-2.3918 6.10108,-5.56502 8.93437,-7.0516 4.42389,-2.32114 6.35192,-2.70287 13.65144,-2.70287 7.26618,0 9.22578,0.38418 13.5,2.64668 2.75,1.45567 6.50712,4.21682 8.34915,6.13588 l 3.34916,3.4892 4.54807,-2.01183 c 3.07496,-1.3602 5.7842,-1.84603 8.36445,-1.49995 3.62576,0.48632 3.9403,0.30043 6.29744,-3.72172 C 439.41655,318.31395 449.2924,312.5987 461,312.5987 c 8.9917,0 14.68922,2.2301 21.32542,8.34714 4.22137,3.89113 9.67458,13.02316 9.67458,16.20122 0,1.1624 1.33034,1.36441 6.75,1.02501 l 6.75,-0.42272 -45.92196,35.12532 L 413.65608,408 H 210.94462 8.2331543 Z M 1455.3458,359.86462 l -48.1541,-48.1295 5.9973,0.62684 c 10.7353,1.12207 20.0437,7.05988 25.4027,16.20436 2.3572,4.02215 2.6717,4.20804 6.2975,3.72172 2.5802,-0.34608 5.2895,0.13975 8.3644,1.49995 l 4.5481,2.01183 3.3491,-3.4892 c 1.8421,-1.91906 5.5992,-4.68021 8.3492,-6.13588 4.2742,-2.2625 6.2338,-2.64668 13.5,-2.64668 7.2995,0 9.2276,0.38173 13.6514,2.70287 2.8333,1.48658 6.8538,4.6598 8.9344,7.0516 l 3.7829,4.34873 3.7629,-3.76288 c 4.2067,-4.20664 10.377,-6.37076 15.4505,-5.41896 2.6579,0.49862 3.3772,0.25418 3.8759,-1.31711 0.3368,-1.06115 1.9209,-3.7358 3.5203,-5.94367 6.4643,-8.92366 20.0342,-14.60528 30.0048,-12.56282 5.0172,1.02776 5.1638,0.99077 6.5281,-1.64756 2.3155,-4.47766 9.9665,-11.67988 15.2538,-14.35919 2.7371,-1.387 7.9092,-3.06218 11.4936,-3.72262 16.4597,-3.03282 34.312,6.37855 40.8192,21.51905 2.0404,4.7474 2.7374,5.53618 4.4222,5.00441 5.3256,-1.68098 15.6888,-1.61951 20.2438,0.12006 5.4779,2.09202 12.5218,8.27272 14.2882,12.5373 0.9043,2.18306 1.7019,2.84284 2.8609,2.36642 7.9415,-3.26436 14.5257,-2.82472 21.2208,1.41697 l 4.3863,2.779 4.1874,-4.64715 c 2.3031,-2.55593 7.0281,-6.18735 10.5,-8.06982 6.0489,-3.27972 6.7518,-3.42269 16.8282,-3.42269 9.8659,0 10.9284,0.20307 17.1973,3.28675 4.1679,2.05016 8.2574,5.06003 10.8696,8 4.3391,4.88359 8.8907,13.34365 8.9077,16.55687 0.01,1.06497 0.9582,2.09163 2.2553,2.43083 1.235,0.32296 5.822,2.37732 10.1933,4.56523 13.2039,6.60877 25.9331,21.30978 27.2977,31.52632 0.2669,1.9987 0.8248,3.859 1.2396,4.134 0.4149,0.275 1.0667,1.50125 1.4486,2.725 l 0.6942,2.22499 5.6906,-3.22499 c 5.1,-2.89037 6.5206,-3.225 13.6905,-3.225 7.0956,0 8.6218,0.3503 13.5,3.09878 6.6955,3.77234 12.9169,11.3853 12.232,14.96799 L 1863.7668,408 1683.6334,407.997 1503.5,407.994 1455.3458,359.86451 Z M 31.25,378.31067 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z m 1806,0 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z M 68,355.5 c 1.291745,-1.375 2.573628,-2.5 2.848628,-2.5 0.275,0 -0.556883,1.125 -1.848628,2.5 -1.291745,1.375 -2.573628,2.5 -2.848628,2.5 -0.275,0 0.556883,-1.125 1.848628,-2.5 z m 1734.9243,-0.25 -2.4243,-2.75 2.75,2.42431 c 2.5703,2.26589 3.2086,3.07569 2.4243,3.07569 -0.1791,0 -1.4166,-1.2375 -2.75,-2.75 z M 508.61514,335.82092 c 1.58667,-1.1985 3.44736,-2.6036 4.13486,-3.12245 0.93453,-0.70528 1.25,-0.15533 1.25,2.17909 0,2.99315 -0.17121,3.12244 -4.13486,3.12244 h -4.13486 z M 105,320.5 c 1.29175,-1.375 2.57363,-2.5 2.84863,-2.5 0.275,0 -0.55688,1.125 -1.84863,2.5 -1.29175,1.375 -2.57363,2.5 -2.84863,2.5 -0.275,0 0.55688,-1.125 1.84863,-2.5 z m 1660.9243,-0.25 -2.4243,-2.75 2.75,2.42431 c 1.5125,1.33338 2.75,2.57088 2.75,2.75 0,0.78428 -0.8098,0.14598 -3.0757,-2.42431 z M 387.25,314.31067 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z m 1094,0 c 0.9625,-0.25152 2.5375,-0.25152 3.5,0 0.9625,0.25153 0.175,0.45733 -1.75,0.45733 -1.925,0 -2.7125,-0.2058 -1.75,-0.45733 z"  ,
+            "M 0.66153808,410.03587 C -1.9965072,384.60507 20.718842,365.10358 43.86672,372.94355 c 3.501696,1.18599 6.47456,2.02137 6.606365,1.8564 0.131804,-0.16497 1.063588,-2.49812 2.07063,-5.18478 4.627072,-12.34443 16.971773,-25.73303 29.510333,-32.00582 C 86.022114,335.62421 89.848355,334 90.556805,334 c 0.70845,0 1.833681,-1.6875 2.500514,-3.75 3.283087,-10.15452 11.651141,-19.53147 21.911611,-24.5534 6.14376,-3.00703 7.18464,-3.1966 17.5521,-3.1966 10.38406,0 11.39773,0.18545 17.53893,3.20875 3.58485,1.76482 8.4689,5.00991 10.85345,7.21131 4.19134,3.86942 4.42954,3.95396 7.1611,2.54141 4.94053,-2.55485 12.16337,-3.64278 16.98787,-2.55879 3.62038,0.81345 4.56898,0.72053 5.26056,-0.51525 2.08599,-3.72746 6.96855,-8.23238 11.85821,-10.94103 4.83008,-2.67564 6.22874,-2.95564 15.22045,-3.04692 l 9.90159,-0.10053 1.77482,-3.45948 c 0.97615,-1.90271 3.78353,-5.68247 6.23861,-8.39947 16.90815,-18.71196 45.69915,-18.64368 62.42243,0.14804 5.54081,6.22612 5.90252,6.45015 9.4658,5.86246 4.50488,-0.74299 13.93121,1.08822 19.09021,3.70855 4.94802,2.51318 11.38452,8.37312 14.34085,13.05624 1.5767,2.49766 2.85502,3.53355 3.87669,3.1415 2.41134,-0.92532 10.67447,1.55523 14.24755,4.27704 l 3.26015,2.48344 4.31951,-3.53952 c 7.41646,-6.07723 12.98711,-8.05821 22.66019,-8.05821 9.61518,0 15.24574,1.98263 22.4909,7.91949 2.8917,2.36954 4.58108,3.13452 5.57105,2.52268 0.78146,-0.48296 3.78175,-1.17309 6.66733,-1.53362 4.83411,-0.60399 5.51693,-1.03193 8.68707,-5.44454 15.45346,-21.51008 49.65021,-18.24018 60.67988,5.80224 l 2.36041,5.1452 9.02168,0.28451 9.02168,0.2845 0.29557,3.5 0.29558,3.5 -10.68327,-0.0703 -10.68327,-0.0703 -1.89245,-5.07313 c -2.45433,-6.57939 -8.26006,-13.09962 -14.97675,-16.81992 -4.88414,-2.70527 -6.19139,-2.96606 -14.85541,-2.96354 -7.93686,0.002 -10.19472,0.37354 -13.7222,2.25614 -5.94114,3.17078 -10.92713,7.7866 -13.91104,12.87825 -2.47274,4.2194 -2.71971,4.36285 -7.51144,4.36285 -2.72505,0 -6.33391,0.71325 -8.01968,1.58499 -2.98114,1.54161 -3.15086,1.5049 -6.20034,-1.34133 -7.69078,-7.17817 -17.85251,-10.99717 -25.95605,-9.75484 -6.6508,1.01961 -16.30942,6.16825 -19.86019,10.58671 l -3.17024,3.94495 -3.07441,-3.15801 C 355.58634,321.76595 351.24231,320 345.15344,320 c -4.48683,0 -5.01551,-0.25279 -6.12365,-2.92808 -1.76567,-4.26269 -9.34403,-11.55542 -14.80068,-14.24283 -3.83029,-1.88642 -6.49168,-2.35432 -14.00285,-2.46183 l -9.27374,-0.13273 -2.80466,-3.86727 c -4.05576,-5.59238 -9.75849,-10.29069 -16.10223,-13.26615 -4.81732,-2.2595 -6.8617,-2.60111 -15.56666,-2.60111 -9.30005,0 -10.49951,0.23556 -16.67169,3.27411 -7.78741,3.83373 -15.61756,11.78702 -18.43723,18.72719 -1.84415,4.53908 -1.91853,4.59173 -5.37005,3.80077 -6.69993,-1.53538 -16.19741,-0.842 -20.7222,1.51284 -5.80041,3.01873 -10.7828,7.57583 -12.30763,11.2571 -1.02204,2.46742 -1.69399,2.95364 -3.37322,2.44081 -8.03003,-2.45231 -15.51988,-1.73296 -21.05313,2.02201 l -3.65734,2.48193 -4.91798,-5.04909 c -3.00714,-3.08733 -7.55043,-6.29604 -11.69324,-8.25839 C 142.2104,309.8365 140.55633,309.5 132.5,309.5 c -7.7157,0 -9.83278,0.39014 -14.83589,2.734 -10.94345,5.12679 -17.6198,12.40999 -21.313723,23.25107 -1.096971,3.21943 -2.313153,4.95394 -3.734092,5.32552 -1.158999,0.30309 -5.602683,2.30057 -9.874853,4.43886 -13.521017,6.76749 -25.272928,21.05796 -28.783038,35.00055 -0.657709,2.6125 -1.410446,4.75 -1.672748,4.75 -0.262303,0 -1.73709,-0.89732 -3.277304,-1.99405 C 45.065326,380.19827 34.554813,377.6785 30.129513,378.47998 15.450888,381.13846 4.9081998,392.77312 4.2862209,407 l -0.2841707,6.5 1.6906729,-5 c 1.2989246,-3.84144 1.7781524,-4.47921 2.0682089,-2.75242 l 0.377536,2.24758 202.595292,0.25242 202.5953,0.25242 -4.33023,3 -4.33023,3 38.9157,0.51766 c 21.40363,0.28472 -69.35769,0.62222 -201.69184,0.75 L 1.2849128,416 Z M 1462.5,414.95719 c 25.3,-0.35268 46.1967,-0.71232 46.4371,-0.79921 0.2404,-0.0869 -0.8563,-1.50798 -2.4371,-3.15798 l -2.8742,-3 h 180.1176 180.1175 l 0.3779,-2.25 c 0.2906,-1.73047 0.7682,-1.09549 2.0685,2.75 l 1.6906,5 -0.2841,-6.5 c -0.622,-14.22688 -11.1647,-25.86154 -25.8433,-28.52002 -4.4253,-0.80148 -14.9358,1.71829 -18.8789,4.52597 -1.5402,1.09673 -3.015,1.99405 -3.2773,1.99405 -0.2623,0 -1.015,-2.1375 -1.6727,-4.75 -3.5101,-13.94259 -15.262,-28.23306 -28.783,-35.00055 -4.2722,-2.13829 -8.7159,-4.13577 -9.8749,-4.43886 -1.4209,-0.37158 -2.6371,-2.10609 -3.7341,-5.32552 -3.6939,-10.84108 -10.3703,-18.12428 -21.3137,-23.25107 -5.0031,-2.34386 -7.1202,-2.734 -14.8359,-2.734 -8.0563,0 -9.7104,0.3365 -15.7753,3.20928 -4.1428,1.96235 -8.6861,5.17106 -11.6932,8.25839 l -4.918,5.04909 -3.6573,-2.48193 c -5.4933,-3.72783 -12.6947,-4.44688 -20.9562,-2.09241 -1.5744,0.44869 -2.5765,-0.38807 -4.7091,-3.93229 -2.9874,-4.96494 -9.9239,-9.92784 -16.2755,-11.64487 -3.6813,-0.99514 -10.233,-0.72306 -16.5154,0.68583 -2.217,0.49719 -2.7117,0.0392 -4.3701,-4.04599 -2.8181,-6.94218 -10.6472,-14.89598 -18.4372,-18.73099 -6.1722,-3.03855 -7.3716,-3.27411 -16.6717,-3.27411 -8.7049,0 -10.7493,0.34161 -15.5666,2.60111 -6.3438,2.97546 -12.0465,7.67377 -16.1023,13.26615 l -2.8046,3.86727 -9.2738,0.13273 c -7.5111,0.10751 -10.1725,0.57541 -14.0028,2.46183 -5.4567,2.68741 -13.035,9.98014 -14.8007,14.24283 -1.1081,2.67529 -1.6368,2.92808 -6.1236,2.92808 -6.0889,0 -10.4329,1.76595 -14.421,5.86247 l -3.0744,3.15801 -3.1703,-3.94495 c -3.5507,-4.41846 -13.2094,-9.5671 -19.8602,-10.58671 -8.1035,-1.24233 -18.2652,2.57667 -25.956,9.75484 -3.0495,2.84623 -3.2192,2.88294 -6.2003,1.34133 -1.6858,-0.87174 -5.2947,-1.58499 -8.0197,-1.58499 -4.7917,0 -5.0387,-0.14345 -7.5115,-4.36285 -5.4297,-9.26513 -14.3865,-14.70867 -25.3832,-15.42674 l -7.25,-0.47342 v -3.30111 c 0,-4.01655 1.9241,-4.86594 8.7369,-3.85688 10.6413,1.57611 19.1917,6.53308 24.8467,14.40455 3.1702,4.41261 3.853,4.84055 8.6871,5.44454 2.8856,0.36053 5.8859,1.05066 6.6673,1.53362 0.99,0.61184 2.6794,-0.15314 5.5711,-2.52268 7.2452,-5.93686 12.8757,-7.91949 22.4909,-7.91949 9.6731,0 15.2437,1.98098 22.6602,8.05821 l 4.3195,3.53952 3.2602,-2.48344 c 3.573,-2.72181 11.8362,-5.20236 14.2475,-4.27704 1.0217,0.39205 2.3,-0.64384 3.8767,-3.1415 2.9563,-4.68312 9.3928,-10.54306 14.3408,-13.05624 5.4151,-2.7504 14.4729,-4.40489 19.7682,-3.61082 2.8857,0.43274 4.5269,0.30436 4.5269,-0.3541 0,-0.56812 2.2852,-3.53337 5.0783,-6.58943 16.2559,-17.78659 45.1321,-17.39506 61.6051,0.8353 2.4551,2.717 5.2624,6.49676 6.2386,8.39947 l 1.7748,3.45948 9.9016,0.10053 c 8.9917,0.0913 10.3904,0.37128 15.2205,3.04692 4.8896,2.70865 9.7722,7.21357 11.8582,10.94103 0.6915,1.23578 1.6401,1.3287 5.2605,0.51525 4.8245,-1.08399 12.0474,0.004 16.9879,2.55879 2.7316,1.41255 2.9698,1.32801 7.1611,-2.54141 2.3845,-2.2014 7.2686,-5.44649 10.8534,-7.21131 6.1412,-3.0233 7.1549,-3.20875 17.539,-3.20875 10.3674,0 11.4083,0.18957 17.5521,3.1966 10.2604,5.02193 18.6285,14.39888 21.9116,24.5534 0.6668,2.0625 1.792,3.75 2.5005,3.75 0.7084,0 4.5347,1.62421 8.5028,3.60935 12.5385,6.27279 24.8832,19.66139 29.5103,32.00582 1.007,2.68666 1.9388,5.01981 2.0706,5.18478 0.1318,0.16497 3.1047,-0.67041 6.6064,-1.8564 23.1479,-7.83997 45.8632,11.66152 43.2052,37.09232 L 1870.7151,416 1643.6075,415.79921 C 1518.6833,415.68876 1437.1969,415.3099 1462.5,414.95719 Z M 54.710251,387 c 0.287656,-1.1 0.695528,-2 0.90638,-2 C 55.827484,385 56,385.9 56,387 c 0,1.1 -0.407871,2 -0.90638,2 -0.49851,0 -0.671025,-0.9 -0.383369,-2 z M 1816,387 c 0,-1.1 0.1725,-2 0.3834,-2 0.2108,0 0.6187,0.9 0.9063,2 0.2877,1.1 0.1152,2 -0.3833,2 -0.4985,0 -0.9064,-0.9 -0.9064,-2 z M 1025.4881,226 c 0,-89.375 0.1178,-125.9375 0.2618,-81.25 0.144,44.6875 0.144,117.8125 0,162.5 -0.144,44.6875 -0.2618,8.125 -0.2618,-81.25 z m 383.9169,88.75 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z"  ,
+            "m 1305.3201,410 c 0,-3.575 0.1815,-5.0375 0.4033,-3.25 0.2218,1.7875 0.2218,4.7125 0,6.5 -0.2218,1.7875 -0.4033,0.325 -0.4033,-3.25 z m 23.8378,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z M 762.34941,396 c 0,-4.675 0.17226,-6.5875 0.3828,-4.25 0.21053,2.3375 0.21053,6.1625 0,8.5 -0.21054,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 514.99999,0 c 0,-4.675 0.1723,-6.5875 0.3828,-4.25 0.2105,2.3375 0.2105,6.1625 0,8.5 -0.2105,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 56.0873,-18 c 0,-14.575 0.1398,-20.5375 0.3107,-13.25 0.1709,7.2875 0.1709,19.2125 0,26.5 -0.1709,7.2875 -0.3107,1.325 -0.3107,-13.25 z M 590.43244,324 c 0,-13.475 0.14155,-18.9875 0.31456,-12.25 0.17301,6.7375 0.17301,17.7625 0,24.5 -0.17301,6.7375 -0.31456,1.225 -0.31456,-12.25 z m -76.14643,10.5 c 0.008,-2.75 0.20172,-3.75631 0.43157,-2.23625 0.22986,1.52006 0.22371,3.77006 -0.0136,5 -0.23736,1.22994 -0.42542,-0.0138 -0.41792,-2.76375 z m 891.06899,-30 c 0,-4.95 0.1746,-6.84892 0.3813,-4.21983 0.2066,2.6291 0.2042,6.6791 -0.01,9 -0.2097,2.32091 -0.3788,0.16983 -0.3757,-4.78017 z M 590.32007,282 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 16,0 c 0,-3.575 0.1815,-5.0375 0.40333,-3.25 0.22182,1.7875 0.22182,4.7125 0,6.5 -0.22183,1.7875 -0.40333,0.325 -0.40333,-3.25 z m 23.83782,-4 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 32,-4 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 36,0 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m -68,-4 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 8.21207,-12 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m 12,0 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m 12,0 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m 12,0 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m 12,0 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m 12,0 c 0,-5.775 0.16528,-8.1375 0.36728,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.36728,0.525 -0.36728,-5.25 z m -79.97257,-8 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 514.95201,-26 c 0,-4.675 0.1723,-6.5875 0.3828,-4.25 0.2105,2.3375 0.2105,6.1625 0,8.5 -0.2105,2.3375 -0.3828,0.425 -0.3828,-4.25 z M 1377,229.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -68.5,-1.5 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z m 84.5,0.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z M 1061.1579,226 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z M 1292,227.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z m 76.405,-5.87244 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z M 1317.5,220 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z m 63.5,-2.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -77,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z m 55.405,-2.87244 -1.905,-2.25 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.8048,0.20945 -2.595,-1.90499 z M 1326.5,212 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z m 45.5,-2.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -59,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z m 37.405,-2.87244 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z M 1335.5,204 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z m -82.0849,-18 c 0,-10.175 0.1485,-14.3375 0.33,-9.25 0.1815,5.0875 0.1815,13.4125 0,18.5 -0.1815,5.0875 -0.33,0.925 -0.33,-9.25 z m 109.9899,15.75 -1.905,-2.25 2.25,1.90499 c 2.1144,1.79022 2.7052,2.59501 1.905,2.59501 -0.1898,0 -1.2023,-1.0125 -2.25,-2.25 z M 1321,201.62244 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1355,194.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -25,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1346,186.5 c -0.6847,-0.825 -1.0199,-1.5 -0.7449,-1.5 0.275,0 1.0602,0.675 1.7449,1.5 0.6847,0.825 1.0199,1.5 0.7449,1.5 -0.275,0 -1.0602,-0.675 -1.7449,-1.5 z m -7,-0.87756 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.5861,-1.24387 1.6214,-1.2085 0.3776,0.37756 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37244 z M 1253.3201,158 c 0,-3.575 0.1815,-5.0375 0.4033,-3.25 0.2218,1.7875 0.2218,4.7125 0,6.5 -0.2218,1.7875 -0.4033,0.325 -0.4033,-3.25 z"  ,
+            "m 486.75,415.26276 c 2.8875,-0.202 7.6125,-0.202 10.5,0 2.8875,0.202 0.525,0.36728 -5.25,0.36728 -5.775,0 -8.1375,-0.16528 -5.25,-0.36728 z m 921.4821,0.0227 c 1.5026,-0.22817 4.2026,-0.23276 6,-0.0102 1.7973,0.22256 0.5679,0.40925 -2.7321,0.41486 -3.3,0.006 -4.7706,-0.17648 -3.2679,-0.40466 z m 79.9915,-1.01236 c 2.0479,-0.21488 5.6479,-0.21785 8,-0.007 2.352,0.21125 0.6764,0.38706 -3.7236,0.39069 -4.4,0.004 -6.3244,-0.16921 -4.2764,-0.38408 z M 416.03571,406.57853 c 0.80536,-0.7818 21.26429,-16.54901 45.46429,-35.03822 42.45428,-32.43581 44.14052,-33.60664 48,-33.32854 3.99775,0.28807 4.00017,0.29083 4.29928,4.90337 0.29158,4.49632 0.21498,4.63201 -2.97515,5.27003 -8.51822,1.70365 -15.59215,10.96496 -16.56433,21.68629 L 493.72222,376 H 503.86111 514 v 16 16 h -49.71429 c -42.98985,0 -49.51622,-0.19227 -48.25,-1.42147 z M 1406,360.5 c 0,-35.56406 0.2936,-47.5 1.1684,-47.5 0.6426,0 22.5801,21.36935 48.75,47.48745 l 47.5816,47.48746 -48.75,0.0125 L 1406,408 Z"  ,
+            "m 1290,410 v -6 h 7.5 7.5 v 6 6 h -7.5 -7.5 z m 44,0 v -6 h 30.0293 30.0293 l -0.1187,-78 -0.1188,-78 h -51.7596 -51.7595 l -0.5884,-13.22929 c -0.3236,-7.27611 -0.4197,-13.39795 -0.2136,-13.60409 0.2062,-0.20613 0.5155,1.58042 0.6874,3.97011 l 0.3126,4.34489 10.9117,-9.99081 c 6.0015,-5.49494 17.6698,-15.9403 25.9297,-23.21189 l 15.018,-13.22109 6.0703,5.37797 c 3.3387,2.95789 12.8528,11.3572 21.1424,18.66514 8.2897,7.30794 17.2407,15.33734 19.8911,17.84311 8.5868,8.11835 12.2502,11.05595 13.7874,11.05595 1.3244,0 1.5902,9.38207 2.1893,77.25 0.375,42.4875 0.6545,82.9875 0.621,90 L 1406,416 h -36 -36 z m 50,-174.41182 c 0,-0.2265 -7.9875,-7.49933 -17.75,-16.16185 -9.7625,-8.66252 -19.1093,-17.01542 -20.7706,-18.562 l -3.0206,-2.81197 -16.4794,14.62744 c -9.0637,8.0451 -18.6656,16.58331 -21.3376,18.97382 L 1299.7837,236 h 42.1081 C 1365.0513,236 1384,235.81468 1384,235.58818 Z M 1309.4405,384 c 0,-15.675 0.1383,-22.0875 0.3072,-14.25 0.169,7.8375 0.169,20.6625 0,28.5 -0.1689,7.8375 -0.3072,1.425 -0.3072,-14.25 z m -703.09109,12 c 0,-4.675 0.17226,-6.5875 0.3828,-4.25 0.21053,2.3375 0.21053,6.1625 0,8.5 -0.21054,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 20.04798,-6 c 0,-7.975 0.1553,-11.2375 0.34512,-7.25 0.18981,3.9875 0.18981,10.5125 0,14.5 -0.18982,3.9875 -0.34512,0.725 -0.34512,-7.25 z m 136.25629,1.843 C 762.29415,385.15665 762,361.75665 762,339.843 V 300 h -84 -84 v 24 c 0,20.66667 -0.20833,24 -1.5,24 -1.29167,0 -1.5,-3.33333 -1.5,-24 V 300 H 558.5 526 v 24 24 h -5.87742 -5.87742 l 0.2545,-12.75 c 0.13998,-7.0125 0.30982,-25.9125 0.37742,-42 L 515,264 h 124 124 v -14 -14 h 57.5 57.5 v 6 6 h -4 -4 v 10 10 h 4 c 3.33333,0 4,0.33333 4,2 0,1.91667 -0.66667,2 -16,2 -15.33333,0 -16,0.0833 -16,2 0,1.91667 0.66667,2 16,2 15.33333,0 16,0.0833 16,2 0,1.97411 -0.66667,2 -51.5,2 -50.83333,0 -51.5,-0.0259 -51.5,-2 0,-1.91667 0.66667,-2 16,-2 15.33333,0 16,-0.0833 16,-2 0,-1.91667 -0.66667,-2 -16,-2 -15.33333,0 -16,-0.0833 -16,-2 0,-1.66667 0.66667,-2 4,-2 h 4 v -10 -10 h -4.5 -4.5 v 78 78 h -5.34632 -5.34633 z M 543,282 v -6 h -8.5 -8.5 v 6 6 h 8.5 8.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 16,0 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 11,0 v -6 h -4 -4 v 6 6 h 4 4 z m 81,-8 c 0,-1.91919 -0.66667,-2 -16.5,-2 -15.83333,0 -16.5,0.0808 -16.5,2 0,1.91919 0.66667,2 16.5,2 15.83333,0 16.5,-0.0808 16.5,-2 z m -48,-16 v -10 h -4.5 -4.5 v 10 10 h 4.5 4.5 z m 12,0 v -10 h -4.5 -4.5 v 10 10 h 4.5 4.5 z m 12,0 v -10 h -4.5 -4.5 v 10 10 h 4.5 4.5 z m 12,0 v -10 h -4.5 -4.5 v 10 10 h 4.5 4.5 z m 12,0 v -10 h -4.5 -4.5 v 10 10 h 4.5 4.5 z m 11,0 v -10 h -4 -4 v 10 10 h 4 4 z m 12,0 v -10 h -4 -4 v 10 10 h 4 4 z m 463.1579,140 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 0,-8 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -803.00001,-4 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 80.11447,-6 c 0,-2.475 0.19502,-3.4875 0.43337,-2.25 0.23836,1.2375 0.23836,3.2625 0,4.5 -0.23835,1.2375 -0.43337,0.225 -0.43337,-2.25 z m 710.88554,-6 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -112,-148 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 36.1145,-18 c 0,-2.475 0.195,-3.4875 0.4333,-2.25 0.2384,1.2375 0.2384,3.2625 0,4.5 -0.2383,1.2375 -0.4333,0.225 -0.4333,-2.25 z M 1190,199.5651 c 0,-5.27981 1.3658,-9.24583 4.2409,-12.3151 1.7928,-1.91386 3.1424,-2.25 9.0334,-2.25 6.543,0 7.1136,0.1879 10.3257,3.4 3.1235,3.1235 3.4,3.89608 3.4,9.5 v 6.1 h -13.5 -13.5 z"  ,
+            "m 503.00374,367.25 c 0.01,-1.96313 4.32215,-7.47813 7.23712,-9.2554 3.20584,-1.95463 5.29104,-1.98719 127.50914,-1.99086 L 762,356 v 6 6 H 632.5 c -71.225,0 -129.49832,-0.3375 -129.49626,-0.75 z"  ,
+            "M 454.03976,415.01443 405.57952,414.5 l 4.10415,-3.25 4.10414,-3.25 H 463.8939 514 v 4 4 l -5.75,-0.23557 c -3.1625,-0.12956 -27.55711,-0.46706 -54.21024,-0.75 z M 1406,411.5 V 408 h 48.7308 48.7307 l 2.8397,2.83964 2.8396,2.83964 -18.2307,0.66036 C 1480.8832,414.70284 1457.6765,415 1439.3397,415 H 1406 Z"  ,
+            "m 514,396 v -20 h 6 6 v 14 14 h 40.5 40.5 v -8 -8 h -40 c -39.33333,0 -40,-0.0333 -40,-2 0,-1.96667 0.66667,-2 40,-2 h 40 v -4 c 0,-2.88889 0.41667,-4 1.5,-4 1.2619,0 1.5,2.22222 1.5,14 v 14 h 8.5 8.5 v -14 c 0,-11.77778 0.2381,-14 1.5,-14 1.08333,0 1.5,1.11111 1.5,4 v 4 h 66 c 65.33333,0 66,0.0202 66,2 0,1.9798 -0.66667,2 -66,2 h -66 v 8 8 h 124 124 v 6 6 H 696 514 Z m 775.4168,1.5 c -9e-4,-10.45 0.1465,-14.86087 0.3276,-9.80194 0.1811,5.05893 0.1819,13.60893 0,19 -0.1801,5.39107 -0.3283,1.25194 -0.3293,-9.19806 z m 16.5832,0 c 0,-11.66667 0.3694,-18.5 1,-18.5 0.55,0 1,-0.675 1,-1.5 0,-0.825 -0.45,-1.5 -1,-1.5 -0.6111,0 -1,-4.66667 -1,-12 v -12 h 13.5 13.5 v 22.84638 c 0,12.5655 0.2924,26.9655 0.6497,32 L 1334.2995,416 H 1320.1497 1306 Z m 24,12.5 c 0,-1.86667 -0.6667,-2 -10,-2 -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -12.5 c 0,-7.66667 0.3867,-12.5 1,-12.5 0.55,0 1,-0.675 1,-1.5 0,-0.825 -0.45,-1.5 -1,-1.5 -0.6,0 -1,-4 -1,-10 v -10 h -10.5 -10.5 v 28 28 h 10.5 c 9.8333,0 10.5,-0.12698 10.5,-2 z m -20,-12 c 0,-1.85965 0.6667,-2 9.5,-2 8.8333,0 9.5,0.14035 9.5,2 0,1.85965 -0.6667,2 -9.5,2 -8.8333,0 -9.5,-0.14035 -9.5,-2 z m 0,-8 c 0,-1.85965 0.6667,-2 9.5,-2 8.8333,0 9.5,0.14035 9.5,2 0,1.85965 -0.6667,2 -9.5,2 -8.8333,0 -9.5,-0.14035 -9.5,-2 z m 4,-16 c 0,-1.11111 0.6667,-2 1.5,-2 0.8333,0 1.5,0.88889 1.5,2 0,1.11111 -0.6667,2 -1.5,2 -0.8333,0 -1.5,-0.88889 -1.5,-2 z m 35,10 c 0,-3.33333 0.3333,-4 2,-4 1.9048,0 2,-0.66667 2,-14 v -14 h 10.5 10.5 v 14 c 0,13.33333 0.095,14 2,14 1.6667,0 2,0.66667 2,4 v 4 h -14.5 -14.5 z m 21,-10 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 0,-14 v -4 h -6.5 -6.5 v 4 4 h 6.5 6.5 z m -580,16 c 0,-3.33333 0.33333,-4 2,-4 1.91667,0 2,-0.66667 2,-16 v -16 h 10 10 v 16 c 0,15.33333 0.0833,16 2,16 1.66667,0 2,0.66667 2,4 v 4 h -14 -14 z m 20,-12 v -8 h -6 -6 v 8 8 h 6 6 z m 0,-16 v -4 h -6 -6 v 4 4 h 6 6 z m 24,28 c 0,-3.33333 0.33333,-4 2,-4 1.91667,0 2,-0.66667 2,-16 v -16 h 10 10 v 16 c 0,15.33333 0.0833,16 2,16 1.66667,0 2,0.66667 2,4 v 4 h -14 -14 z m 20,-12 v -8 h -6 -6 v 8 8 h 6 6 z m 0,-16 v -4 h -6 -6 v 4 4 h 6 6 z m 435.4679,-45 c -0.01,-40.975 0.1194,-65.6125 0.2809,-54.75 l 0.2935,19.75 h 51.4788 c 50.8122,0 51.4789,0.0259 51.4789,2 0,1.97411 -0.6667,2 -51.5,2 -50.8333,0 -51.5,0.0259 -51.5,2 0,1.97411 0.6667,2 51.5,2 50.8333,0 51.5,0.0259 51.5,2 0,1.97411 -0.6667,2 -51.4905,2 h -51.4905 l -0.2692,48.75 c -0.1481,26.8125 -0.275,15.225 -0.2819,-25.75 z m -76.0979,63 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m -48,-24 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 43.63,-6 c 0,-3.33333 0.3333,-4 2,-4 1.9048,0 2,-0.66667 2,-14 v -14 h 10.5 10.5 v 14 c 0,13.33333 0.095,14 2,14 1.6667,0 2,0.66667 2,4 v 4 h -14.5 -14.5 z m 21,-10 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 0,-14 v -4 h -6.5 -6.5 v 4 4 h 6.5 6.5 z m 23,24 c 0,-3.33333 0.3333,-4 2,-4 1.9048,0 2,-0.66667 2,-14 v -14 h 10.5 10.5 v 14 c 0,13.33333 0.095,14 2,14 1.6667,0 2,0.66667 2,4 v 4 h -14.5 -14.5 z m 21,-10 v -6 h -6.5 -6.5 v 6 6 h 6.5 6.5 z m 0,-14 v -4 h -6.5 -6.5 v 4 4 h 6.5 6.5 z m -764.54444,22.92809 c -0.37471,-0.60629 -0.26336,-1.52029 0.24746,-2.03111 0.54087,-0.54087 12.80375,-0.81771 29.36287,-0.66287 C 659.55582,332.46312 663.5,332.70807 663.5,334 c 0,1.2923 -3.97139,1.53672 -28.68157,1.76522 -20.08197,0.1857 -28.88585,-0.0653 -29.36287,-0.83713 z m 68.01762,0.0285 c -1.31929,-2.13466 1.23818,-3.05935 7.62839,-2.75817 4.8868,0.23032 6.39843,0.65595 6.39843,1.80157 0,1.15389 -1.53765,1.56778 -6.66396,1.79373 -4.17939,0.18421 -6.92453,-0.1279 -7.36286,-0.83713 z m 27.98367,-0.0264 c -1.58708,-2.56795 2.10043,-2.95646 25.61134,-2.69838 20.9313,0.22976 24.43181,0.48311 24.43181,1.76819 0,1.28559 -3.52773,1.53821 -24.68028,1.76732 -17.19739,0.18627 -24.88724,-0.0675 -25.36287,-0.83713 z M 790,324 c 0,-3.33333 0.33333,-4 2,-4 1.91667,0 2,-0.66667 2,-16 v -16 h 10 10 v 16 c 0,15.33333 0.0833,16 2,16 1.66667,0 2,0.66667 2,4 v 4 h -14 -14 z m 20,-12 v -8 h -6 -6 v 8 8 h 6 6 z m 0,-16 v -4 h -6 -6 v 4 4 h 6 6 z m 24,28 c 0,-3.33333 0.33333,-4 2,-4 1.91667,0 2,-0.66667 2,-16 v -16 h 10 10 v 16 c 0,15.33333 0.0833,16 2,16 1.66667,0 2,0.66667 2,4 v 4 h -14 -14 z m 20,-12 v -8 h -6 -6 v 8 8 h 6 6 z m 0,-16 v -4 h -6 -6 v 4 4 h 6 6 z m 359.37,22 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m -48.0206,-22 c 0,-4.675 0.1723,-6.5875 0.3828,-4.25 0.2105,2.3375 0.2105,6.1625 0,8.5 -0.2105,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 24,0 c 0,-4.675 0.1723,-6.5875 0.3828,-4.25 0.2105,2.3375 0.2105,6.1625 0,8.5 -0.2105,2.3375 -0.3828,0.425 -0.3828,-4.25 z m 24,0 c 0,-4.675 0.1723,-6.5875 0.3828,-4.25 0.2105,2.3375 0.2105,6.1625 0,8.5 -0.2105,2.3375 -0.3828,0.425 -0.3828,-4.25 z M 1213.37,274 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m -48,-24 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m 24,0 c 0,-5.775 0.1652,-8.1375 0.3672,-5.25 0.202,2.8875 0.202,7.6125 0,10.5 -0.202,2.8875 -0.3672,0.525 -0.3672,-5.25 z m -44.0601,-51.5 c 0.01,-3.3 0.1923,-4.52944 0.4148,-2.73209 0.2226,1.79735 0.218,4.49735 -0.01,6 -0.2281,1.50265 -0.4102,0.0321 -0.4046,-3.26791 z m 12,0 c 0.01,-3.3 0.1923,-4.52944 0.4148,-2.73209 0.2226,1.79735 0.218,4.49735 -0.01,6 -0.2281,1.50265 -0.4102,0.0321 -0.4046,-3.26791 z m 36.137,-26.5 c 0,-17.875 0.1356,-25.1875 0.3013,-16.25 0.1657,8.9375 0.1657,23.5625 0,32.5 -0.1657,8.9375 -0.3013,1.625 -0.3013,-16.25 z M 1191,190.34098 c 0,-0.54579 1.2375,-2.08329 2.75,-3.41667 l 2.75,-2.42431 -2.5,3 c -1.375,1.65 -2.6125,3.1875 -2.75,3.41667 -0.1375,0.22916 -0.25,-0.0299 -0.25,-0.57569 z m 21.6942,-2.87258 c -1.5431,-1.35762 -2.4091,-2.4684 -1.9243,-2.4684 0.4848,0 1.9384,1.125 3.2301,2.5 2.9886,3.18124 2.328,3.16525 -1.3058,-0.0316 z m -12.9442,-3.1918 c 1.7875,-0.22182 4.7125,-0.22182 6.5,0 1.7875,0.22183 0.325,0.40333 -3.25,0.40333 -3.575,0 -5.0375,-0.1815 -3.25,-0.40333 z"  ,
+            "m 1054,410 v -6 h 112 112 v -8 -8 h -112 -112 v -6 -6 h 10 10 v -10 -10 h -10 c -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -10 -10 h -10 c -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -10 -10 h -10 c -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -8 -8 h -10 c -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -10 -10 h -10 c -9.3333,0 -10,-0.13333 -10,-2 0,-1.86667 0.6667,-2 10,-2 h 10 v -10 -10 h -10 -10 v -4 -4 h 112 112 v -8 -8 h -112 -112 v -6 -6 h 44 44 v -32 -32 h 61.5 61.5 v 32 32 h 12 12 l 0.046,4.25 c 0.025,2.3375 0.022,41.6 -0.01,87.25 -0.029,45.65 -0.05,91.4375 -0.046,101.75 L 1289,416 H 1171.5 1054 Z m 44,-44 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 20,0 v -10 h -8.5 -8.5 v 10 10 h 8.5 8.5 z m -180,-24 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 20,0 v -10 h -8.5 -8.5 v 10 10 h 8.5 8.5 z m -180,-24 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 20,0 v -10 h -8.5 -8.5 v 10 10 h 8.5 8.5 z m -180,-22 v -8 h -10 -10 v 8 8 h 10 10 z m 20,0 v -8 h -8 -8 v 8 8 h 8 8 z m 24,0 v -8 h -10 -10 v 8 8 h 10 10 z m 24,0 v -8 h -10 -10 v 8 8 h 10 10 z m 24,0 v -8 h -10 -10 v 8 8 h 10 10 z m 20,0 v -8 h -8 -8 v 8 8 h 8 8 z m 24,0 v -8 h -10.5 -10.5 v 8 8 h 10.5 10.5 z m 24,0 v -8 h -10.5 -10.5 v 8 8 h 10.5 10.5 z m 20,0 v -8 h -8.5 -8.5 v 8 8 h 8.5 8.5 z m -180,-22 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 20,0 v -10 h -8.5 -8.5 v 10 10 h 8.5 8.5 z m -180,-24 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 24,0 v -10 h -10 -10 v 10 10 h 10 10 z m 20,0 v -10 h -8 -8 v 10 10 h 8 8 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 24,0 v -10 h -10.5 -10.5 v 10 10 h 10.5 10.5 z m 20,0 v -10 h -8.5 -8.5 v 10 10 h 8.5 8.5 z m -99.7896,-53.25 c 0.7939,-12.1573 6.5349,-20.39719 16.2211,-23.28151 18.7342,-5.57861 34.5685,5.2901 34.5685,23.72785 V 204 h 12.5 12.5 v -18 -18 h -50 -50 v 18 18 h 11.8685 11.8685 z M 1218,198.64788 c 0,-3.91528 -0.6121,-6.2604 -2.28,-8.73543 -3.0319,-4.49909 -6.0651,-5.88 -12.9542,-5.89771 -4.9181,-0.0126 -6.1935,0.39559 -8.9607,2.86811 -2.9575,2.64251 -3.26,3.4762 -3.6286,10 L 1189.7743,204 H 1203.8872 1218 Z M 1254,158 v -6 h -50 -50 v 6 6 h 50 50 z m 51,219.5 c 0,-0.825 0.675,-1.5 1.5,-1.5 0.825,0 1.5,0.675 1.5,1.5 0,0.825 -0.675,1.5 -1.5,1.5 -0.825,0 -1.5,-0.675 -1.5,-1.5 z m 24,0 c 0,-0.825 0.675,-1.5 1.5,-1.5 0.825,0 1.5,0.675 1.5,1.5 0,0.825 -0.675,1.5 -1.5,1.5 -0.825,0 -1.5,-0.675 -1.5,-1.5 z m -19,-0.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -815.72764,-5 c 0,-2.475 0.19502,-3.4875 0.43337,-2.25 0.23836,1.2375 0.23836,3.2625 0,4.5 -0.23835,1.2375 -0.43337,0.225 -0.43337,-2.25 z"  ,
+            "M 878,228 V 40 h 20 20 V 20 0 h 48 48 v 20 20 h 20 20 v 188 188 h -88 -88 z m 164,0 V 52 h -76 -76 v 176 176 h 76 76 z M 938,26 V 12 h -4 -4 v 14 14 h 4 4 z m 12,0 V 12 h -4 -4 v 14 14 h 4 4 z m 12,0 V 12 h -4 -4 v 14 14 h 4 4 z m 12,0 V 12 h -4 -4 v 14 14 h 4 4 z m 12,0 V 12 h -4 -4 v 14 14 h 4 4 z m 16,0 V 12 h -6 -6 v 14 14 h 6 6 z"  ,
+            "m 495.02196,370.75 c 0.0359,-8.57055 4.64104,-16.34192 12.09064,-20.40327 3.23526,-1.76378 9.03545,-1.85864 129.1374,-2.11185 L 762,347.96977 V 351.98488 356 H 637.36803 C 514.15656,356 512.69889,356.023 509.4745,358.01576 506.75822,359.69451 503,365.14239 503,367.40113 503,367.73051 561.275,368 632.5,368 H 762 v 4 4 H 628.5 495 l 0.022,-5.25 z M 1213.1579,226 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 24,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z"  ,
+            "m 902,226 c 0,-161.333333 0.008,-162 2,-162 1.99177,0 2,0.666667 2,162 0,161.33333 -0.008,162 -2,162 -1.99177,0 -2,-0.66667 -2,-162 z m 12,150 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 12,-146 c 0,-161.333333 0.01,-162 2,-162 1.9918,0 2,0.666667 2,162 0,161.33333 -0.01,162 -2,162 -1.9918,0 -2,-0.66667 -2,-162 z M 914,340 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,304 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,268 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,232 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 48,-2 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.66667 0.6667,-2 4,-2 3.3333,0 4,0.33333 4,2 0,1.66667 -0.6667,2 -4,2 -3.3333,0 -4,-0.33333 -4,-2 z m 24,0 c 0,-1.61905 0.6667,-2 3.5,-2 2.8333,0 3.5,0.38095 3.5,2 0,1.61905 -0.6667,2 -3.5,2 -2.8333,0 -3.5,-0.38095 -3.5,-2 z m 24,0 c 0,-1.61905 0.6667,-2 3.5,-2 2.8333,0 3.5,0.38095 3.5,2 0,1.61905 -0.6667,2 -3.5,2 -2.8333,0 -3.5,-0.38095 -3.5,-2 z m 24,0 c 0,-1.61905 0.6667,-2 3.5,-2 2.8333,0 3.5,0.38095 3.5,2 0,1.61905 -0.6667,2 -3.5,2 -2.8333,0 -3.5,-0.38095 -3.5,-2 z M 914,196 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,160 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,124 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.33333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 v -12 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.83333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.16667 -8,2 0,1.83333 0.66667,2 8,2 7.3333,0 8,-0.16667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z M 914,88 V 76 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.833333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.166667 -8,2 0,1.833333 0.66667,2 8,2 7.33333,0 8,-0.166667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 V 76 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.833333 -0.66667,-2 -8,-2 -7.33333,0 -8,0.166667 -8,2 0,1.833333 0.66667,2 8,2 7.33333,0 8,-0.166667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z m 20,4 V 76 h 12 12 v 12 12 h -12 -12 z m 20,6 c 0,-1.833333 -0.6667,-2 -8,-2 -7.33333,0 -8,0.166667 -8,2 0,1.833333 0.66667,2 8,2 7.3333,0 8,-0.166667 8,-2 z m 0,-10 v -4 h -8 -8 v 4 4 h 8 8 z"  ,
+    };
+
+    private static int[] townColors = new int[]{
+            0xfff2ebe0,
+            0xffb3ddeb,
+            0xff98d2d0,
+            0xffc0b8b1,
+            0xff85acbe,
+            0xffafa68b,
+            0xff69b3af,
+            0xff679893,
+            0xff8c7982,
+            0xff549691,
+            0xff847079,
+            0xffb65649,
+            0xff52837e,
+            0xff66525d,
+            0xff434343,
+            0xff2b4247,
+            0xff360000,
+            0xff000000,
+    };
+
+    private static int[] skyColors = new int[]{
+            0xff38adc1,
+            0x88ffffff,
+    };
+    private static String[] skyPaths = new String[]{
+            "M0,0L1600,0L1600,1040L0,1040z",
+            "m412,660v-4h76,76v4,4h-76,-76zM1200,654c0,-2 0.7,-2 76,-2 75.3,0 76,0 76,2 0,2 -0.7,2 -76,2 -75.3,0 -76,-0 -76,-2zM904,638c0,-2 0.7,-2 56,-2 55.3,0 56,0 56,2 0,2 -0.7,2 -56,2 -55.3,0 -56,-0 -56,-2zM184,610c0,-2 0.7,-2 72,-2 71.3,0 72,0 72,2 0,2 -0.7,2 -72,2 -71.3,0 -72,-0 -72,-2zM852,578c0,-2 0.7,-2 67.9,-2h67.9l1.2,-7.4c2.1,-13.2 11,-27.4 20,-32.1 2.3,-1.2 2.8,-2.3 3.4,-6.6 2.2,-18.8 21.7,-31.8 39.8,-26.6 3,0.9 6.7,2.6 8.2,3.7 1.5,1.2 2.8,2 2.9,1.8 6.9,-11.6 16.3,-20.9 26.7,-26.3 29.2,-15.4 64.5,-6.4 82.9,21 5.1,7.6 10.1,20.7 10.1,26.5 0,1.6 0.8,3.6 1.8,4.4 14.6,12.2 19,18.9 22,33.3L1208.5,576h195.8c195.1,0 195.8,0 195.8,2 0,2 -0.7,2 -197.9,2h-197.9l-0.6,-6.7c-1.2,-12.7 -9.2,-25.4 -20.5,-32.3 -4.8,-3 -4.8,-3 -5.4,-9.3 -1.6,-16.9 -13.5,-34.7 -29,-43.5 -16.9,-9.6 -38.9,-9.9 -56.2,-0.9 -8,4.2 -20.1,16.4 -24.4,24.5l-3.3,6.3 -3.9,-3.5c-5.3,-4.8 -10.3,-6.7 -17.5,-6.8 -14.6,-0.1 -26.2,10.6 -26.8,24.7 -0.2,4.9 -0.3,5.1 -5.8,8.6 -9.8,6.4 -17.2,19.5 -18.6,33L991.7,580L921.9,580C852.7,580 852,580 852,578ZM0,522c0,-2 0.7,-2 127.3,-2l127.3,-0 1.6,-8.2c2.2,-11.5 6.1,-19.1 13.3,-26.3C279,475.9 289.3,472 305.1,472c7.8,0 8,-0.1 9,-2.8 6.4,-17.3 20.6,-30.7 36.8,-34.7 3.7,-0.9 7.3,-2 8,-2.3 0.7,-0.4 2.6,-4 4.3,-8 7.9,-19.7 22,-34.6 41.4,-43.7 12.9,-6.1 21.5,-7.9 36,-7.8 9.9,0.1 13.6,0.6 21,2.8 21.3,6.3 38.3,19.5 49.5,38.5 4.5,7.5 6.5,12.7 8.9,22.5l1.7,7 5.9,0.7c21.7,2.4 40.5,19.7 46.1,42.3 1.4,5.6 2.1,6.8 5.5,9 6.3,4.2 11.3,12.3 13.3,21.8l0.6,2.8h71.5C735.3,520 736,520 736,522c0,2 -0.7,2 -73.4,2h-73.4l-1,-2.8c-0.6,-1.5 -1.6,-4.6 -2.3,-6.8 -0.7,-2.2 -2.3,-5.7 -3.7,-7.7C579.9,503.2 573.4,498 571.3,498c-0.6,0 -1.5,-2.6 -2.1,-5.8 -4.2,-23.5 -21.6,-40.7 -43.7,-43.2 -7.9,-0.9 -9.5,-1.8 -9.5,-5.6 -0,-4.3 -4.3,-17.3 -8.3,-24.8 -7,-13.5 -22.8,-28.3 -36.4,-34.2 -9.9,-4.3 -16.1,-5.6 -28.4,-6.2 -10.7,-0.5 -13.8,-0.2 -21,1.6 -28.5,7.2 -48.2,26.5 -57.4,56.4 -0.4,1.2 -1.6,1.8 -4.1,1.8 -5,0 -14.8,3.5 -20.9,7.4 -9.9,6.4 -18.3,17.6 -21,28.4l-1.1,4.3 -11.5,0.3c-7.7,0.2 -13.3,0.9 -17,2.1 -16.2,5.3 -26.1,18.4 -28.4,37.8L259.9,524L129.9,524C0.7,524 0,524 0,522ZM1208,396v-4h16,16v4,4h-16,-16zM1280,396v-4h74,74v4,4h-74,-74z",
+    };
+
+    private static int[] sunColors = new int[]{
+            0xfffef9e8,
+            0xfff3e59c,
+    };
+    private static String[] sunPaths = new String[]{
+            "m109.1,226.62c-0.79,-0.95 -1.06,-6.89 -0.87,-19.14 0.24,-15.65 0.48,-17.89 2.02,-18.86 1.28,-0.8 2.22,-0.8 3.5,0 1.54,0.97 1.78,3.22 2.02,18.86C116.06,225.82 115.66,228 112,228c-0.97,0 -2.27,-0.62 -2.9,-1.38zM56.2,211.8c-0.66,-0.66 -1.2,-1.75 -1.2,-2.42 0,-0.67 3.91,-8 8.68,-16.3C71.62,179.3 72.61,178 75.16,178c5.4,0 4.68,3.34 -3.95,18.26 -4.35,7.52 -8.48,14.36 -9.18,15.2C60.5,213.3 57.85,213.45 56.2,211.8ZM165.97,211.47c-0.7,-0.84 -4.83,-7.68 -9.18,-15.2C148.16,181.34 147.43,178 152.84,178c2.56,0 3.55,1.3 11.48,15.08 4.78,8.3 8.68,15.63 8.68,16.3 0,3.33 -4.81,4.76 -7.03,2.08zM16.2,171.8c-1.65,-1.65 -1.5,-4.3 0.33,-5.83 0.84,-0.7 7.68,-4.83 15.2,-9.18C46.66,148.16 50,147.43 50,152.84c0,2.56 -1.3,3.55 -15.08,11.48C26.62,169.09 19.29,173 18.62,173 17.95,173 16.86,172.46 16.2,171.8ZM192.75,164.26C179.38,156.4 178,155.33 178,152.81c0,-5.44 3.35,-4.67 18.95,4.39 7.89,4.58 14.83,9.1 15.44,10.06 1.38,2.19 -0.25,5.15 -2.99,5.45 -1.04,0.12 -8.54,-3.69 -16.65,-8.46zM105.06,164.91C90.72,162.1 75.91,150.34 69.37,136.56 48.31,92.21 94.21,46.31 138.56,67.37c10.34,4.91 19.16,13.73 24.07,24.07 18.52,38.99 -15.04,81.81 -57.58,73.47zM125.2,156.89c12.02,-2.51 23.55,-11.32 29.53,-22.54 13.91,-26.1 -2.19,-58.49 -31.58,-63.53 -29.3,-5.02 -55.36,21.03 -50.33,50.33 4.23,24.68 27.93,40.85 52.38,35.74zM1.22,118.82C0.55,118.15 0,116.85 0,115.92c0,-3.57 2.26,-3.98 20.52,-3.7 15.65,0.24 17.89,0.48 18.86,2.02 0.8,1.28 0.8,2.22 -0,3.5 -0.97,1.54 -3.22,1.78 -19.02,2.02 -13.09,0.2 -18.25,-0.06 -19.14,-0.95zM189.22,118.82C188.55,118.15 188,116.85 188,115.92c0,-3.57 2.26,-3.98 20.52,-3.7 15.65,0.24 17.89,0.48 18.86,2.02 0.8,1.28 0.8,2.22 -0,3.5 -0.97,1.54 -3.22,1.78 -19.02,2.02 -13.09,0.2 -18.25,-0.06 -19.14,-0.95zM30.61,70.66c-7.64,-4.49 -14.39,-8.95 -14.99,-9.91 -1.28,-2.02 0.14,-5.06 2.59,-5.54 0.82,-0.16 8.31,3.63 16.64,8.43C48.51,71.51 50,72.63 50,75.08c0,2.57 -1.65,4.04 -4.33,3.84 -0.64,-0.05 -7.42,-3.76 -15.06,-8.25zM179.25,78.34C178.56,78.06 178,76.6 178,75.1c0,-2.48 1.44,-3.56 15.16,-11.46 8.34,-4.8 15.83,-8.59 16.64,-8.43 2.44,0.48 3.86,3.52 2.59,5.53 -1.22,1.93 -28.89,18.3 -30.73,18.18 -0.64,-0.04 -1.72,-0.31 -2.41,-0.58zM63.65,34.92C58.83,26.62 55.02,19.13 55.19,18.27c0.49,-2.51 3.51,-3.95 5.55,-2.66 0.96,0.6 5.48,7.55 10.06,15.44C79.85,46.65 80.63,50 75.19,50 72.66,50 71.62,48.63 63.65,34.92ZM149.46,47.69c-0.43,-1.71 1.57,-6.01 7.74,-16.65 4.58,-7.89 9.1,-14.83 10.06,-15.44 2.02,-1.27 5.05,0.15 5.53,2.59 0.16,0.82 -3.63,8.31 -8.43,16.64C156.39,48.7 155.39,50 152.84,50c-2.09,0 -2.95,-0.59 -3.38,-2.31zM109.1,38.62c-0.79,-0.95 -1.06,-6.89 -0.87,-19.14 0.24,-15.65 0.48,-17.89 2.02,-18.86 1.28,-0.8 2.22,-0.8 3.5,0 1.54,0.97 1.78,3.22 2.02,18.86C116.06,37.82 115.66,40 112,40c-0.97,0 -2.27,-0.62 -2.9,-1.38z",
+            "M105.5,156.61C83.66,151.3 69.02,129.01 72.82,106.85 76.91,83 99.57,66.78 123.15,70.82c23.85,4.09 40.07,26.75 36.03,50.33 -4.31,25.12 -29.03,41.45 -53.68,35.46z"
+    };
+
+    private PathsDrawable mDrawableSun;
+    private PathsDrawable mDrawableSky;
+    private PathsDrawable mDrawableTown;
+    private Matrix mMatrix;
+    private float mPercent;
+    private float mRotate;
+    private int mHeaderHeight;
+    private int mSunSize;
+    private boolean isRefreshing;
+    private Animation mAnimation;
+
+    public PhoenixHeader(Context context) {
+        this(context,null);
+    }
+
+    public PhoenixHeader(Context context, AttributeSet attrs) {
+        this(context, attrs,0);
+    }
+
+    public PhoenixHeader(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        mMatrix = new Matrix();
+        DensityUtil density = new DensityUtil();
+        mSunSize = density.dip2px(40);
+        setupAnimation();
+        setupPathsDrawable();
+
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.PhoenixHeader);
+
+        int primaryColor = ta.getColor(R.styleable.PhoenixHeader_srlPrimaryColor, 0);
+        int accentColor = ta.getColor(R.styleable.PhoenixHeader_srlAccentColor, 0);
+        if (primaryColor != 0) {
+            if (accentColor != 0) {
+                mDrawableSky.parserColors(primaryColor, accentColor);
+            } else {
+                mDrawableSky.parserColors(primaryColor);
+            }
+        }
+
+        ta.recycle();
+    }
+
+    private void setupAnimation() {
+        mAnimation = new Animation() {
+            @Override
+            public void applyTransformation(float interpolatedTime, Transformation t) {
+                mRotate = (interpolatedTime);
+                invalidate();
+            }
+        };
+        mAnimation.setRepeatCount(Animation.INFINITE);
+        mAnimation.setRepeatMode(Animation.RESTART);
+        mAnimation.setInterpolator(LINEAR_INTERPOLATOR);
+        mAnimation.setDuration(ANIMATION_DURATION);
+    }
+
+    private void setupPathsDrawable() {
+        int widthPixels = Resources.getSystem().getDisplayMetrics().widthPixels;
+        mDrawableTown = new PathsDrawable();
+        mDrawableTown.parserPaths(townPaths);
+        mDrawableTown.parserColors(townColors);
+        Rect bounds = mDrawableTown.getBounds();
+        mDrawableTown.setBounds(0, 0, widthPixels, widthPixels * bounds.height() / bounds.width());
+
+        mDrawableSky = new PathsDrawable();
+        mDrawableSky.parserPaths(skyPaths);
+        mDrawableSky.parserColors(skyColors);
+        bounds = mDrawableSky.getBounds();
+        mDrawableSky.setBounds(0, 0, widthPixels, widthPixels * bounds.height() / bounds.width());
+
+
+
+        mDrawableSun = new PathsDrawable();
+        mDrawableSun.parserPaths(sunPaths);
+        mDrawableSun.parserColors(sunColors);
+        mDrawableSun.setBounds(0, 0, mSunSize, mSunSize);
+    }
+
+    @Override
+    public void onPullingDown(int offset, int headHeight, int extendHeight) {
+        mRotate = mPercent = 1f * offset / headHeight;
+        mHeaderHeight = headHeight;
+    }
+
+    @Override
+    public void onReleasing(int offset, int headHeight, int extendHeight) {
+        mRotate = mPercent = 1f * offset / headHeight;
+        mHeaderHeight = headHeight;
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+        isRefreshing = true;
+        startAnimation(mAnimation);
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+
+    }
+
+    @Override
+    public void onFinish() {
+        isRefreshing = false;
+        clearAnimation();
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        if (mDrawableSky != null) {
+            if (colors.length > 1) {
+                mDrawableSky.parserColors(colors);
+            } else if (colors.length > 0) {
+                mDrawableSky.parserColors(colors[0], skyColors[1]);
+            }
+        }
+    }
+
+    @NonNull
+    @Override
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Scale;
+    }
+
+    @Override
+    public void onDraw(Canvas canvas) {
+        int width = getWidth();
+        int height = getHeight();
+        drawSky(canvas, width, height);
+        drawSun(canvas, width, height);
+        drawTown(canvas, width, height);
+    }
+
+
+    private void drawSky(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+
+        int bWidth = mDrawableSky.width();//mSky.getWidth();
+        int bHeight = mDrawableSky.height();//mSky.getHeight();
+        float townScale = 1f * width / bWidth;
+        float offsetx = 0;
+        float offsety = height / 2 - bHeight / 2;
+
+//        matrix.postScale(townScale, townScale);
+//        matrix.postTranslate(offsetx, offsety);
+//
+//        canvas.drawBitmap(mSky, matrix, null);
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetx, offsety);
+        matrix.postScale(townScale, townScale);
+        mDrawableSky.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    private void drawTown(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+
+        int bWidth = mDrawableTown.width();//mTown.getWidth();
+        int bHeight = mDrawableTown.height();//mTown.getHeight();
+        float townScale = 1f * width / bWidth;
+        float amplification = (0.7f * Math.max(mPercent - 1, 0) + 1);
+        float offsetx = width / 2 - (int) (width * amplification) / 2;
+        float offsety = mHeaderHeight * 0.1f * mPercent;
+        townScale = amplification * townScale;
+
+        if (offsety + bHeight * townScale < height) {
+            offsety = height - bHeight * townScale;
+        }
+
+//        matrix.postScale(townScale, townScale, mDrawableTown.width() / 2, mDrawableTown.height() / 2);
+//        matrix.postTranslate(offsetx, offsety);
+//        canvas.drawBitmap(mTown, matrix, null);
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetx, offsety);
+        canvas.scale(townScale, townScale);
+        mDrawableTown.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    private void drawSun(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+
+
+        float mSunLeftOffset = 0.3f * (float) width;
+        float mSunTopOffset = (mHeaderHeight * 0.1f);
+
+        float sunRadius = (float) mSunSize / 2.0f;
+        float offsetX = mSunLeftOffset + sunRadius;
+        float offsetY = mSunTopOffset + (mHeaderHeight / 2) * (1.0f - Math.min(mPercent, 1)); // Move the sun up
+
+        int bWidth = mDrawableSun.width();
+        float sunScale = 1f * mSunSize / bWidth;
+
+        if (mPercent > 1) {
+            sunScale = sunScale * (1.0f - 0.5f * (mPercent - 1));
+            sunRadius = sunRadius * (1.0f - 0.5f * (mPercent - 1));
+        }
+
+        matrix.preScale(sunScale, sunScale);
+        matrix.postRotate((isRefreshing ? -360 : 360) * mRotate * (isRefreshing ? 1 : SUN_INITIAL_ROTATE_GROWTH),
+                sunRadius,
+                sunRadius);
+
+//        canvas.save();
+//        canvas.translate(offsetX, offsetY);
+//        canvas.drawBitmap(mSun, matrix, null);
+//        canvas.restore();
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetX, offsetY);
+        canvas.concat(matrix);
+        mDrawableSun.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    @Override
+    public int defineHeight() {
+        return (int)(Resources.getSystem().getDisplayMetrics().widthPixels * 0.27);
+    }
+
+    @Override
+    public int defineExtendHeight() {
+        return (int) (defineHeight() * 0.8f);
+    }
+}
+
+
diff --git a/refresh-header/src/main/java/com/scwang/smartrefreshheader/TaurusHeader.java b/refresh-header/src/main/java/com/scwang/smartrefreshheader/TaurusHeader.java
new file mode 100644
index 0000000..36d626a
--- /dev/null
+++ b/refresh-header/src/main/java/com/scwang/smartrefreshheader/TaurusHeader.java
@@ -0,0 +1,599 @@
+package com.scwang.smartrefreshheader;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.support.annotation.NonNull;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.animation.AccelerateDecelerateInterpolator;
+import android.view.animation.Animation;
+import android.view.animation.Interpolator;
+import android.view.animation.Transformation;
+
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.api.SizeDefinition;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.internal.pathview.PathsDrawable;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Random;
+
+/**
+ *
+ * Created by SCWANG on 2017/5/31.
+ */
+
+public class TaurusHeader extends View implements RefreshHeader, SizeDefinition {
+
+    private static final float SCALE_START_PERCENT = 0.5f;
+    private static final int ANIMATION_DURATION = 1000;
+
+    private static final float SIDE_CLOUDS_INITIAL_SCALE = 1.05f;
+    private static final float SIDE_CLOUDS_FINAL_SCALE = 1.55f;
+
+    private static final float CENTER_CLOUDS_INITIAL_SCALE = 0.8f;
+    private static final float CENTER_CLOUDS_FINAL_SCALE = 1.30f;
+
+    private static final Interpolator ACCELERATE_DECELERATE_INTERPOLATOR = new AccelerateDecelerateInterpolator();
+
+    // Multiply with this animation interpolator time
+    private static final int LOADING_ANIMATION_COEFFICIENT = 80;
+    private static final int SLOW_DOWN_ANIMATION_COEFFICIENT = 6;
+    // Amount of lines when is going lading animation
+    private static final int WIND_SET_AMOUNT = 10;
+    private static final int Y_SIDE_CLOUDS_SLOW_DOWN_COF = 4;
+    private static final int X_SIDE_CLOUDS_SLOW_DOWN_COF = 2;
+    private static final int MIN_WIND_LINE_WIDTH = 50;
+    private static final int MAX_WIND_LINE_WIDTH = 300;
+    private static final int MIN_WIND_X_OFFSET = 1000;
+    private static final int MAX_WIND_X_OFFSET = 2000;
+    private static final int RANDOM_Y_COEFFICIENT = 5;
+
+    private PathsDrawable mAirplane;
+    private PathsDrawable mCloudCenter;
+    private PathsDrawable mCloudLeft;
+    private PathsDrawable mCloudRight;
+    private Matrix mMatrix;
+    private float mPercent;
+    private int mHeaderHeight;
+    private Animation mAnimation;
+
+    private boolean isRefreshing = false;
+    private float mLoadingAnimationTime;
+    private float mLastAnimationTime;
+
+    private Random mRandom;
+    private boolean mEndOfRefreshing;
+
+    //KEY: Y position, Value: X offset of wind
+    private Map<Float, Float> mWinds;
+    private Paint mWindPaint;
+    private float mWindLineWidth;
+    private boolean mNewWindSet;
+    private boolean mInverseDirection;
+
+    private enum AnimationPart {
+        FIRST,
+        SECOND,
+        THIRD,
+        FOURTH
+    }
+
+    public TaurusHeader(Context context) {
+        this(context,null);
+    }
+
+    public TaurusHeader(Context context, AttributeSet attrs) {
+        this(context, attrs,0);
+    }
+
+    public TaurusHeader(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        mMatrix = new Matrix();
+        mWinds = new HashMap<>();
+        mRandom = new Random();
+
+        mWindPaint = new Paint();
+        mWindPaint.setColor(0xffffffff);
+        mWindPaint.setStrokeWidth(DensityUtil.dp2px(3));
+        mWindPaint.setAlpha(50);
+
+        setupAnimations();
+        setupPathDrawable();
+
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.TaurusHeader);
+
+        int primaryColor = ta.getColor(R.styleable.TaurusHeader_srlPrimaryColor, 0);
+        if (primaryColor != 0) {
+            setBackgroundColor(primaryColor);
+        } else {
+            setBackgroundColor(0xff11bbff);
+        }
+
+        ta.recycle();
+    }
+
+    private void setupPathDrawable() {
+        DensityUtil density = new DensityUtil();
+
+        mAirplane = new PathsDrawable();
+        mAirplane.parserPaths("M60.68,16.15l-0.13,-0.11c-1.09,-0.76 -2.63,-1.16 -4.47,-1.16c-2.92,0 -5.95,0.99 -7.32,1.92l-10.76,7.35l-20.97,4.45c-0.18,0.04 -0.35,0.11 -0.51,0.22c-0.41,0.28 -0.64,0.76 -0.62,1.25c0.04,0.71 0.58,1.27 1.28,1.34l8.87,0.89l-8.65,5.9c-2.57,-1.18 -5.02,-2.33 -7.27,-3.4c-3.48,-1.67 -5.76,-1.96 -6.83,-0.89c-1.11,1.11 -0.39,3.02 0.01,3.6l8.33,10.8c0.28,0.41 0.6,0.64 0.99,0.71c0.64,0.11 1.2,-0.27 1.78,-0.68l2.11,-1.45l11.72,-5.69l-1.71,6.12c-0.19,0.68 0.14,1.38 0.78,1.68c0.18,0.08 0.39,0.13 0.59,0.13c0.29,0 0.57,-0.09 0.81,-0.25c0.16,-0.1 0.28,-0.23 0.38,-0.39l6.7,-10.19l4.1,-4.8L58.08,21.08c0.28,-0.19 0.55,-0.36 0.82,-0.54c0.63,-0.4 1.22,-0.78 1.65,-1.21C61.47,18.41 61.52,17.39 60.68,16.15z");
+//        mAirplane.parserPaths("M606.8,161.5l-01.3,-01.1c-10.9,-07.6 -26.3,-11.6 -44.7,-11.6c-29.2,00 -59.5,09.9 -73.2,19.2l-107.6,73.5l-209.7,44.5c-01.8,00.4 -03.5,01.1 -05.1,02.2c-04.1,02.8 -06.4,07.6 -06.2,12.5c00.4,07.1 05.8,12.7 12.8,13.4l88.7,08.9l-86.5,59c-25.7,-11.8 -50.2,-23.3 -72.7,-34c-34.8,-16.7 -57.6,-19.6 -68.3,-08.9c-11.1,11.1 -03.9,30.2 00.1,36.l83.3,108c02.8,04.1 06,06.4 09.9,07.1c06.4,01.1 12,-02.7 17.8,-06.8l21.1,-14.5l117.2,-56.9l-17.1,61.2c-01.9,06.8 01.4,13.8 07.8,16.8c01.8,00.8 03.9,01.3 05.9,01.3c02.9,0 05.7,-0.9 08.1,-02.5c01.6,-01 02.8,-02.3 03.8,-03.9l67,-101.9l41,-48L580.8,210.8c02.8,-01.9 05.5,-03.6 08.2,-05.4c06.3,-04 12.2,-07.8 16.5,-12.1C614.7,184.1 615.2,173.9 606.8,161.5z");
+        mAirplane.setBounds(0, 0, density.dip2px(60), density.dip2px(20));
+        mAirplane.parserColors(0xffffffff);
+
+        mCloudCenter = new PathsDrawable();
+        mCloudCenter.parserPaths(
+                "m36.46,120.94c-0.84,-1.36 -0.8,-1.38 4.42,-3.04 3.97,-1.26 4.56,-1.88 6.32,-6.64 2.75,-7.43 7.21,-10.67 14.76,-10.71 4.7,-0.03 6.44,0.48 9.89,2.87 3.66,2.54 4.51,2.75 6.75,1.73 2.37,-1.08 2.51,-1.49 1.81,-5.4C77.88,85.55 81.74,70.29 90.63,59.32 93.86,55.33 107.67,46 110.34,46c0.7,0 1.69,-0.42 2.21,-0.94 0.52,-0.52 5.38,-1.69 10.8,-2.62 8.39,-1.43 10.76,-1.49 16,-0.41 6.62,1.36 16.14,5.6 20.7,9.22 1.56,1.24 3.98,3.05 5.38,4.03 1.4,0.98 4.37,4.47 6.6,7.75 3.68,5.41 4.38,5.96 7.62,5.96 8.36,0 21.74,4.99 28.86,10.77 9.32,7.56 15.73,19.5 17.04,31.72l0.71,6.67 5.13,-0.7c3.1,-0.42 6.22,-1.62 7.91,-3.04 2.65,-2.23 8.44,-4.4 11.77,-4.41 0.85,-0 3.07,-1.57 4.91,-3.47 3.63,-3.75 9.51,-6.85 14.94,-7.89 5.78,-1.11 14.74,2.06 19.94,7.04 4.05,3.88 5,4.32 9.36,4.32 6.01,0 10.8,1.92 13.58,5.46 3.79,4.82 5.6,3.15 6.45,-5.97 1.26,-13.52 5.75,-24.35 13.61,-32.84 3.17,-3.42 14.26,-10.66 19.14,-12.5 6.17,-2.32 18.33,-4.19 23.24,-3.56 4.6,0.58 4.85,0.48 8.5,-3.6 3.52,-3.94 10.19,-9.14 14.76,-11.52 7.73,-4.02 12.16,-4.9 24.5,-4.9 11.41,0 13.11,0.25 19.5,2.84 3.85,1.56 8.8,4.13 11,5.71 2.2,1.58 5.44,3.81 7.21,4.95C464.29,55.74 473,67.58 473,69.41c0,0.25 0.54,1.73 1.19,3.27 0.66,1.55 1.67,4.84 2.25,7.32l1.06,4.5 6.5,0.61c15.65,1.47 26.87,9.07 34.22,23.16 1.5,2.88 2.74,6.26 2.75,7.51 0.03,3.05 2.3,3.75 7.35,2.26 4.27,-1.26 4.95,-1.6 10.18,-5.05 1.76,-1.16 4.69,-1.98 7.1,-1.99 2.9,-0 4.65,-0.62 6,-2.12 8.02,-8.91 20.9,-12.42 31.9,-8.71 2.71,0.91 3.72,0.54 10.5,-3.91 6.65,-4.37 10.27,-6.47 16.22,-9.39 5.02,-2.47 19.26,-5.09 26.78,-4.93 19.7,0.42 40.17,13.14 50.42,31.33 1.87,3.32 3.17,6.64 2.89,7.37 -0.43,1.11 -55.35,1.34 -326.85,1.35 -230.4,0.01 -326.53,-0.3 -327,-1.06z",
+                "m4,120.62c0,-1.4 2.96,-3.72 8.5,-6.66 4.6,-2.44 13.88,-4.3 18.45,-3.69C35.43,110.87 38,109.31 38,105.99 38,103.31 42.82,92.39 46.8,86.06 54.24,74.23 67.4,63.11 80,58.03c9.62,-3.88 10.06,-4.03 11.8,-4.04 1.83,-0.01 3.99,-1.03 11.45,-5.4 2.61,-1.53 4.75,-2.57 4.75,-2.3 0,0.26 -3.12,2.34 -6.94,4.6 -9.84,5.84 -16.11,14.19 -19.66,26.15 -1.61,5.42 -2.09,16.49 -0.98,22.69 0.7,3.91 0.56,4.32 -1.81,5.4 -2.24,1.02 -3.09,0.8 -6.75,-1.73 -3.45,-2.39 -5.2,-2.89 -9.89,-2.87 -7.56,0.04 -12.02,3.28 -14.75,10.71 -1.79,4.86 -2.28,5.36 -6.61,6.69 -3.09,0.95 -4.5,1.88 -4.17,2.75C36.84,121.74 33.66,122 20.47,122 7.1,122 4,121.74 4,120.62zM521.75,121.34c0.69,-0.28 1.81,-0.28 2.5,0 0.69,0.28 0.13,0.5 -1.25,0.5 -1.38,0 -1.94,-0.23 -1.25,-0.5zM690.26,120.22c0.2,-2.59 -5.61,-12.27 -10.85,-18.1C674.88,97.07 664.57,89.64 658,86.69 648.27,82.31 635.44,80.79 625.5,82.83c-7.47,1.54 -13.36,3.09 -15.28,4.04 -5.94,2.92 -9.56,5.02 -16.22,9.39 -6.78,4.45 -7.79,4.83 -10.5,3.91 -11.01,-3.71 -23.89,-0.2 -31.9,8.71 -1.35,1.5 -3.1,2.12 -6,2.12 -2.4,0 -5.34,0.82 -7.1,1.99 -5.22,3.45 -5.91,3.79 -10.18,5.05 -5.05,1.49 -7.32,0.79 -7.35,-2.26 -0.01,-1.25 -1.25,-4.63 -2.75,-7.51C510.88,94.18 499.65,86.58 484,85.11L477.51,84.5 476.45,80c-0.58,-2.47 -1.6,-5.77 -2.25,-7.32C473.54,71.14 473,69.66 473,69.41 473,67.58 464.29,55.74 461.71,54.07 459.94,52.92 456.7,50.69 454.5,49.11c-2.2,-1.58 -7.15,-4.15 -11,-5.71 -6.39,-2.59 -8.09,-2.84 -19.5,-2.84 -9.82,-0 -13.57,0.4 -17.5,1.88 -2.75,1.04 -5.43,2.26 -5.95,2.72C400.03,45.62 399.14,46 398.58,46c-1.73,0 2.66,-2.54 7.92,-4.57 7.69,-2.97 28.03,-2.79 35.19,0.32 2.85,1.24 6.05,2.25 7.1,2.25 1.05,0 3.85,1.46 6.21,3.25 2.36,1.79 5.12,3.86 6.13,4.61 1.64,1.21 2.4,0.85 7.09,-3.36C479.4,38.44 490.79,34 505.42,34c16.11,0 27.02,4.51 38.7,16 8.03,7.89 12.53,15.61 14.96,25.59 0.65,2.7 1.54,5.3 1.97,5.78 0.43,0.48 3.86,1.01 7.61,1.18 8.92,0.4 17.54,3.71 21.74,8.35 2.46,2.72 4.76,2.65 9.4,-0.28 3.53,-2.23 10.12,-5.39 14.69,-7.05 1.1,-0.4 4.27,-1.1 7.03,-1.56 2.77,-0.46 8.14,-2.26 11.95,-4 14.44,-6.61 25.43,-9.01 41.22,-9 16.9,0.02 27.5,2.81 41.87,11.03 12.45,7.12 17.54,10.94 25.65,19.26C747.9,105.12 758,118.99 758,120.97 758,121.66 746.77,122 724.06,122c-31.96,0 -33.93,-0.1 -33.8,-1.78zM225.54,111.48C224.23,99.27 217.82,87.33 208.5,79.77 201.39,73.99 188.01,69 179.64,69c-3.24,0 -3.94,-0.55 -7.62,-5.96 -2.23,-3.28 -5.2,-6.77 -6.6,-7.75 -1.4,-0.98 -3.82,-2.8 -5.38,-4.03 -4.37,-3.47 -13.92,-7.79 -20.55,-9.3 -4.17,-0.95 -5.27,-1.48 -3.6,-1.75 4.88,-0.79 17.73,4.12 24.7,9.43 1.7,1.3 3.44,2.36 3.85,2.36 0.42,0 2.99,-2.01 5.72,-4.46 9.97,-8.97 18.68,-12.16 36.07,-13.22C220.15,33.47 232.5,38.5 243.5,49.5c7.38,7.38 11.09,13.73 14.54,24.88l1.96,6.36 6.16,0.7c12.22,1.38 26.69,11.41 31.86,22.1 1.71,3.52 2.69,4.46 4.67,4.46 3.34,0 8.53,2.54 11.36,5.56 3.05,3.25 3.95,3.08 3.95,-0.72 0,-6.77 2.35,-16.64 5.6,-23.5 3.53,-7.46 12.02,-17.76 15.55,-18.88 1.12,-0.36 3.97,-1.95 6.34,-3.55C347.85,65.31 350.42,64 351.2,64c0.77,0 1.84,-0.44 2.38,-0.98 1.82,-1.82 16.61,-4.28 21.93,-3.65 4.98,0.58 5.22,0.49 9.05,-3.48 2.17,-2.24 5.96,-5.41 8.44,-7.03 2.47,-1.62 3.15,-1.92 1.5,-0.66 -1.65,1.26 -5.42,4.69 -8.39,7.62 -5.27,5.21 -5.49,5.31 -10,4.74 -4.79,-0.61 -17.03,1.29 -23.11,3.58 -4.88,1.84 -15.98,9.08 -19.14,12.5 -7.86,8.49 -12.35,19.32 -13.61,32.84 -0.85,9.12 -2.66,10.8 -6.45,5.97C311.01,111.92 306.22,110 300.21,110c-4.36,0 -5.31,-0.44 -9.36,-4.32 -10.08,-9.66 -25.05,-9.29 -34.88,0.85 -1.85,1.91 -4.06,3.47 -4.91,3.47 -3.33,0.01 -9.12,2.18 -11.77,4.41 -1.68,1.41 -4.81,2.61 -7.91,3.04l-5.13,0.7 -0.71,-6.67zM111.31,44.4c1.54,-0.84 3.57,-1.32 4.5,-1.08 1.24,0.33 1.1,0.48 -0.5,0.56C114.1,43.95 112.84,44.45 112.5,45c-0.34,0.55 -1.38,0.98 -2.31,0.96 -1.13,-0.03 -0.76,-0.54 1.12,-1.56zM120,42c1.38,-0.44 4.07,-0.79 6,-0.79l3.5,0.02 -4,0.83c-2.2,0.46 -4.9,0.81 -6,0.79C117.88,42.81 117.98,42.65 120,42z",
+                "m3.07,120.82c-0.09,-2.07 10.35,-9.73 11.58,-8.5 0.19,0.19 -0.89,0.98 -2.4,1.74 -4.18,2.12 -7.67,4.92 -8.43,6.78 -0.63,1.55 -0.68,1.55 -0.75,-0.01zM757.24,119.24c-1.17,-2.49 -1.14,-2.57 0.37,-1.07 0.9,0.9 1.46,2.11 1.26,2.69 -0.2,0.59 -0.93,-0.15 -1.63,-1.63zM314.05,113.56C311.22,110.54 306.03,108 302.69,108c-1.98,0 -2.96,-0.94 -4.67,-4.46 -5.17,-10.69 -19.63,-20.72 -31.86,-22.1l-6.16,-0.7 -1.96,-6.36C254.59,63.23 250.88,56.88 243.5,49.5 232.5,38.5 220.15,33.47 206.23,34.32 188.84,35.38 180.14,38.58 170.16,47.54 167.44,49.99 164.86,52 164.45,52 164.03,52 162.3,50.94 160.59,49.64 154.25,44.81 142.64,40.06 137,39.99l-2.5,-0.03 2.5,-1.93c12.7,-9.82 33.54,-12.11 48.87,-5.38 5.4,2.37 9.7,2.96 11.7,1.59 0.59,-0.4 2.35,-3.09 3.9,-5.97 3.36,-6.23 10.3,-13.77 16.52,-17.96 5.57,-3.74 13.55,-7.31 16.38,-7.32 1.17,-0 3.41,-0.68 4.99,-1.5C242.41,-0.1 254,-0.6 254,0.86c0,0.47 2.47,1.36 5.49,1.96 14.09,2.83 27.59,13.62 34.34,27.46 2.2,4.52 4.3,10.1 4.66,12.4 0.81,5.19 1.53,5.77 9,7.36 8.81,1.88 17.64,6.49 23.41,12.24C333.71,65.08 336,67.72 336,68.18 336,68.63 336.67,69 337.5,69c0.82,0 1.5,0.13 1.5,0.29 0,0.16 -2.65,3.02 -5.89,6.35C324.01,85 318,99.8 318,112.83c0,3.81 -0.9,3.97 -3.95,0.72zM751.67,110.69C744.68,100.17 732.18,88.77 720.75,82.51c-6.92,-3.79 -8.89,-5.4 -4,-3.27 11.86,5.16 30.84,22.17 37.56,33.67 2.92,5 1.19,3.54 -2.64,-2.22zM20,110.46c2.47,-0.83 6.87,-1.43 9.78,-1.32 5.54,0.21 6.72,-0.37 7.51,-3.65 0.48,-2 0.48,-2 0.58,0 0.2,3.89 -1.36,4.79 -8.52,4.95 -3.77,0.08 -8.42,0.46 -10.35,0.84 -2.73,0.54 -2.51,0.36 1,-0.83zM38.03,102.5c0,-0.55 0.44,-1.67 0.97,-2.5 0.53,-0.82 0.97,-1.05 0.97,-0.5 0,0.55 -0.44,1.67 -0.97,2.5 -0.53,0.82 -0.97,1.05 -0.97,0.5zM40.07,97.5c0,-0.55 0.64,-2.13 1.43,-3.5 0.79,-1.38 1.43,-2.05 1.43,-1.5 0,0.55 -0.64,2.13 -1.43,3.5 -0.79,1.38 -1.43,2.05 -1.43,1.5zM590.41,90.9c-4.2,-4.64 -12.82,-7.95 -21.74,-8.35 -3.76,-0.17 -7.18,-0.7 -7.61,-1.18 -0.43,-0.48 -1.32,-3.08 -1.97,-5.78C556.66,65.61 552.15,57.89 544.13,50 532.44,38.51 521.54,34 505.42,34c-14.63,0 -26.02,4.44 -37.21,14.5 -5.81,5.22 -4.86,5.29 -12.62,-0.87 -1.99,-1.58 -5.08,-3.22 -6.86,-3.65 -1.93,-0.46 -2.42,-0.81 -1.21,-0.87 1.11,-0.06 4.65,-2.58 7.85,-5.61 10.46,-9.89 25.44,-15.27 39.67,-14.25l7.02,0.5 4.71,-4.19C515.1,12.16 522.95,7.62 533,4.38c8.31,-2.68 28.27,-2.4 37,0.52 7.83,2.62 17.8,8.4 24.2,14.04C598.77,22.97 608,35.64 608,37.88c0,2.25 3.77,1.02 9.07,-2.96 5.4,-4.05 8.34,-5.57 16.93,-8.74 6.52,-2.4 28.63,-2.34 35.38,0.11 10.72,3.88 16.24,7.31 23.75,14.76 7.8,7.74 14.02,18.18 15.51,26.03 0.36,1.88 1.45,5.11 2.43,7.2l1.79,3.79 -3.37,-2.08c-6.26,-3.87 -21.69,-6.96 -34.78,-6.98 -15.79,-0.02 -26.77,2.38 -41.22,9 -3.8,1.74 -9.18,3.54 -11.95,4 -2.77,0.46 -5.93,1.16 -7.03,1.56 -4.57,1.66 -11.17,4.83 -14.69,7.05 -4.64,2.93 -6.94,3 -9.4,0.28zM44.47,88.06c0.84,-1.62 1.97,-3.22 2.53,-3.56 0.55,-0.34 0.06,0.98 -1.09,2.94 -2.53,4.29 -3.56,4.74 -1.44,0.62zM49.73,80.5C54.68,73.47 72.16,59 75.7,59 76.14,59 73.13,61.17 69,63.82 64.88,66.46 58.38,71.98 54.56,76.07 50.74,80.15 48.57,82.15 49.73,80.5zM340.08,69.72C340.31,69.56 341.4,68.77 342.5,67.97c1.85,-1.36 1.9,-1.34 0.63,0.28 -0.75,0.96 -1.84,1.75 -2.42,1.75 -0.57,0 -0.86,-0.13 -0.63,-0.28zM351,63.61c0,-0.22 0.7,-0.66 1.55,-0.99 0.89,-0.34 1.29,-0.17 0.94,0.39C352.91,63.96 351,64.42 351,63.61zM363.75,59.34c0.69,-0.28 1.81,-0.28 2.5,0 0.69,0.28 0.13,0.5 -1.25,0.5 -1.38,0 -1.94,-0.23 -1.25,-0.5zM378.5,59.29c1.1,-0.26 4.25,-2.57 7,-5.13l5,-4.66 -4.96,5.25c-3.06,3.23 -5.75,5.21 -7,5.13 -2.01,-0.11 -2.01,-0.12 -0.04,-0.59zM78.56,57.53C79.63,56.72 81.18,56.07 82,56.07c0.87,0 0.45,0.6 -1,1.43 -3.29,1.88 -4.91,1.9 -2.44,0.03zM85,55c0.82,-0.53 2.17,-0.97 3,-0.97 1.33,0 1.33,0.11 0,0.97 -0.82,0.53 -2.17,0.97 -3,0.97 -1.33,0 -1.33,-0.11 0,-0.97zM90.75,53.34c0.69,-0.28 1.81,-0.28 2.5,0 0.69,0.28 0.13,0.5 -1.25,0.5 -1.38,0 -1.94,-0.23 -1.25,-0.5zM95,52.61c0,-0.22 0.7,-0.66 1.55,-0.99 0.89,-0.34 1.29,-0.17 0.94,0.39C96.91,52.96 95,53.42 95,52.61zM391.76,48.79C392.94,47.37 401,42.57 401,43.29c0,0.23 -2.33,1.86 -5.18,3.64 -2.85,1.77 -4.68,2.61 -4.06,1.87zM105.44,46.56C106.51,45.7 107.82,45 108.36,45c1.27,0 0.7,0.46 -2.36,1.92 -2.36,1.12 -2.39,1.1 -0.56,-0.36zM114.75,42.34c0.69,-0.28 1.81,-0.28 2.5,0 0.69,0.28 0.13,0.5 -1.25,0.5 -1.38,0 -1.94,-0.23 -1.25,-0.5zM441,41.5c-1.38,-0.79 -2.05,-1.43 -1.5,-1.43 0.55,0 2.13,0.64 3.5,1.43 1.38,0.79 2.05,1.43 1.5,1.43 -0.55,0 -2.13,-0.64 -3.5,-1.43zM120.5,40.95c1.1,-0.44 4.7,-0.81 8,-0.8 7.54,0.01 6.14,0.54 -3,1.15 -4.07,0.27 -6.16,0.12 -5,-0.35zM406,41c0.82,-0.53 1.95,-0.97 2.5,-0.97 0.55,0 0.32,0.44 -0.5,0.97 -0.82,0.53 -1.95,0.97 -2.5,0.97 -0.55,0 -0.32,-0.44 0.5,-0.97zM412.27,39.4c0.33,-0.33 1.19,-0.37 1.92,-0.08 0.8,0.32 0.56,0.56 -0.6,0.6 -1.05,0.04 -1.64,-0.19 -1.31,-0.53zM432.75,39.34c0.69,-0.28 1.81,-0.28 2.5,0 0.69,0.28 0.13,0.5 -1.25,0.5 -1.38,0 -1.94,-0.23 -1.25,-0.5zM419.78,38.27c2.35,-0.21 5.95,-0.21 8,0.01 2.05,0.21 0.12,0.39 -4.28,0.38 -4.4,-0 -6.08,-0.18 -3.72,-0.39z"
+        );
+        mCloudCenter.parserColors(0xfffdfdfd,0xffe8f3fd,0xffc7dcf1);
+        mCloudCenter.setBounds(0, 0, density.dip2px(200), density.dip2px(32));
+
+        mCloudLeft = new PathsDrawable();
+        mCloudLeft.parserPaths(
+                "M0,91.57 L0,62.16 6.55,61.46c3.6,-0.39 8.15,-0.44 10.1,-0.13 3.3,0.54 4.04,0.12 10.7,-6.13 6.4,-6.01 9.84,-8.18 20.15,-12.72 4.06,-1.79 16.56,-2.58 24.5,-1.56 7.92,1.02 19.28,5.21 23.43,8.63 1.69,1.39 4.51,3.44 6.27,4.56C104.28,55.75 113,67.55 113,69.41c0,0.25 0.54,1.73 1.19,3.27 0.66,1.55 1.67,4.84 2.25,7.32l1.06,4.5 6.5,0.61c15.65,1.47 26.87,9.07 34.22,23.16 1.5,2.88 2.74,6.26 2.75,7.51 0.03,3.05 2.3,3.75 7.35,2.26 4.27,-1.26 4.95,-1.6 10.18,-5.05 1.76,-1.16 4.69,-1.98 7.1,-1.99 2.9,-0 4.65,-0.62 6,-2.12 8.02,-8.91 20.9,-12.42 31.9,-8.71 2.71,0.91 3.72,0.54 10.5,-3.91 6.65,-4.37 10.27,-6.47 16.22,-9.39 5.02,-2.47 19.26,-5.09 26.78,-4.93 19.73,0.42 40.16,13.14 50.44,31.38 1.89,3.35 3.21,6.44 2.94,6.88 -0.27,0.44 -74.72,0.79 -165.44,0.79L0,120.99 0,91.57z",
+                "M0.17,121.49C0.45,121.22 74.75,120.99 165.28,120.99c90.53,0 164.83,-0.36 165.1,-0.79 0.81,-1.31 -6.03,-12.59 -10.93,-18.04C314.88,97.07 304.59,89.65 298,86.69 288.27,82.31 275.44,80.79 265.5,82.83c-7.47,1.54 -13.36,3.09 -15.28,4.04 -5.94,2.92 -9.56,5.02 -16.22,9.39 -6.78,4.45 -7.79,4.83 -10.5,3.91 -11.01,-3.71 -23.89,-0.2 -31.9,8.71 -1.35,1.5 -3.1,2.12 -6,2.12 -2.4,0 -5.34,0.82 -7.1,1.99 -5.22,3.45 -5.91,3.79 -10.18,5.05 -5.05,1.49 -7.32,0.79 -7.35,-2.26 -0.01,-1.25 -1.25,-4.63 -2.75,-7.51C150.88,94.18 139.65,86.58 124,85.11L117.51,84.5 116.45,80c-0.58,-2.47 -1.6,-5.77 -2.25,-7.32C113.54,71.14 113,69.64 113,69.36 113,68.14 103.95,55 103.11,55 102.61,55 100.23,53.36 97.84,51.36 95.46,49.35 92.15,47.12 90.5,46.4 87.68,45.16 87.65,45.08 89.91,45.04c1.33,-0.02 4.83,1.79 7.79,4.02l5.38,4.06 5.2,-4.67C119.4,38.44 130.82,34 145.42,34c16.11,0 27.02,4.51 38.7,16 7.97,7.84 12.14,14.98 14.87,25.5 0.71,2.75 1.65,5.39 2.07,5.87 0.42,0.48 3.85,1.01 7.6,1.18 8.92,0.4 17.54,3.71 21.74,8.35 2,2.21 6.03,2.82 7.1,1.08 1.64,-2.66 16.04,-8.63 24.02,-9.96 2.77,-0.46 8.14,-2.27 11.95,-4.01 3.8,-1.74 8.74,-3.76 10.97,-4.5 22.95,-7.53 53.96,-5.48 67.69,4.47C354.43,79.64 356.74,81 357.29,81c2.34,0 17.76,11.42 23.86,17.68C387.86,105.55 397,118.25 397,120.69 397,121.77 361.75,122 198.33,122 89.07,122 -0.11,121.77 0.17,121.49zM4,60.82c1.92,-0.44 6.54,-0.71 10.25,-0.6l6.75,0.21 6.25,-5.96L33.5,48.52 27.44,54.81 21.38,61.1 10.94,61.37C3.96,61.54 1.66,61.36 4,60.82zM39,45.61c0,-0.22 0.7,-0.66 1.55,-0.99 0.89,-0.34 1.29,-0.17 0.94,0.39C40.91,45.96 39,46.42 39,45.61zM44,43.29c0.82,-0.31 2.4,-0.97 3.5,-1.48 1.97,-0.91 1.97,-0.9 0.06,0.64 -1.07,0.86 -2.64,1.52 -3.5,1.48C42.71,43.85 42.7,43.77 44,43.29zM80,42.5C76.73,40.63 77.88,40.61 82.14,42.46 83.99,43.26 84.82,43.92 84,43.93 83.18,43.93 81.38,43.29 80,42.5zM54.24,40.31c0.96,-0.25 2.76,-0.26 4,-0.02C59.48,40.53 58.7,40.74 56.5,40.75c-2.2,0.01 -3.22,-0.18 -2.26,-0.43zM69.24,40.31c0.96,-0.25 2.76,-0.26 4,-0.02C74.48,40.53 73.7,40.74 71.5,40.75 69.3,40.76 68.28,40.56 69.24,40.31zM62.25,39.31c0.96,-0.25 2.54,-0.25 3.5,0 0.96,0.25 0.17,0.46 -1.75,0.46 -1.92,0 -2.71,-0.21 -1.75,-0.46z",
+                "m397,120.69c0,-2.43 -9.14,-15.13 -15.85,-22.01C375.05,92.42 359.63,81 357.29,81c-0.54,0 -2.86,-1.36 -5.15,-3.02 -13.73,-9.95 -44.74,-11.99 -67.69,-4.47 -2.23,0.73 -7.16,2.75 -10.97,4.5 -3.8,1.74 -9.18,3.55 -11.95,4.01 -7.99,1.34 -22.38,7.31 -24.02,9.96 -1.07,1.74 -5.11,1.12 -7.1,-1.08 -4.2,-4.64 -12.82,-7.95 -21.74,-8.35 -3.76,-0.17 -7.18,-0.7 -7.6,-1.18C200.64,80.89 199.71,78.25 199,75.5 196.26,64.98 192.1,57.84 184.13,50 172.44,38.51 161.54,34 145.42,34c-14.61,0 -26.02,4.44 -37.15,14.45l-5.2,4.67 -5.38,-4.06C94.74,46.83 91.38,45 90.24,45 89.1,45 86.13,44.13 83.64,43.06 81.16,42 75.72,40.65 71.56,40.07 55.04,37.77 39.14,42.9 27.18,54.38L20.86,60.45 14.65,60.17C11.24,60.02 6.52,60.32 4.17,60.85 1.04,61.55 -0,61.5 0.28,60.67 0.82,59.03 8.6,57.81 14.82,58.38l5.32,0.49 7.18,-6.6c8.34,-7.66 15.84,-11.43 27.48,-13.79 9.17,-1.86 17.69,-1.08 28.03,2.55l5.65,1.98 3.01,-3.26C102.82,27.5 116.04,21.72 133.15,21.52c9.57,-0.11 9.68,-0.14 13.54,-3.62 8.35,-7.55 20.89,-14.17 29.39,-15.53 2.18,-0.35 4.2,-1.02 4.5,-1.5C181.33,-0.35 199.74,-0.22 200.5,1c0.34,0.55 1.43,1 2.43,1 3.68,0 14.77,4.19 21.21,8.01 7.41,4.4 17.07,13.64 20.87,19.96 5.24,8.72 4.84,8.55 10.5,4.47 13.73,-9.89 29.21,-13.9 44.58,-11.55 25.37,3.88 43.61,20.72 50.78,46.87 1.71,6.25 2.04,6.69 6.81,9.25 14.21,7.59 27.6,19.55 36.28,32.42C398.82,118.64 400.11,122 398,122c-0.55,0 -1,-0.59 -1,-1.31z"
+        );
+        mCloudLeft.parserColors(0x88ffffff,0x88e9f4ff,0x88c9def3);
+        mCloudLeft.setBounds(0, 0, density.dip2px(82), density.dip2px(25));
+
+        mCloudRight = new PathsDrawable();
+        mCloudRight.parserPaths(
+                "m37.4,124.25c0.41,-0.41 2.82,-1.45 5.36,-2.32 4.21,-1.43 4.76,-1.99 6.18,-6.41 1.08,-3.34 2.76,-5.8 5.41,-7.93 3.39,-2.72 4.59,-3.09 10.1,-3.07 5.32,0.01 6.81,0.44 9.99,2.87 3.22,2.46 4.08,2.7 6.2,1.73 2.22,-1.01 2.38,-1.49 1.66,-4.87 -2.54,-11.99 0.8,-27.72 8.13,-38.25 3.23,-4.64 5.91,-7.01 12.41,-10.96C107.4,52.27 111.75,50 112.51,50c0.76,0 1.62,-0.4 1.92,-0.88 0.3,-0.48 4.93,-1.67 10.3,-2.64 8.43,-1.52 10.64,-1.58 16.27,-0.49 7.15,1.39 16.57,5.62 21.2,9.51C163.82,56.88 165.55,58 166.04,58c1.36,0 4.85,3.95 8.62,9.75 3.19,4.92 3.67,5.25 7.48,5.25 10.84,0 23.55,5.67 32.06,14.3 7.22,7.31 11.57,16 13.18,26.33l1.23,7.88 4.88,-0.35c3.51,-0.25 5.87,-1.15 8.44,-3.21 2.02,-1.62 5.45,-3.15 7.93,-3.54 3.07,-0.49 5.38,-1.71 7.79,-4.12 10.09,-10.09 24.49,-10.35 35.31,-0.62 4.38,3.94 5.31,4.34 10,4.34 5.83,0 8.19,0.96 12.62,5.15 4.72,4.46 6.02,3.21 6.77,-6.57 1.34,-17.4 8.67,-30.07 22.51,-38.89 10.53,-6.71 18.12,-8.94 30.98,-9.1 7.34,-0.09 7.34,-0.09 12,-4.7 4.6,-4.55 9.48,-8.26 13.89,-10.59L404,48.12 404,86.56 404,125 220.33,125C119.32,125 37,124.66 37.4,124.25z",
+                "m6,124.12c0,-0.95 3.61,-3.56 8.5,-6.16 4.6,-2.44 13.88,-4.3 18.45,-3.69C37.43,114.87 40,113.31 40,109.99 40,107.31 44.82,96.39 48.8,90.06 56.24,78.23 69.4,67.11 82,62.03c9.62,-3.88 10.06,-4.03 11.8,-4.04 1.83,-0.01 3.99,-1.03 11.45,-5.4 2.61,-1.53 4.75,-2.55 4.75,-2.27 0,0.28 -3.49,2.57 -7.76,5.09 -6.32,3.73 -8.53,5.74 -11.94,10.83 -7.39,11.03 -10.54,26.01 -8,38 0.72,3.38 0.56,3.86 -1.66,4.87 -2.11,0.96 -2.98,0.72 -6.2,-1.73 -3.18,-2.43 -4.67,-2.86 -9.99,-2.87 -5.51,-0.01 -6.71,0.35 -10.1,3.07 -2.65,2.13 -4.33,4.6 -5.41,7.93 -1.42,4.42 -1.97,4.98 -6.18,6.41 -2.54,0.86 -4.95,1.9 -5.36,2.32C36.36,125.32 6,125.19 6,124.12zM228.56,120.74c-0.2,-0.68 -0.84,-4.37 -1.43,-8.19C224.38,94.46 210.35,79.25 192.03,74.51 188.83,73.68 184.38,73 182.14,73c-3.82,0 -4.29,-0.33 -7.48,-5.25 -3.76,-5.8 -7.26,-9.75 -8.62,-9.75 -0.49,0 -2.21,-1.11 -3.82,-2.47 -4.47,-3.76 -12.71,-7.58 -20.6,-9.54 -5.49,-1.37 -6.35,-1.79 -3.77,-1.88 6.69,-0.22 14.19,2.82 26.81,10.88 1.98,1.26 2.56,1.01 7.31,-3.26 10.12,-9.1 18.65,-12.27 36.01,-13.41 13.96,-0.91 26.99,4.44 38.02,15.62 6.85,6.94 10.7,13.65 14.04,24.44l1.96,6.36 6.25,0.7c12.38,1.38 25.83,10.69 31.85,22.04 1.8,3.4 2.98,4.52 4.75,4.52 3.19,0 8.42,2.59 11.21,5.56 3.05,3.25 3.95,3.08 3.95,-0.72 0,-6.77 2.35,-16.64 5.6,-23.5 3.53,-7.46 12.02,-17.76 15.55,-18.88 1.12,-0.36 3.97,-1.95 6.34,-3.55C349.85,69.31 352.42,68 353.2,68c0.77,0 1.84,-0.44 2.38,-0.98 1.82,-1.82 16.61,-4.28 21.93,-3.65 4.98,0.58 5.22,0.49 9.05,-3.48 2.17,-2.24 5.96,-5.41 8.44,-7.03 2.47,-1.62 3.16,-1.92 1.52,-0.66C394.88,53.47 391.17,56.75 388.29,59.5l-5.25,5 -7.27,0.09c-12.78,0.16 -20.39,2.4 -30.91,9.1 -13.84,8.82 -21.17,21.49 -22.51,38.89 -0.75,9.77 -2.05,11.03 -6.77,6.57C311.15,114.96 308.79,114 302.96,114c-4.69,0 -5.62,-0.4 -10,-4.34 -10.82,-9.73 -25.22,-9.47 -35.31,0.62 -2.41,2.41 -4.73,3.63 -7.79,4.12 -2.44,0.39 -5.91,1.92 -7.86,3.48 -3.93,3.14 -12.8,5.02 -13.44,2.86zM113.31,48.4c1.54,-0.84 3.57,-1.32 4.5,-1.08 1.24,0.33 1.1,0.48 -0.5,0.56C116.1,47.95 114.84,48.45 114.5,49c-0.34,0.55 -1.38,0.98 -2.31,0.96 -1.13,-0.03 -0.76,-0.54 1.12,-1.56zM400.08,49.72C400.31,49.56 401.4,48.77 402.5,47.97c1.85,-1.36 1.9,-1.34 0.63,0.28 -0.75,0.96 -1.84,1.75 -2.42,1.75 -0.57,0 -0.86,-0.13 -0.63,-0.28zM122,46c1.38,-0.44 3.85,-0.79 5.5,-0.78l3,0.02 -3,0.76c-1.65,0.42 -4.13,0.77 -5.5,0.78L119.5,46.8 122,46z",
+                "M6.46,121.53C13.91,115.16 25.71,111.19 32.91,112.63 36.08,113.27 39,111 39,107.91 39,105.13 44.08,94.29 48.36,87.91 58.39,73 77.93,59.12 92.53,56.55c2.19,-0.38 5.38,-1.45 7.09,-2.38 1.71,-0.92 5.49,-2.96 8.4,-4.52 6.96,-3.74 12.95,-5.5 21.47,-6.32 5.48,-0.52 7.85,-1.3 11,-3.59 13.44,-9.77 32.98,-11.31 48.69,-3.83 7.26,3.46 9.65,2.68 13.56,-4.42 4.58,-8.32 14.77,-17.86 23.59,-22.09C230.24,7.54 234.24,6 235.22,6 236.2,6 237,5.55 237,5c0,-1.28 23.66,-1.35 24.45,-0.08 0.31,0.51 2.03,1.23 3.81,1.6 5.78,1.2 16.09,7.67 22.31,13.97 6.57,6.66 12.72,17.8 13.91,25.2 0.83,5.12 1.45,5.63 9.02,7.29 8.83,1.95 17.19,6.68 24.29,13.75 6.37,6.35 7.59,7.08 8.72,5.24 1.06,-1.72 10.62,-6.16 17.48,-8.12C364.75,62.78 370.68,62 375.05,62c7.36,0 7.65,-0.09 11,-3.58 3.88,-4.02 16.78,-12.93 17.57,-12.13 0.28,0.28 -2.55,2.53 -6.3,4.99 -3.75,2.46 -8.59,6.32 -10.76,8.58 -3.84,4.01 -4.07,4.1 -9.05,3.51 -5.33,-0.63 -20.12,1.84 -21.93,3.65C355.04,67.56 353.97,68 353.2,68c-0.77,0 -3.34,1.31 -5.71,2.9 -2.37,1.6 -5.22,3.19 -6.34,3.55 -3.53,1.12 -12.02,11.42 -15.55,18.88C322.35,100.19 320,110.06 320,116.83c0,3.81 -0.9,3.97 -3.95,0.72C313.27,114.59 308.04,112 304.85,112c-1.77,0 -2.95,-1.12 -4.75,-4.52C294.08,96.14 280.63,86.83 268.25,85.44l-6.25,-0.7 -1.96,-6.36C256.7,67.59 252.85,60.87 246,53.94 234.96,42.76 221.94,37.4 207.98,38.31c-17.36,1.13 -25.89,4.31 -36.01,13.41 -4.75,4.27 -5.33,4.53 -7.31,3.26 -14.63,-9.34 -20.64,-11.41 -30.53,-10.52 -14.93,1.35 -19.34,2.77 -34.1,11.03C97.55,56.87 94.76,58 93.81,58 92.87,58 91.06,58.41 89.8,58.91 79.14,63.11 75.67,64.79 70,68.48 62.44,73.39 53.66,82.33 48.8,90.06 44.82,96.39 40,107.31 40,109.99c0,3.31 -2.57,4.87 -7.05,4.27 -7.52,-1.01 -19.65,2.95 -25.41,8.29 -1.45,1.34 -3.18,2.43 -3.83,2.41 -0.66,-0.02 0.59,-1.56 2.77,-3.43z"
+        );
+        mCloudRight.parserColors(0x88ffffff,0x88e9f4ff,0x88c9def3);
+        mCloudRight.setBounds(0, 0, density.dip2px(82), density.dip2px(25));
+
+    }
+
+    @Override
+    public void onPullingDown(int offset, int headHeight, int extendHeight) {
+        mEndOfRefreshing = false;
+        mPercent = 1f * offset / headHeight;
+        mHeaderHeight = headHeight;
+    }
+
+    @Override
+    public void onReleasing(int offset, int headHeight, int extendHeight) {
+        mPercent = 1f * offset / headHeight;
+        mHeaderHeight = headHeight;
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+        isRefreshing = true;
+        startAnimation(mAnimation);
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+    }
+
+    @Override
+    public void onFinish() {
+        isRefreshing = false;
+        mEndOfRefreshing = true;
+        clearAnimation();
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        setBackgroundColor(colors[0]);
+    }
+
+    @NonNull
+    @Override
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Scale;
+    }
+
+    @Override
+    public void onDraw(Canvas canvas) {
+        int width = getWidth();
+        int height = getHeight();
+        if (isRefreshing) {
+            // Set up new set of wind
+            while (mWinds.size() < WIND_SET_AMOUNT) {
+                float y = (float) (mHeaderHeight / (Math.random() * RANDOM_Y_COEFFICIENT));
+                float x = random(MIN_WIND_X_OFFSET, MAX_WIND_X_OFFSET);
+
+                // Magic with checking interval between winds
+                if (mWinds.size() > 1) {
+                    y = 0;
+                    while (y == 0) {
+                        float tmp = (float) (mHeaderHeight / (Math.random() * RANDOM_Y_COEFFICIENT));
+
+                        for (Map.Entry<Float, Float> wind : mWinds.entrySet()) {
+                            // We want that interval will be greater than fifth part of draggable distance
+                            if (Math.abs(wind.getKey() - tmp) > mHeaderHeight / RANDOM_Y_COEFFICIENT) {
+                                y = tmp;
+                            } else {
+                                y = 0;
+                                break;
+                            }
+                        }
+                    }
+                }
+
+                mWinds.put(y, x);
+                drawWind(canvas, y, x, width);
+            }
+
+            // Draw current set of wind
+            if (mWinds.size() >= WIND_SET_AMOUNT) {
+                for (Map.Entry<Float, Float> wind : mWinds.entrySet()) {
+                    drawWind(canvas, wind.getKey(), wind.getValue(), width);
+                }
+            }
+
+            // We should to create new set of winds
+            if (mInverseDirection && mNewWindSet) {
+                mWinds.clear();
+                mNewWindSet = false;
+                mWindLineWidth = random(MIN_WIND_LINE_WIDTH, MAX_WIND_LINE_WIDTH);
+            }
+
+            // needed for checking direction
+            mLastAnimationTime = mLoadingAnimationTime;
+        }
+        drawAirplane(canvas, width, height);
+        drawSideClouds(canvas, width, height);
+        drawCenterClouds(canvas, width, height);
+    }
+
+    /**
+     * Draw wind on loading animation
+     *
+     * @param canvas  - area where we will draw
+     * @param y       - y position fot one of lines
+     * @param xOffset - x offset for on of lines
+     */
+    private void drawWind(Canvas canvas, float y, float xOffset, int width) {
+        /* We should multiply current animation time with this coefficient for taking all screen width in time
+        Removing slowing of animation with dividing on {@LINK #SLOW_DOWN_ANIMATION_COEFFICIENT}
+        And we should don't forget about distance that should "fly" line that depend on screen of device and x offset
+        */
+        float cof = (width + xOffset) / (LOADING_ANIMATION_COEFFICIENT / SLOW_DOWN_ANIMATION_COEFFICIENT);
+        float time = mLoadingAnimationTime;
+
+        // HORRIBLE HACK FOR REVERS ANIMATION THAT SHOULD WORK LIKE RESTART ANIMATION
+        if (mLastAnimationTime - mLoadingAnimationTime > 0) {
+            mInverseDirection = true;
+            // take time from 0 to end of animation time
+            time = (LOADING_ANIMATION_COEFFICIENT / SLOW_DOWN_ANIMATION_COEFFICIENT) - mLoadingAnimationTime;
+        } else {
+            mNewWindSet = true;
+            mInverseDirection = false;
+        }
+
+        // Taking current x position of drawing wind
+        // For fully disappearing of line we should subtract wind line width
+        float x = (width - (time * cof)) + xOffset - mWindLineWidth;
+        float xEnd = x + mWindLineWidth;
+
+        canvas.drawLine(x, y, xEnd, y, mWindPaint);
+    }
+
+    private void drawSideClouds(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+
+        // Drag percent will newer get more then 1 here
+        float dragPercent = Math.min(1f, Math.abs(mPercent));
+
+        float scale;
+        float scalePercentDelta = dragPercent - SCALE_START_PERCENT;
+        if (scalePercentDelta > 0) {
+            float scalePercent = scalePercentDelta / (1.0f - SCALE_START_PERCENT);
+            scale = SIDE_CLOUDS_INITIAL_SCALE + (SIDE_CLOUDS_FINAL_SCALE - SIDE_CLOUDS_INITIAL_SCALE) * scalePercent;
+        } else {
+            scale = SIDE_CLOUDS_INITIAL_SCALE;
+        }
+
+        // Current y position of clouds
+        float dragYOffset = mHeaderHeight * (1.0f - dragPercent);
+
+        // Position where clouds fully visible on screen and we should drag them with content of listView
+        int cloudsVisiblePosition = mHeaderHeight / 2 - mCloudCenter.height() / 2;
+
+//        boolean needMoveCloudsWithContent = false;
+//        if (dragYOffset < cloudsVisiblePosition) {
+//            needMoveCloudsWithContent = true;
+//        }
+
+        float offsetRightX = width - mCloudRight.width();
+        float offsetRightY = (//needMoveCloudsWithContent
+                //? mHeaderHeight * dragPercent - mCloudRight.height() :
+                dragYOffset);
+
+        float offsetLeftX = 0;
+        float offsetLeftY = (//needMoveCloudsWithContent
+                //? mHeaderHeight * dragPercent - mCloudLeft.height() :
+                dragYOffset);
+
+        // Magic with animation on loading process
+        if (isRefreshing) {
+            if (checkCurrentAnimationPart(AnimationPart.FIRST)) {
+                offsetLeftY += getAnimationPartValue(AnimationPart.FIRST) / Y_SIDE_CLOUDS_SLOW_DOWN_COF;
+                offsetRightX -= getAnimationPartValue(AnimationPart.FIRST) / X_SIDE_CLOUDS_SLOW_DOWN_COF;
+            } else if (checkCurrentAnimationPart(AnimationPart.SECOND)) {
+                offsetLeftY += getAnimationPartValue(AnimationPart.SECOND) / Y_SIDE_CLOUDS_SLOW_DOWN_COF;
+                offsetRightX -= getAnimationPartValue(AnimationPart.SECOND) / X_SIDE_CLOUDS_SLOW_DOWN_COF;
+            } else if (checkCurrentAnimationPart(AnimationPart.THIRD)) {
+                offsetLeftY -= getAnimationPartValue(AnimationPart.THIRD) / Y_SIDE_CLOUDS_SLOW_DOWN_COF;
+                offsetRightX += getAnimationPartValue(AnimationPart.THIRD) / X_SIDE_CLOUDS_SLOW_DOWN_COF;
+            } else if (checkCurrentAnimationPart(AnimationPart.FOURTH)) {
+                offsetLeftY -= getAnimationPartValue(AnimationPart.FOURTH) / X_SIDE_CLOUDS_SLOW_DOWN_COF;
+                offsetRightX += getAnimationPartValue(AnimationPart.FOURTH) / Y_SIDE_CLOUDS_SLOW_DOWN_COF;
+            }
+        }
+
+        if (offsetLeftY + scale * mCloudLeft.height() < height) {
+            offsetLeftY = height - scale * mCloudLeft.height();
+        }
+        if (offsetRightY + scale * mCloudRight.height() < height) {
+            offsetRightY = height - scale * mCloudRight.height();
+        }
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetLeftX, offsetLeftY);
+        matrix.postScale(scale, scale, mCloudLeft.width() / 2, 0);
+        canvas.concat(matrix);
+        mCloudLeft.draw(canvas);
+        canvas.restoreToCount(saveCount);
+        canvas.save();
+        canvas.translate(offsetRightX, offsetRightY);
+        matrix.postScale(scale, scale, mCloudRight.width() / 2, 0);
+        canvas.concat(matrix);
+        mCloudRight.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    private void drawCenterClouds(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+        float dragPercent = Math.min(1f, Math.abs(mPercent));
+
+        float scale;
+        float overdragPercent = 0;
+        boolean overdrag = false;
+
+        if (mPercent > 1.0f) {
+            overdrag = true;
+            // Here we want know about how mach percent of over drag we done
+            overdragPercent = Math.abs(1.0f - mPercent);
+        }
+
+        float scalePercentDelta = dragPercent - SCALE_START_PERCENT;
+        if (scalePercentDelta > 0) {
+            float scalePercent = scalePercentDelta / (1.0f - SCALE_START_PERCENT);
+            scale = CENTER_CLOUDS_INITIAL_SCALE + (CENTER_CLOUDS_FINAL_SCALE - CENTER_CLOUDS_INITIAL_SCALE) * scalePercent;
+        } else {
+            scale = CENTER_CLOUDS_INITIAL_SCALE;
+        }
+
+        float parallaxPercent = 0;
+        boolean parallax = false;
+        // Current y position of clouds
+        float dragYOffset = mHeaderHeight * dragPercent;
+        // Position when should start parallax scrolling
+        int startParallaxHeight = mHeaderHeight - mCloudCenter.height()/2;
+
+        if (dragYOffset > startParallaxHeight) {
+            parallax = true;
+            parallaxPercent = dragYOffset - startParallaxHeight;
+        }
+
+        float offsetX = (width / 2) - mCloudCenter.width() / 2;
+        float offsetY = dragYOffset
+                - (parallax ? mCloudCenter.height()/2 + parallaxPercent : mCloudCenter.height()/2);
+
+        float sx = overdrag ? scale + overdragPercent / 4 : scale;
+        float sy = overdrag ? scale + overdragPercent / 2 : scale;
+
+        if (isRefreshing && !overdrag) {
+            if (checkCurrentAnimationPart(AnimationPart.FIRST)) {
+                sx = scale - (getAnimationPartValue(AnimationPart.FIRST) / LOADING_ANIMATION_COEFFICIENT) / 8;
+            } else if (checkCurrentAnimationPart(AnimationPart.SECOND)) {
+                sx = scale - (getAnimationPartValue(AnimationPart.SECOND) / LOADING_ANIMATION_COEFFICIENT) / 8;
+            } else if (checkCurrentAnimationPart(AnimationPart.THIRD)) {
+                sx = scale + (getAnimationPartValue(AnimationPart.THIRD) / LOADING_ANIMATION_COEFFICIENT) / 6;
+            } else if (checkCurrentAnimationPart(AnimationPart.FOURTH)) {
+                sx = scale + (getAnimationPartValue(AnimationPart.FOURTH) / LOADING_ANIMATION_COEFFICIENT) / 6;
+            }
+            sy = sx;
+        }
+
+
+        matrix.postScale(sx, sy, mCloudCenter.width() / 2, 0);
+
+        if (offsetY + sy * mCloudCenter.height() < height) {
+            offsetY = height - sy * mCloudCenter.height();
+        }
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetX, offsetY);
+        canvas.concat(matrix);
+        mCloudCenter.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    private void drawAirplane(Canvas canvas, int width, int height) {
+        Matrix matrix = mMatrix;
+        matrix.reset();
+
+        float dragPercent = mPercent;
+        float rotateAngle = 0;
+
+        if (isInEditMode()) {
+            dragPercent = 1;
+        }
+
+        // Check overdrag
+        if (dragPercent > 1.0f /*&& !mEndOfRefreshing*/) {
+            rotateAngle = (dragPercent % 1) * 20;
+            dragPercent = 1.0f;
+        }
+
+        float offsetX = ((width * dragPercent) / 2) - mAirplane.width() / 2;
+        float offsetY = mHeaderHeight * (1 - dragPercent/2) - mAirplane.height() / 2;
+
+        if (mEndOfRefreshing) {
+            offsetX = width/2 + width * (1-dragPercent) / 2 - mAirplane.width() / 2;
+            offsetY = mHeaderHeight / 2 * (dragPercent) - mAirplane.height() / 2;
+        }
+
+        if (isRefreshing) {
+            if (checkCurrentAnimationPart(AnimationPart.FIRST)) {
+                offsetY -= getAnimationPartValue(AnimationPart.FIRST);
+            } else if (checkCurrentAnimationPart(AnimationPart.SECOND)) {
+                offsetY -= getAnimationPartValue(AnimationPart.SECOND);
+            } else if (checkCurrentAnimationPart(AnimationPart.THIRD)) {
+                offsetY += getAnimationPartValue(AnimationPart.THIRD);
+            } else if (checkCurrentAnimationPart(AnimationPart.FOURTH)) {
+                offsetY += getAnimationPartValue(AnimationPart.FOURTH);
+            }
+        }
+
+        if (rotateAngle > 0) {
+            matrix.postRotate(rotateAngle,
+                    mAirplane.width() / 2,
+                    mAirplane.height() / 2);
+        }
+
+        final int saveCount = canvas.getSaveCount();
+        canvas.save();
+        canvas.translate(offsetX, offsetY);
+        canvas.concat(matrix);
+        mAirplane.draw(canvas);
+        canvas.restoreToCount(saveCount);
+    }
+
+    @Override
+    public int defineHeight() {
+        return (int)(Resources.getSystem().getDisplayMetrics().widthPixels * 0.3);
+    }
+
+    @Override
+    public int defineExtendHeight() {
+        return (int) (defineHeight() * 0.8f);
+    }
+
+    public float random(int min, int max) {
+
+        // nextInt is normally exclusive of the top value,
+        // so add 1 to make it inclusive
+        return mRandom.nextInt((max - min) + 1) + min;
+    }
+
+    /**
+     * We need a special value for different part of animation
+     *
+     * @param part - needed part
+     * @return - value for needed part
+     */
+    private float getAnimationPartValue(AnimationPart part) {
+        switch (part) {
+            case FIRST: {
+                return mLoadingAnimationTime;
+            }
+            case SECOND: {
+                return getAnimationTimePart(AnimationPart.FOURTH) - (mLoadingAnimationTime - getAnimationTimePart(AnimationPart.FOURTH));
+            }
+            case THIRD: {
+                return mLoadingAnimationTime - getAnimationTimePart(AnimationPart.SECOND);
+            }
+            case FOURTH: {
+                return getAnimationTimePart(AnimationPart.THIRD) - (mLoadingAnimationTime - getAnimationTimePart(AnimationPart.FOURTH));
+            }
+            default:
+                return 0;
+        }
+    }
+
+    /**
+     * On drawing we should check current part of animation
+     *
+     * @param part - needed part of animation
+     * @return - return true if current part
+     */
+    private boolean checkCurrentAnimationPart(AnimationPart part) {
+        switch (part) {
+            case FIRST: {
+                return mLoadingAnimationTime < getAnimationTimePart(AnimationPart.FOURTH);
+            }
+            case SECOND:
+            case THIRD: {
+                return mLoadingAnimationTime < getAnimationTimePart(part);
+            }
+            case FOURTH: {
+                return mLoadingAnimationTime > getAnimationTimePart(AnimationPart.THIRD);
+            }
+            default:
+                return false;
+        }
+    }
+
+    /**
+     * Get part of animation duration
+     *
+     * @param part - needed part of time
+     * @return - interval of time
+     */
+    private int getAnimationTimePart(AnimationPart part) {
+        switch (part) {
+            case SECOND: {
+                return LOADING_ANIMATION_COEFFICIENT / 2;
+            }
+            case THIRD: {
+                return getAnimationTimePart(AnimationPart.FOURTH) * 3;
+            }
+            case FOURTH: {
+                return LOADING_ANIMATION_COEFFICIENT / 4;
+            }
+            default:
+                return 0;
+        }
+    }
+    private void setupAnimations() {
+        mAnimation = new Animation() {
+            @Override
+            public void applyTransformation(float interpolatedTime, @NonNull Transformation t) {
+                setLoadingAnimationTime(interpolatedTime);
+            }
+        };
+        mAnimation.setRepeatCount(Animation.INFINITE);
+        mAnimation.setRepeatMode(Animation.REVERSE);
+        mAnimation.setInterpolator(ACCELERATE_DECELERATE_INTERPOLATOR);
+        mAnimation.setDuration(ANIMATION_DURATION);
+    }
+
+    private void setLoadingAnimationTime(float loadingAnimationTime) {
+        /**SLOW DOWN ANIMATION IN {@link #SLOW_DOWN_ANIMATION_COEFFICIENT} time */
+        mLoadingAnimationTime = LOADING_ANIMATION_COEFFICIENT * (loadingAnimationTime / SLOW_DOWN_ANIMATION_COEFFICIENT);
+        invalidate();
+    }
+}
diff --git a/refresh-header/src/main/res/values/attrs.xml b/refresh-header/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..3968d99
--- /dev/null
+++ b/refresh-header/src/main/res/values/attrs.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--<attr name="srlPrimaryColor" format="color"/>-->
+    <!--<attr name="srlAccentColor" format="color"/>-->
+
+    <declare-styleable name="PhoenixHeader">
+        <attr name="srlPrimaryColor"/>
+        <attr name="srlAccentColor"/>
+    </declare-styleable>
+
+    <declare-styleable name="TaurusHeader">
+        <attr name="srlPrimaryColor"/>
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
diff --git a/refresh-header/src/main/res/values/strings.xml b/refresh-header/src/main/res/values/strings.xml
new file mode 100644
index 0000000..b0b7747
--- /dev/null
+++ b/refresh-header/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">SmartRefreshHeader</string>
+</resources>
diff --git a/refresh-header/src/test/java/com/scwang/smartrefreshheader/ExampleUnitTest.java b/refresh-header/src/test/java/com/scwang/smartrefreshheader/ExampleUnitTest.java
new file mode 100644
index 0000000..a272c7d
--- /dev/null
+++ b/refresh-header/src/test/java/com/scwang/smartrefreshheader/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package com.scwang.smartrefreshheader;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/refresh-layout/.gitignore b/refresh-layout/.gitignore
new file mode 100644
index 0000000..796b96d
--- /dev/null
+++ b/refresh-layout/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/refresh-layout/build.gradle b/refresh-layout/build.gradle
new file mode 100644
index 0000000..f8508c0
--- /dev/null
+++ b/refresh-layout/build.gradle
@@ -0,0 +1,47 @@
+apply plugin: 'com.android.library'
+apply plugin: 'me.tatarka.retrolambda'
+apply plugin: 'maven'
+apply plugin: 'com.novoda.bintray-release'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "25.0.3"
+
+    defaultConfig {
+        minSdkVersion 12
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    testCompile 'junit:junit:4.12'
+}
+
+publish {
+    userOrg = 'scwang90'
+    groupId = 'com.scwang.refreshlayout'
+    artifactId = 'SmartRefreshLayout'
+    version = '1.0.0'
+    description = 'An intelligent refresh layout'
+    website = "https://github.com/scwang90/${rootProject.name}"
+}
\ No newline at end of file
diff --git a/refresh-layout/proguard-rules.pro b/refresh-layout/proguard-rules.pro
new file mode 100644
index 0000000..8fe066b
--- /dev/null
+++ b/refresh-layout/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in E:\Android\android-sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/refresh-layout/src/androidTest/java/com/scwang/smartrefreshlayout/ExampleInstrumentedTest.java b/refresh-layout/src/androidTest/java/com/scwang/smartrefreshlayout/ExampleInstrumentedTest.java
new file mode 100644
index 0000000..c6c85dd
--- /dev/null
+++ b/refresh-layout/src/androidTest/java/com/scwang/smartrefreshlayout/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package com.scwang.smartrefreshlayout;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.scwang.smartrefreshlayout.test", appContext.getPackageName());
+    }
+}
diff --git a/refresh-layout/src/main/AndroidManifest.xml b/refresh-layout/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..dbf297b
--- /dev/null
+++ b/refresh-layout/src/main/AndroidManifest.xml
@@ -0,0 +1,10 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+
+    package="com.scwang.smartrefreshlayout">
+
+    <application android:allowBackup="true" android:label="@string/app_name"
+        android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/refresh-layout/src/main/java/android/support/v4/view/PagerAdapterWrapper.java b/refresh-layout/src/main/java/android/support/v4/view/PagerAdapterWrapper.java
new file mode 100644
index 0000000..d82854d
--- /dev/null
+++ b/refresh-layout/src/main/java/android/support/v4/view/PagerAdapterWrapper.java
@@ -0,0 +1,130 @@
+package android.support.v4.view;
+
+import android.database.DataSetObserver;
+import android.os.Parcelable;
+import android.view.View;
+import android.view.ViewGroup;
+
+@SuppressWarnings("deprecation")
+public class PagerAdapterWrapper extends PagerAdapter {
+
+    protected PagerAdapter wrapped = null;
+
+    public PagerAdapterWrapper(PagerAdapter wrapped) {
+        this.wrapped = wrapped;
+    }
+
+    public void attachViewPager(ViewPager viewPager) {
+        viewPager.mAdapter = this;
+    }
+
+    @Override
+    protected void setViewPagerObserver(DataSetObserver observer) {
+        super.setViewPagerObserver(observer);
+    }
+
+    @Override
+    public int getCount() {
+        return wrapped.getCount();
+    }
+
+    @Override
+    public void startUpdate(ViewGroup container) {
+        wrapped.startUpdate(container);
+    }
+
+    @Override
+    public Object instantiateItem(ViewGroup container, int position) {
+        return wrapped.instantiateItem(container, position);
+    }
+
+    @Override
+    public void destroyItem(ViewGroup container, int position, Object object) {
+        wrapped.destroyItem(container, position, object);
+    }
+
+    @Override
+    public void setPrimaryItem(ViewGroup container, int position, Object object) {
+        wrapped.setPrimaryItem(container, position, object);
+    }
+
+    @Override
+    public void finishUpdate(ViewGroup container) {
+        wrapped.finishUpdate(container);
+    }
+
+    @Override
+    @Deprecated
+    public void startUpdate(View container) {
+        wrapped.startUpdate(container);
+    }
+
+    @Override
+    @Deprecated
+    public Object instantiateItem(View container, int position) {
+        return wrapped.instantiateItem(container, position);
+    }
+
+    @Override
+    @Deprecated
+    public void destroyItem(View container, int position, Object object) {
+        wrapped.destroyItem(container, position, object);
+    }
+
+    @Override
+    @Deprecated
+    public void setPrimaryItem(View container, int position, Object object) {
+        wrapped.setPrimaryItem(container, position, object);
+    }
+
+    @Override
+    @Deprecated
+    public void finishUpdate(View container) {
+        wrapped.finishUpdate(container);
+    }
+
+    @Override
+    public boolean isViewFromObject(View view, Object object) {
+        return wrapped.isViewFromObject(view, object);
+    }
+
+    @Override
+    public Parcelable saveState() {
+        return wrapped.saveState();
+    }
+
+    @Override
+    public void restoreState(Parcelable state, ClassLoader loader) {
+        wrapped.restoreState(state, loader);
+    }
+
+    @Override
+    public int getItemPosition(Object object) {
+        return wrapped.getItemPosition(object);
+    }
+
+    @Override
+    public void notifyDataSetChanged() {
+        wrapped.notifyDataSetChanged();
+    }
+
+    @Override
+    public void registerDataSetObserver(DataSetObserver observer) {
+        wrapped.registerDataSetObserver(observer);
+    }
+
+    @Override
+    public void unregisterDataSetObserver(DataSetObserver observer) {
+        wrapped.unregisterDataSetObserver(observer);
+    }
+
+    @Override
+    public CharSequence getPageTitle(int position) {
+        return wrapped.getPageTitle(position);
+    }
+
+    @Override
+    public float getPageWidth(int position) {
+        return wrapped.getPageWidth(position);
+    }
+}
\ No newline at end of file
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/SmartRefreshLayout.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/SmartRefreshLayout.java
new file mode 100644
index 0000000..5b0e3d9
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/SmartRefreshLayout.java
@@ -0,0 +1,1163 @@
+package com.scwang.smartrefreshlayout;
+
+import android.animation.Animator;
+import android.animation.Animator.AnimatorListener;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.ValueAnimator;
+import android.animation.ValueAnimator.AnimatorUpdateListener;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.NestedScrollingChild;
+import android.support.v4.view.NestedScrollingChildHelper;
+import android.support.v4.view.NestedScrollingParent;
+import android.support.v4.view.NestedScrollingParentHelper;
+import android.support.v4.view.ScrollingView;
+import android.support.v4.view.ViewCompat;
+import android.support.v4.view.ViewPager;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewConfiguration;
+import android.view.ViewGroup;
+import android.view.animation.DecelerateInterpolator;
+import android.view.animation.Interpolator;
+import android.webkit.WebView;
+import android.widget.AbsListView;
+import android.widget.ScrollView;
+
+import com.scwang.smartrefreshlayout.api.RefreshContent;
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.api.SizeDefinition;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.footer.ballpulse.BallPulseFooter;
+import com.scwang.smartrefreshlayout.header.bezier.BezierHeader;
+import com.scwang.smartrefreshlayout.impl.RefreshBottomWrapper;
+import com.scwang.smartrefreshlayout.impl.RefreshContentWrapper;
+import com.scwang.smartrefreshlayout.impl.RefreshHeaderWrapper;
+import com.scwang.smartrefreshlayout.listener.OnLoadmoreListener;
+import com.scwang.smartrefreshlayout.listener.OnMultiPurposeListener;
+import com.scwang.smartrefreshlayout.listener.OnRefreshListener;
+import com.scwang.smartrefreshlayout.listener.OnRefreshLoadmoreListener;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import static android.view.View.MeasureSpec.AT_MOST;
+import static android.view.View.MeasureSpec.EXACTLY;
+import static android.view.View.MeasureSpec.getSize;
+import static android.view.View.MeasureSpec.makeMeasureSpec;
+import static com.scwang.smartrefreshlayout.util.DensityUtil.dp2px;
+
+/**
+ * 智能刷新布局
+ * Intelligent Refreshlayout
+ * Created by SCWANG on 2017/5/26.
+ */
+@SuppressWarnings({"unused","WeakerAccess"})
+public class SmartRefreshLayout extends ViewGroup  implements NestedScrollingParent, NestedScrollingChild {
+
+    //<editor-fold desc="属性变量 property and variable">
+
+    protected RefreshState state = RefreshState.None;
+
+    //<editor-fold desc="滑动属性">
+    protected int mTouchSlop;
+    protected int mSpinner;
+    protected long mReboundDuration;
+    protected float mTouchX;
+    protected float mTouchY;
+    protected float mInitialMotionY;
+    protected float mDragRate = 1f;
+    //</editor-fold>
+
+    //<editor-fold desc="功能属性">
+    protected int[] mPrimaryColors;
+    protected boolean mEnableRefresh = true;
+    protected boolean mEnableLoadmore = true;
+    protected boolean mEnableTranslationContent = true;//是否启用内容视图拖动效果
+    protected boolean mDisableContentWhenRefresh = false;//是否开启在刷新时候禁止操作内容视图
+    //</editor-fold>
+
+    protected Interpolator mReboundInterpolator;
+
+    //<editor-fold desc="监听属性">
+    protected OnRefreshListener mRefreshListener;
+    protected OnLoadmoreListener mLoadmoreListener;
+    protected OnMultiPurposeListener mOnMultiPurposeListener;
+    //</editor-fold>
+
+    //<editor-fold desc="嵌套滚动">
+    protected float mTotalUnconsumed;
+    protected NestedScrollingParentHelper mNestedScrollingParentHelper;
+    protected NestedScrollingChildHelper mNestedScrollingChildHelper;
+    protected int[] mParentScrollConsumed = new int[2];
+    protected int[] mParentOffsetInWindow = new int[2];
+    protected boolean mNestedScrollInProgress;
+    //</editor-fold>
+
+    //<editor-fold desc="内部视图">
+    /**
+     * 下拉头部视图
+     */
+    protected RefreshHeader mRefreshHeader;
+    /**
+     * 显示内容视图
+     */
+    protected RefreshContent mRefreshContent;
+    /**
+     * 上拉底部视图
+     */
+    protected RefreshFooter mRefreshFooter;
+    /**
+     * 头部高度
+     */
+    protected int mHeaderHeight;
+    /**
+     * 底部高度
+     */
+    protected int mFooterHeight;
+    /**
+     * 扩展高度
+     */
+    protected int mExtendHeaderHeight;
+    /**
+     * 扩展高度
+     */
+    protected int mExtendFooterHeight;
+    //</editor-fold>
+
+    //</editor-fold>
+
+    //<editor-fold desc="构造方法 construction methods">
+    public SmartRefreshLayout(Context context) {
+        super(context);
+        this.init(context, null, 0);
+    }
+
+    public SmartRefreshLayout(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        this.init(context, attrs, 0);
+    }
+
+    public SmartRefreshLayout(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        this.init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        setClipToPadding(false);
+        mReboundInterpolator = new DecelerateInterpolator();
+        mTouchSlop = ViewConfiguration.get(getContext()).getScaledTouchSlop();
+
+        mNestedScrollingParentHelper = new NestedScrollingParentHelper(this);
+        mNestedScrollingChildHelper = new NestedScrollingChildHelper(this);
+        ViewCompat.setNestedScrollingEnabled(this,true);
+
+        DensityUtil density = new DensityUtil();
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.SmartRefreshLayout);
+
+        mHeaderHeight = ta.getDimensionPixelSize(R.styleable.SmartRefreshLayout_srlHeaderHeight, density.dip2px(100));
+        mFooterHeight = ta.getDimensionPixelSize(R.styleable.SmartRefreshLayout_srlFooterHeight, density.dip2px(60));
+        mExtendHeaderHeight = ta.getDimensionPixelSize(R.styleable.SmartRefreshLayout_srlHeaderExtendHeight, (int) (mHeaderHeight * 1.2f));
+        mExtendFooterHeight = ta.getDimensionPixelSize(R.styleable.SmartRefreshLayout_srlFooterExtendHeight, (int) (mFooterHeight * 1.2f));
+        mReboundDuration = ta.getInt(R.styleable.SmartRefreshLayout_srlReboundDuration, 300);
+        mEnableRefresh = ta.getBoolean(R.styleable.SmartRefreshLayout_srlEnableRefresh, true);
+        mEnableLoadmore = ta.getBoolean(R.styleable.SmartRefreshLayout_srlEnableLoadmore, true);
+
+        int primaryColor = ta.getColor(R.styleable.SmartRefreshLayout_srlPrimaryColor, 0);
+        int accentColor = ta.getColor(R.styleable.SmartRefreshLayout_srlAccentColor, 0);
+        if (primaryColor != 0 ) {
+            if (accentColor != 0) {
+                mPrimaryColors = new int[]{primaryColor, accentColor};
+            } else {
+                mPrimaryColors = new int[]{primaryColor};
+            }
+        }
+
+        ta.recycle();
+
+    }
+    //</editor-fold>
+
+    //<editor-fold desc="生命周期 life cycle">
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+        final int count = getChildCount();
+        if (count > 3) {
+            throw new RuntimeException("最多只支持3个子View，Most only support three sub view");
+        }
+
+        for (int i = 0; i < count; i++) {
+            View view = getChildAt(i);
+            if (mRefreshContent == null && ( view instanceof AbsListView
+                    || view instanceof WebView
+                    || view instanceof ScrollView
+                    || view instanceof ScrollingView
+                    || view instanceof NestedScrollingChild
+                    || view instanceof NestedScrollingParent
+                    || view instanceof ViewPager)) {
+                mRefreshContent = new RefreshContentWrapper(view);
+            } else if (view instanceof RefreshHeader && mRefreshHeader == null) {
+                mRefreshHeader = ((RefreshHeader) view);
+            } else if (view instanceof RefreshFooter && mRefreshFooter == null) {
+                mRefreshFooter = ((RefreshFooter) view);
+            } else if (count == 1 && mRefreshContent == null) {
+                mRefreshContent = new RefreshContentWrapper(view);
+            } else if (i == 0 && mRefreshHeader == null) {
+                mRefreshHeader = new RefreshHeaderWrapper(view);
+            } else if (count == 2 && mRefreshContent == null) {
+                mRefreshContent = new RefreshContentWrapper(view);
+            } else if (i == 2 && mRefreshFooter == null) {
+                mRefreshFooter = new RefreshBottomWrapper(view);
+            } else if (i == 1 && mRefreshContent == null) {
+                mRefreshContent = new RefreshContentWrapper(view);
+            }
+        }
+        if (mPrimaryColors != null && isInEditMode()) {
+            if (mRefreshHeader != null) {
+                mRefreshHeader.setPrimaryColors(mPrimaryColors);
+            }
+            if (mRefreshFooter != null) {
+                mRefreshFooter.setPrimaryColors(mPrimaryColors);
+            }
+        }
+    }
+
+    @Override
+    protected void onAttachedToWindow() {
+        super.onAttachedToWindow();
+        if (isInEditMode()) return;
+        if (mRefreshContent == null) {
+            for (int i = 0, len = getChildCount(); i < len; i++) {
+                View view = getChildAt(i);
+                if ((mRefreshHeader == null || view != mRefreshHeader.getView())&&
+                        (mRefreshFooter == null || view != mRefreshFooter.getView())) {
+                    mRefreshContent = new RefreshContentWrapper(view);
+                }
+            }
+            if (mRefreshContent == null) {
+                RefreshContentWrapper contentWrapper = new RefreshContentWrapper(getContext());
+                mRefreshContent = contentWrapper;
+                addView(contentWrapper.getView(), LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+            }
+        }
+        if (mRefreshHeader == null) {
+            mRefreshHeader = new BezierHeader(getContext());
+            if (mRefreshHeader.getView().getLayoutParams() instanceof MarginLayoutParams) {
+                addView(mRefreshHeader.getView());
+            } else if (mRefreshHeader.getSpinnerStyle() == SpinnerStyle.Translate) {
+                addView(mRefreshHeader.getView(), LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+            } else {
+                addView(mRefreshHeader.getView(), LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+            }
+        } else {
+            bringChildToFront(mRefreshHeader.getView());
+        }
+        if (mRefreshFooter == null) {
+            mRefreshFooter = new BallPulseFooter(getContext());
+            if (mRefreshFooter.getView().getLayoutParams() instanceof MarginLayoutParams) {
+                addView(mRefreshFooter.getView());
+            } else if (mRefreshFooter.getSpinnerStyle() == SpinnerStyle.Translate) {
+                addView(mRefreshFooter.getView(), LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+            } else {
+                addView(mRefreshFooter.getView(), LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+            }
+        } else {
+            bringChildToFront(mRefreshFooter.getView());
+        }
+
+        if (mRefreshListener == null) {
+            mRefreshListener = refresh -> postDelayed(refresh::resetStatus,2000);
+        }
+        if (mLoadmoreListener == null) {
+            mLoadmoreListener = refresh -> postDelayed(refresh::resetStatus,2000);
+        }
+        if (mPrimaryColors != null) {
+            if (mRefreshHeader != null) {
+                mRefreshHeader.setPrimaryColors(mPrimaryColors);
+            }
+            if (mRefreshFooter != null) {
+                mRefreshFooter.setPrimaryColors(mPrimaryColors);
+            }
+        }
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        int minimumHeight = 0;
+        final boolean isInEditMode = isInEditMode();
+
+        if (mRefreshHeader != null) {
+            final View headerView = mRefreshHeader.getView();
+            final LayoutParams lp = (LayoutParams) headerView.getLayoutParams();
+            final boolean isTensile = mRefreshHeader.getSpinnerStyle() == SpinnerStyle.Scale;
+            int heightSpec = heightMeasureSpec;
+            if(isTensile){
+                if (isInEditMode) {
+                    heightSpec = makeMeasureSpec(mHeaderHeight-lp.topMargin-lp.bottomMargin, EXACTLY);
+                } else {
+                    int height = lp.height - lp.topMargin - lp.bottomMargin;
+                    heightSpec = makeMeasureSpec(height < 0 ? 0 : height, EXACTLY);
+                }
+            } else if (lp.height == LayoutParams.WRAP_CONTENT) {
+                heightSpec = makeMeasureSpec(getSize(heightMeasureSpec)-lp.topMargin-lp.bottomMargin, AT_MOST);
+            } else if (lp.height == ViewGroup.LayoutParams.MATCH_PARENT){
+                heightSpec = makeMeasureSpec(mHeaderHeight-lp.topMargin-lp.bottomMargin, EXACTLY);
+            } else if (lp.height > 0) {
+                heightSpec = makeMeasureSpec(lp.height, EXACTLY);
+            }
+            final int widthSpec = getChildMeasureSpec(widthMeasureSpec, lp.leftMargin + lp.rightMargin, lp.width);
+            headerView.measure(widthSpec, heightSpec);
+            if (mRefreshHeader instanceof SizeDefinition) {
+                mHeaderHeight = ((SizeDefinition) mRefreshHeader).defineHeight();
+                mExtendHeaderHeight = ((SizeDefinition) mRefreshHeader).defineExtendHeight();
+            } else  if (!isTensile) {
+                mHeaderHeight = headerView.getMeasuredHeight() + lp.topMargin + lp.bottomMargin;
+                mExtendHeaderHeight = (int)(mHeaderHeight * 1.2f);
+            }
+            if (isInEditMode) {
+                minimumHeight += headerView.getMeasuredHeight();
+            }
+        }
+
+        if (mRefreshFooter != null) {
+            final View bottomView = mRefreshFooter.getView();
+            final LayoutParams lp = (LayoutParams) bottomView.getLayoutParams();
+            final boolean isTensile = mRefreshFooter.getSpinnerStyle() == SpinnerStyle.Scale;
+            int heightSpec = heightMeasureSpec;
+            if(isTensile){
+                if (isInEditMode) {
+                    heightSpec = makeMeasureSpec(mFooterHeight -lp.topMargin-lp.bottomMargin, EXACTLY);
+                } else {
+                    int height = lp.height - lp.topMargin - lp.bottomMargin;
+                    heightSpec = makeMeasureSpec(height < 0 ? 0 : height, EXACTLY);
+                }
+            } else if (lp.height == LayoutParams.WRAP_CONTENT) {
+                heightSpec = makeMeasureSpec(getSize(heightMeasureSpec)-lp.topMargin-lp.bottomMargin, AT_MOST);
+            } else if (lp.height == ViewGroup.LayoutParams.MATCH_PARENT){
+                heightSpec = makeMeasureSpec(mFooterHeight -lp.topMargin-lp.bottomMargin, EXACTLY);
+            } else if (lp.height > 0) {
+                heightSpec = makeMeasureSpec(lp.height, EXACTLY);
+            }
+            final int widthSpec = getChildMeasureSpec(widthMeasureSpec, lp.leftMargin + lp.rightMargin, lp.width);
+            bottomView.measure(widthSpec, heightSpec);
+            if (!isTensile) {
+                mFooterHeight = bottomView.getMeasuredHeight() + lp.topMargin + lp.bottomMargin;
+            }
+            if (mRefreshFooter instanceof SizeDefinition) {
+                mFooterHeight = ((SizeDefinition) mRefreshFooter).defineHeight();
+                mExtendFooterHeight = ((SizeDefinition) mRefreshFooter).defineExtendHeight();
+            } else  if (!isTensile) {
+                mFooterHeight = bottomView.getMeasuredHeight() + lp.topMargin + lp.bottomMargin;
+                mExtendFooterHeight = (int) (mFooterHeight * 1.2f);
+            }
+            if (isInEditMode) {
+                minimumHeight += bottomView.getMeasuredHeight();
+            }
+        }
+
+        if (mRefreshContent != null) {
+            final LayoutParams lp = (LayoutParams) mRefreshContent.getLayoutParams();
+            final int widthSpec = getChildMeasureSpec(widthMeasureSpec,
+                    getPaddingLeft() + getPaddingRight() +
+                            lp.leftMargin + lp.rightMargin, lp.width);
+            final int heightSpec = getChildMeasureSpec(heightMeasureSpec,
+                    getPaddingTop() + getPaddingBottom() +
+                            lp.topMargin + lp.bottomMargin +
+                            ((isInEditMode && mRefreshHeader != null) ? mHeaderHeight : 0) +
+                            ((isInEditMode && mRefreshFooter != null) ? mFooterHeight : 0), lp.height);
+            mRefreshContent.measure(widthSpec, heightSpec);
+            minimumHeight += mRefreshContent.getMeasuredHeight();
+        }
+
+        setMeasuredDimension(resolveSize(getSuggestedMinimumWidth(), widthMeasureSpec), resolveSize(minimumHeight, heightMeasureSpec));
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int l, int t, int r, int b) {
+        final int paddingLeft = getPaddingLeft();
+        final int paddingTop = getPaddingTop();
+        final int paddingBottom = getPaddingBottom();
+        final boolean isInEditMode = isInEditMode();
+
+        if (mRefreshContent != null) {
+            final LayoutParams lp = (LayoutParams) mRefreshContent.getLayoutParams();
+            int left = paddingLeft + lp.leftMargin;
+            int top = paddingTop + lp.topMargin;
+            int right = left + mRefreshContent.getMeasuredWidth();
+            int bottom = top + mRefreshContent.getMeasuredHeight();
+            if (isInEditMode && mRefreshHeader != null) {
+                top = top + mHeaderHeight;
+                bottom = bottom + mHeaderHeight;
+            }
+            mRefreshContent.layout(left, top, right, bottom);
+        }
+
+        if (mRefreshHeader != null) {
+            final View headerView = mRefreshHeader.getView();
+            final LayoutParams lp = (LayoutParams) headerView.getLayoutParams();
+            int left = lp.leftMargin;
+            int top = lp.topMargin - (isInEditMode?0:mHeaderHeight);
+            int right = left + headerView.getMeasuredWidth();
+            int bottom = top + headerView.getMeasuredHeight();
+            if (!isInEditMode
+                    && mRefreshHeader.getSpinnerStyle() == SpinnerStyle.Scale) {
+                top = lp.topMargin;
+                bottom = top + headerView.getMeasuredHeight();
+            }
+            headerView.layout(left, top, right, bottom);
+        }
+
+        if (mRefreshFooter != null) {
+            final View bottomView = mRefreshFooter.getView();
+            final LayoutParams lp = (LayoutParams) bottomView.getLayoutParams();
+            int left = lp.leftMargin;
+            int top = lp.topMargin + getMeasuredHeight() - (isInEditMode? mFooterHeight :0);
+            int right = left + bottomView.getMeasuredWidth();
+            int bottom = top + bottomView.getMeasuredHeight();
+            bottomView.layout(left, top, right, bottom);
+        }
+    }
+
+    //</editor-fold>
+
+    //<editor-fold desc="滑动判断 judgement of slide">
+    MotionEvent mEventDown = null;
+
+    @Override
+    public boolean dispatchTouchEvent(MotionEvent e) {
+        if (!isEnabled() || mNestedScrollInProgress
+                || (!mEnableRefresh && !mEnableLoadmore)
+                || state == RefreshState.Loading
+                || state == RefreshState.Refreshing ) {
+            return state == RefreshState.Refreshing && mDisableContentWhenRefresh || super.dispatchTouchEvent(e);
+        }
+        int action = e.getAction();
+        switch (action) {
+            case MotionEvent.ACTION_DOWN:
+                mTouchX = e.getX();
+                mTouchY = e.getY();
+                super.dispatchTouchEvent(e);
+                return true;
+
+            case MotionEvent.ACTION_MOVE:
+                final float dx = e.getX() - mTouchX;
+                final float dy = e.getY() - mTouchY;
+                if(state == RefreshState.None){
+                    if (Math.abs(dy) >= mTouchSlop && Math.abs(dx) < Math.abs(dy)) {//滑动允许最大角度为45度
+                        if (dy > 0 && mEnableRefresh && !mRefreshContent.canScrollUp()) {
+                            mInitialMotionY = dy + mTouchY - mTouchSlop;
+                            setStatePullDownRefresh();
+                            e.setAction(MotionEvent.ACTION_CANCEL);
+                            super.dispatchTouchEvent(e);
+                        } else if (dy < 0 && mEnableLoadmore && !mRefreshContent.canScrollDown()) {
+                            mInitialMotionY = dy + mTouchY + mTouchSlop;
+                            setStatePullUpLoad();
+                            e.setAction(MotionEvent.ACTION_CANCEL);
+                            super.dispatchTouchEvent(e);
+                        } else {
+                            return super.dispatchTouchEvent(e);
+                        }
+                    } else {
+                        return super.dispatchTouchEvent(e);
+                    }
+                }
+                final float spinner = dy + mTouchY - mInitialMotionY;
+                if (((state == RefreshState.PullDownRefresh || state == RefreshState.ReleaseRefresh) && spinner < 0)
+                    ||((state == RefreshState.PullUpLoad || state == RefreshState.ReleaseLoad) && spinner > 0)) {
+                    long time = System.currentTimeMillis();
+                    if (mEventDown == null) {
+                        mEventDown = MotionEvent.obtain(time, time, MotionEvent.ACTION_DOWN, mTouchX + dx, mInitialMotionY, 0);
+                        super.dispatchTouchEvent(mEventDown);
+                    }
+                    MotionEvent em = MotionEvent.obtain(time, time, MotionEvent.ACTION_MOVE, mTouchX + dx, mInitialMotionY + spinner, 0);
+                    super.dispatchTouchEvent(em);
+                    if (mSpinner != 0) {
+                        moveSpinnerInfinitely(0);
+                    }
+                    return true;
+                }
+                if (moveSpinnerInfinitely(spinner)) {
+                    return true;
+                }
+                break;
+            case MotionEvent.ACTION_UP:
+            case MotionEvent.ACTION_CANCEL:
+                final float y = e.getY();
+                if (mEventDown != null) {
+                    mEventDown = null;
+                    long time = System.currentTimeMillis();
+                    MotionEvent ec = MotionEvent.obtain(time, time, MotionEvent.ACTION_CANCEL, mTouchX, y, 0);
+                    super.dispatchTouchEvent(ec);
+                }
+                if (overSpinner(y - mTouchY)) {
+                    return true;
+                }
+                break;
+        }
+        return super.dispatchTouchEvent(e);
+    }
+
+    @Override
+    public void requestDisallowInterceptTouchEvent(boolean b) {
+        // if this is a List < L or another view that doesn't support nested
+        // scrolling, ignore this request so that the vertical scroll event
+        // isn't stolen
+        View target = mRefreshContent.getScrollableView();
+        if ((android.os.Build.VERSION.SDK_INT < 21 && mRefreshContent instanceof AbsListView)
+                || (target != null && !ViewCompat.isNestedScrollingEnabled(target))) {
+            // Nope.
+        } else {
+            super.requestDisallowInterceptTouchEvent(b);
+        }
+    }
+
+    //</editor-fold>
+
+    //<editor-fold desc="状态更改 state changes">
+
+    private void notifyStateChanged(RefreshState state) {
+        if (mRefreshFooter != null) {
+            mRefreshFooter.onStateChanged(state);
+        }
+        if (mRefreshHeader != null) {
+            mRefreshHeader.onStateChanged(state);
+        }
+        if (mOnMultiPurposeListener != null) {
+            mOnMultiPurposeListener.onStateChanged(state);
+        }
+    }
+
+    protected void setStatePullUpLoad() {
+        notifyStateChanged(state = RefreshState.PullUpLoad);
+    }
+
+    protected void setStateReleaseLoad() {
+        notifyStateChanged(state = RefreshState.ReleaseLoad);
+    }
+
+    protected void setStateReleaseRefresh() {
+        notifyStateChanged(state = RefreshState.ReleaseRefresh);
+    }
+    protected void setStatePullDownRefresh() {
+        notifyStateChanged(state = RefreshState.PullDownRefresh);
+    }
+
+    protected void setStateLoding() {
+        notifyStateChanged(state = RefreshState.Loading);
+        animSpinner(-mFooterHeight);
+        if (mLoadmoreListener != null) {
+            mLoadmoreListener.onLoadmore(this);
+        }
+        if (mRefreshFooter != null) {
+            mRefreshFooter.startAnimator(mFooterHeight, mExtendFooterHeight);
+        }
+        if (mOnMultiPurposeListener != null) {
+            mOnMultiPurposeListener.onLoadmore(this);
+            mOnMultiPurposeListener.onFooterStartAnimator(mRefreshFooter, mFooterHeight, mExtendFooterHeight);
+        }
+    }
+
+    protected void setStateRefresing() {
+        notifyStateChanged(state = RefreshState.Refreshing);
+        animSpinner(mHeaderHeight);
+        if (mRefreshListener != null) {
+            mRefreshListener.onRefresh(this);
+        }
+        if (mRefreshHeader != null) {
+            mRefreshHeader.startAnimator(mHeaderHeight, mExtendHeaderHeight);
+        }
+        if (mOnMultiPurposeListener != null) {
+            mOnMultiPurposeListener.onRefresh(this);
+            mOnMultiPurposeListener.onHeaderStartAnimator(mRefreshHeader, mHeaderHeight, mExtendHeaderHeight);
+        }
+    }
+
+    /**
+     * 重置状态
+     */
+    protected void resetStatus() {
+        if (state != RefreshState.None) {
+            if (state == RefreshState.Refreshing && mRefreshHeader != null) {
+                mRefreshHeader.onFinish();
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onHeaderFinish(mRefreshHeader);
+                }
+            } else if (state == RefreshState.Loading && mRefreshFooter != null) {
+                mRefreshFooter.onFinish();
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onFooterFinish(mRefreshFooter);
+                }
+            }
+            if (mSpinner == 0) {
+                notifyStateChanged(state = RefreshState.None);
+            }
+        }
+        if (mSpinner != 0) {
+            animSpinner(0);
+        }
+    }
+    //</editor-fold>
+
+    //<editor-fold desc="视图位移 displacement">
+
+    //<editor-fold desc="动画监听 Animator Listener">
+    protected AnimatorListener valueAnimatorEndListener = new AnimatorListenerAdapter() {
+        @Override
+        public void onAnimationEnd(Animator animation) {
+            if ((int)((ValueAnimator)animation).getAnimatedValue() == 0) {
+                if (state != RefreshState.None) {
+                    notifyStateChanged(state = RefreshState.None);
+                }
+            }
+        }
+    };
+
+    protected AnimatorUpdateListener driftAnimatorUpdateListener = animation -> moveSpinner((int) animation.getAnimatedValue(), true);
+    //</editor-fold>
+
+    protected boolean moveSpinnerInfinitely(float dy) {
+        if (state == RefreshState.PullDownRefresh || state == RefreshState.ReleaseRefresh) {
+            final int H = mExtendHeaderHeight + mHeaderHeight;
+            final float x = Math.max(0, dy) * mDragRate;
+            final float y = (H - H * H / (x + H));// 公式 y = H-H*H/(x+H)
+            moveSpinner((int) y, false);
+            return true;
+        } else if (state == RefreshState.PullUpLoad || state == RefreshState.ReleaseLoad) {
+            final int H = mExtendFooterHeight + mFooterHeight;
+            final float x = -Math.min(0, dy) * mDragRate;
+            final float y = (H - H * H / (x + H));// 公式 y = H-H*H/(x+H)
+            moveSpinner(-(int) y, false);
+            return true;
+        }
+        return false;
+    }
+
+    protected void animSpinner(int endValue) {
+        if (mSpinner != endValue) {
+            ValueAnimator animator = ValueAnimator.ofInt(mSpinner, endValue);
+            animator.setDuration(mReboundDuration);
+            animator.setInterpolator(mReboundInterpolator);
+            animator.addUpdateListener(driftAnimatorUpdateListener);
+            animator.addListener(valueAnimatorEndListener);
+            animator.start();
+        }
+    }
+
+    private boolean overSpinner(float spinner) {
+        if (state == RefreshState.PullDownRefresh || state == RefreshState.PullUpLoad) {
+            resetStatus();
+            return true;
+        } else if (state == RefreshState.ReleaseRefresh) {
+            setStateRefresing();
+            return true;
+        } else if (state == RefreshState.ReleaseLoad) {
+            setStateLoding();
+            return true;
+        }
+        return false;
+    }
+
+    protected void moveSpinner(int spinner, boolean isAnimator) {
+        this.mSpinner = spinner;
+        if (state == RefreshState.PullDownRefresh && Math.abs(mSpinner) > mHeaderHeight) {
+            setStateReleaseRefresh();
+        } else if (state == RefreshState.ReleaseRefresh && Math.abs(mSpinner) < mHeaderHeight) {
+            setStatePullDownRefresh();
+        } else if (state == RefreshState.PullUpLoad && Math.abs(mSpinner) > mFooterHeight) {
+            setStateReleaseLoad();
+        } else if (state == RefreshState.ReleaseLoad && Math.abs(mSpinner) < mFooterHeight) {
+            setStatePullUpLoad();
+        }
+        if (mRefreshContent != null) {
+            if (mEnableTranslationContent) {
+                mRefreshContent.moveSpinner(spinner);
+            }
+        }
+        if (spinner >= 0 && mRefreshHeader != null) {
+            if (mRefreshHeader.getSpinnerStyle() == SpinnerStyle.Scale) {
+                mRefreshHeader.getView().getLayoutParams().height = spinner;
+                mRefreshHeader.getView().requestLayout();
+            } else {
+                mRefreshHeader.getView().setTranslationY(spinner);
+            }
+            if (isAnimator) {
+                mRefreshHeader.onReleasing(spinner, mHeaderHeight, mExtendHeaderHeight);
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onHeaderReleasing(mRefreshHeader, spinner, mHeaderHeight, mExtendHeaderHeight);
+                }
+            } else {
+                mRefreshHeader.onPullingDown(spinner, mHeaderHeight, mExtendHeaderHeight);
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onHeaderPulling(mRefreshHeader, spinner, mHeaderHeight, mExtendHeaderHeight);
+                }
+            }
+        }
+        if (spinner <= 0 && mRefreshFooter != null) {
+            if (mRefreshFooter.getSpinnerStyle() == SpinnerStyle.Scale) {
+                mRefreshFooter.getView().getLayoutParams().height = -spinner;
+                mRefreshFooter.getView().requestLayout();
+                mRefreshFooter.getView().setTranslationY(spinner);
+            } else {
+                mRefreshFooter.getView().setTranslationY(spinner);
+            }
+            if (isAnimator) {
+                mRefreshFooter.onPullReleasing(spinner, mFooterHeight, mExtendFooterHeight);
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onFooterReleasing(mRefreshFooter, spinner, mFooterHeight, mExtendFooterHeight);
+                }
+            } else {
+                mRefreshFooter.onPullingUp(spinner, mFooterHeight, mExtendFooterHeight);
+                if (mOnMultiPurposeListener != null) {
+                    mOnMultiPurposeListener.onFooterPulling(mRefreshFooter, spinner, mFooterHeight, mExtendFooterHeight);
+                }
+            }
+        }
+    }
+
+    //</editor-fold>
+
+    //<editor-fold desc="布局参数 LayoutParams">
+    @Override
+    protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {
+        return p instanceof LayoutParams;
+    }
+
+    @Override
+    protected LayoutParams generateDefaultLayoutParams() {
+        return new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+    }
+
+    @Override
+    protected LayoutParams generateLayoutParams(ViewGroup.LayoutParams p) {
+        return new LayoutParams(p);
+    }
+
+    @Override
+    public LayoutParams generateLayoutParams(AttributeSet attrs) {
+        return new LayoutParams(getContext(), attrs);
+    }
+
+    public static class LayoutParams extends MarginLayoutParams {
+
+        public LayoutParams(Context c, AttributeSet attrs) {
+            super(c, attrs);
+        }
+
+        public LayoutParams(int width, int height) {
+            super(width, height);
+        }
+
+        public LayoutParams(MarginLayoutParams source) {
+            super(source);
+        }
+
+        public LayoutParams(ViewGroup.LayoutParams source) {
+            super(source);
+        }
+    }
+    //</editor-fold>
+
+    //<editor-fold desc="嵌套滚动 NestedScrolling">
+
+    //<editor-fold desc="NestedScrollingParent">
+    @Override
+    public boolean onStartNestedScroll(View child, View target, int nestedScrollAxes) {
+//        || (!mEnableRefresh && !mEnableLoadmore)
+//                || state == RefreshState.Loading
+//                || state == RefreshState.Refreshing
+        return isEnabled() && (mEnableRefresh||mEnableLoadmore) && !(state == RefreshState.Loading||state == RefreshState.Refreshing)
+                && (nestedScrollAxes & ViewCompat.SCROLL_AXIS_VERTICAL) != 0;
+    }
+
+    @Override
+    public void onNestedScrollAccepted(View child, View target, int axes) {
+        // Reset the counter of how much leftover scroll needs to be consumed.
+        mNestedScrollingParentHelper.onNestedScrollAccepted(child, target, axes);
+        // Dispatch up to the nested parent
+        startNestedScroll(axes & ViewCompat.SCROLL_AXIS_VERTICAL);
+        mTotalUnconsumed = 0;
+        mNestedScrollInProgress = true;
+    }
+
+    @Override
+    public void onNestedPreScroll(View target, int dx, int dy, int[] consumed) {
+        // If we are in the middle of consuming, a scroll, then we want to move the spinner back up
+        // before allowing the list to scroll
+        if (mEnableRefresh && dy > 0 && mTotalUnconsumed > 0) {
+            if (dy > mTotalUnconsumed) {
+                consumed[1] = dy - (int) mTotalUnconsumed;
+                mTotalUnconsumed = 0;
+            } else {
+                mTotalUnconsumed -= dy;
+                consumed[1] = dy;
+            }
+            moveSpinnerInfinitely((int)mTotalUnconsumed);
+        } else if (mEnableLoadmore && dy < 0 && mTotalUnconsumed < 0) {
+            if (dy < mTotalUnconsumed) {
+                consumed[1] = dy - (int) mTotalUnconsumed;
+                mTotalUnconsumed = 0;
+            } else {
+                mTotalUnconsumed -= dy;
+                consumed[1] = dy;
+            }
+            moveSpinnerInfinitely((int)mTotalUnconsumed);
+        }
+
+        // If a client layout is using a custom start position for the circle
+        // view, they mean to hide it again before scrolling the child view
+        // If we get back to mTotalUnconsumed == 0 and there is more to go, hide
+        // the circle so it isn't exposed if its blocking content is moved
+//        if (mUsingCustomStart && dy > 0 && mTotalUnconsumed == 0
+//                && Math.abs(dy - consumed[1]) > 0) {
+//            mCircleView.setVisibility(View.GONE);
+//        }
+
+        // Now let our nested parent consume the leftovers
+        final int[] parentConsumed = mParentScrollConsumed;
+        if (dispatchNestedPreScroll(dx - consumed[0], dy - consumed[1], parentConsumed, null)) {
+            consumed[0] += parentConsumed[0];
+            consumed[1] += parentConsumed[1];
+        }
+    }
+
+    @Override
+    public int getNestedScrollAxes() {
+        return mNestedScrollingParentHelper.getNestedScrollAxes();
+    }
+
+    @Override
+    public void onStopNestedScroll(View target) {
+        mNestedScrollingParentHelper.onStopNestedScroll(target);
+        mNestedScrollInProgress = false;
+        // Finish the spinner for nested scrolling if we ever consumed any
+        // unconsumed nested scroll
+        if (mTotalUnconsumed != 0) {
+            overSpinner(mTotalUnconsumed);
+            mTotalUnconsumed = 0;
+        }
+        // Dispatch up our nested parent
+        stopNestedScroll();
+    }
+
+    @Override
+    public void onNestedScroll(final View target, final int dxConsumed, final int dyConsumed,
+                               final int dxUnconsumed, final int dyUnconsumed) {
+        // Dispatch up to the nested parent first
+        dispatchNestedScroll(dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed,
+                mParentOffsetInWindow);
+
+        // This is a bit of a hack. Nested scrolling works from the bottom up, and as we are
+        // sometimes between two nested scrolling views, we need a way to be able to know when any
+        // nested scrolling parent has stopped handling events. We do that by using the
+        // 'offset in window 'functionality to see if we have been moved from the event.
+        // This is a decent indication of whether we should take over the event stream or not.
+        final int dy = dyUnconsumed + mParentOffsetInWindow[1];
+        if (mEnableRefresh && dy < 0 && (mRefreshContent == null || !mRefreshContent.canScrollUp())) {
+            if (state == RefreshState.None) {
+                setStatePullDownRefresh();
+            }
+            mTotalUnconsumed += Math.abs(dy);
+            moveSpinnerInfinitely(mTotalUnconsumed);
+        } else if (mEnableLoadmore && dy > 0 && (mRefreshContent == null || !mRefreshContent.canScrollDown())) {
+            if (state == RefreshState.None) {
+                setStatePullUpLoad();
+            }
+            mTotalUnconsumed -= Math.abs(dy);
+            moveSpinnerInfinitely(mTotalUnconsumed);
+        }
+    }
+    //</editor-fold>
+
+    //<editor-fold desc="NestedScrollingChild">
+    @Override
+    public void setNestedScrollingEnabled(boolean enabled) {
+        mNestedScrollingChildHelper.setNestedScrollingEnabled(enabled);
+    }
+
+    @Override
+    public boolean isNestedScrollingEnabled() {
+        return mNestedScrollingChildHelper.isNestedScrollingEnabled();
+    }
+
+    @Override
+    public boolean startNestedScroll(int axes) {
+        return mNestedScrollingChildHelper.startNestedScroll(axes);
+    }
+
+    @Override
+    public void stopNestedScroll() {
+        mNestedScrollingChildHelper.stopNestedScroll();
+    }
+
+    @Override
+    public boolean hasNestedScrollingParent() {
+        return mNestedScrollingChildHelper.hasNestedScrollingParent();
+    }
+
+    @Override
+    public boolean dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed,
+                                        int dyUnconsumed, int[] offsetInWindow) {
+        return mNestedScrollingChildHelper.dispatchNestedScroll(dxConsumed, dyConsumed,
+                dxUnconsumed, dyUnconsumed, offsetInWindow);
+    }
+
+    @Override
+    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {
+        return mNestedScrollingChildHelper.dispatchNestedPreScroll(
+                dx, dy, consumed, offsetInWindow);
+    }
+
+    @Override
+    public boolean onNestedPreFling(View target, float velocityX,
+                                    float velocityY) {
+        return dispatchNestedPreFling(velocityX, velocityY);
+    }
+
+    @Override
+    public boolean onNestedFling(View target, float velocityX, float velocityY,
+                                 boolean consumed) {
+        return dispatchNestedFling(velocityX, velocityY, consumed);
+    }
+
+    @Override
+    public boolean dispatchNestedFling(float velocityX, float velocityY, boolean consumed) {
+        return mNestedScrollingChildHelper.dispatchNestedFling(velocityX, velocityY, consumed);
+    }
+
+    @Override
+    public boolean dispatchNestedPreFling(float velocityX, float velocityY) {
+        return mNestedScrollingChildHelper.dispatchNestedPreFling(velocityX, velocityY);
+    }
+    //</editor-fold>
+
+    //</editor-fold>
+
+    //<editor-fold desc="开放接口 open interface">
+    public SmartRefreshLayout setFooterHeightDp(float height) {
+        this.mFooterHeight = dp2px(height);
+        return this;
+    }
+    public SmartRefreshLayout setFooterHeightPx(int height) {
+        this.mFooterHeight = height;
+        return this;
+    }
+    public SmartRefreshLayout setHeaderHeightDp(float height) {
+        this.mHeaderHeight = dp2px(height);
+        return this;
+    }
+    public SmartRefreshLayout setHeaderHeightPx(int height) {
+        this.mHeaderHeight = height;
+        return this;
+    }
+    public SmartRefreshLayout setExtendHeaderHeightDp(float height) {
+        this.mExtendHeaderHeight = dp2px(height);
+        return this;
+    }
+    public SmartRefreshLayout setExtendHeaderHeightPx(int height) {
+        this.mExtendHeaderHeight = height;
+        return this;
+    }
+    public SmartRefreshLayout setExtendFooterHeightDp(float height) {
+        this.mExtendFooterHeight = dp2px(height);
+        return this;
+    }
+    public SmartRefreshLayout setExtendFooterHeightPx(int height) {
+        this.mExtendFooterHeight = height;
+        return this;
+    }
+    /**
+     * 设置拖动比率
+     * 显示拖动距离/真实拖动距离
+     */
+    public SmartRefreshLayout setDragRate(float rate) {
+        this.mDragRate = rate;
+        return this;
+    }
+
+    /**
+     * 设置回弹显示插值器
+     */
+    public SmartRefreshLayout setReboundInterpolator(Interpolator interpolator) {
+        this.mReboundInterpolator = interpolator;
+        return this;
+    }
+
+    /**
+     * 设置是否启用上啦加载更多（默认启用）
+     */
+    public SmartRefreshLayout setEnableLoadmore(boolean enable) {
+        this.mEnableLoadmore = enable;
+        return this;
+    }
+
+    /**
+     * 是否启用下拉刷新（默认启用）
+     */
+    public SmartRefreshLayout setEnableRefresh(boolean enable) {
+        this.mEnableRefresh = enable;
+        return this;
+    }
+
+    /**
+     * 设置是否启用内容视图拖动效果
+     */
+    public SmartRefreshLayout setEnableTranslationContent(boolean enable) {
+        this.mEnableTranslationContent = enable;
+        return this;
+    }
+
+    /**
+     * 设置是否开启在刷新时候禁止操作内容视图
+     */
+    public SmartRefreshLayout setDisableContentWhenRefresh(boolean disable) {
+        this.mDisableContentWhenRefresh = disable;
+        return this;
+    }
+
+    /**
+     * 设置底部上啦组件的实现
+     */
+    public SmartRefreshLayout setRefreshBottom(RefreshFooter bottom) {
+        if (mRefreshFooter != null) {
+            removeView(mRefreshFooter.getView());
+        }
+        this.mRefreshFooter = bottom;
+        this.addView(mRefreshFooter.getView());
+        return this;
+    }
+
+    /**
+     * 设置顶部下拉组件的实现
+     */
+    public SmartRefreshLayout setRefreshHeader(RefreshHeader header) {
+        if (mRefreshHeader != null) {
+            removeView(mRefreshHeader.getView());
+        }
+        this.mRefreshHeader = header;
+        this.addView(mRefreshHeader.getView());
+        return this;
+    }
+
+    /**
+     * 单独设置刷新监听器
+     */
+    public SmartRefreshLayout setOnRefreshListener(OnRefreshListener listener) {
+        this.mRefreshListener = listener;
+        return this;
+    }
+
+    /**
+     * 单独设置加载监听器
+     */
+    public SmartRefreshLayout setOnLoadmoreListener(OnLoadmoreListener listener) {
+        this.mLoadmoreListener = listener;
+        return this;
+    }
+
+    /**
+     * 同时设置刷新和加载监听器
+     */
+    public SmartRefreshLayout setOnRefreshLoadmoreListener(OnRefreshLoadmoreListener listener) {
+        this.mRefreshListener = listener;
+        this.mLoadmoreListener = listener;
+        return this;
+    }
+
+    /**
+     * 设置多功能监听器
+     */
+    public SmartRefreshLayout setOnMultiPurposeListener(OnMultiPurposeListener listener) {
+        this.mOnMultiPurposeListener = listener;
+        return this;
+    }
+
+    /**
+     * 设置主题颜色
+     */
+    public SmartRefreshLayout setPrimaryColorsId(int... primaryColorId) {
+        int[] colors = new int[primaryColorId.length];
+        for (int i = 0; i < primaryColorId.length; i++) {
+            colors[i] = ContextCompat.getColor(getContext(), primaryColorId[i]);
+        }
+        setPrimaryColors(colors);
+        return this;
+    }
+
+    /**
+     * 设置主题颜色
+     */
+    public SmartRefreshLayout setPrimaryColors(int... colors) {
+        if (mRefreshHeader != null) {
+            mRefreshHeader.setPrimaryColors(colors);
+        }
+        if (mRefreshFooter != null) {
+            mRefreshFooter.setPrimaryColors(colors);
+        }
+        mPrimaryColors = colors;
+        return this;
+    }
+
+    /**
+     * 是否正在刷新
+     */
+    public boolean isRefreshing() {
+        return state == RefreshState.Refreshing;
+    }
+    /**
+     * 是否正在加载
+     */
+    public boolean isLoading() {
+        return state == RefreshState.Loading;
+    }
+    /**
+     * 完成刷新
+     */
+    public SmartRefreshLayout finisRefresh(){
+        postDelayed(this::resetStatus, 1000);
+        return this;
+    }
+    /**
+     * 完成加载
+     */
+    public SmartRefreshLayout finisLoadmore(){
+        postDelayed(this::resetStatus, 1000);
+        return this;
+    }
+
+    /**
+     * 自动刷新
+     */
+    public boolean autoRefresh() {
+        return autoRefresh(500);
+    }
+    /**
+     * 自动刷新
+     */
+    public boolean autoRefresh(int delayed) {
+        if (state == RefreshState.None) {
+            postDelayed(()->{
+                ValueAnimator animator = ValueAnimator.ofInt(mSpinner, (int)(mHeaderHeight*1.2f));
+                animator.setDuration(mReboundDuration*2);
+                animator.setInterpolator(mReboundInterpolator);
+                animator.addUpdateListener(animation -> moveSpinner((int) animation.getAnimatedValue(), false));
+                animator.addListener(new AnimatorListenerAdapter() {
+                    @Override
+                    public void onAnimationEnd(Animator animation) {
+                        state = RefreshState.ReleaseRefresh;
+                        overSpinner(0);
+                    }
+                });
+                animator.start();
+            },delayed);
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    //</editor-fold>
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshContent.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshContent.java
new file mode 100644
index 0000000..8888efc
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshContent.java
@@ -0,0 +1,22 @@
+package com.scwang.smartrefreshlayout.api;
+
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * 刷新内容组件
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface RefreshContent {
+    void moveSpinner(int driftValue);
+    boolean canScrollUp();
+    boolean canScrollDown();
+    void measure(int widthSpec, int heightSpec);
+    int getMeasuredWidth();
+    int getMeasuredHeight();
+    void layout(int left, int top, int right, int bottom);
+
+    View getScrollableView();
+    ViewGroup.LayoutParams getLayoutParams();
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshFooter.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshFooter.java
new file mode 100644
index 0000000..5d4bd15
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshFooter.java
@@ -0,0 +1,12 @@
+package com.scwang.smartrefreshlayout.api;
+
+/**
+ * 刷新底部
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface RefreshFooter extends RefreshInternal {
+    void onPullingUp(int offset, int bottomHeight, int extendHeight);
+    void onPullReleasing(int offset, int bottomHeight, int extendHeight);
+    void startAnimator(int bottomHeight, int extendHeight);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshHeader.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshHeader.java
new file mode 100644
index 0000000..6e52741
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshHeader.java
@@ -0,0 +1,12 @@
+package com.scwang.smartrefreshlayout.api;
+
+/**
+ * 刷新头部
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface RefreshHeader extends RefreshInternal {
+    void onPullingDown(int offset, int headHeight, int extendHeight);
+    void onReleasing(int offset, int headHeight, int extendHeight);
+    void startAnimator(int headHeight, int extendHeight);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshInternal.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshInternal.java
new file mode 100644
index 0000000..f59ccfa
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/RefreshInternal.java
@@ -0,0 +1,21 @@
+package com.scwang.smartrefreshlayout.api;
+
+import android.support.annotation.NonNull;
+import android.view.View;
+
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.listener.OnStateChangedListener;
+
+
+/**
+ * 刷新内部组件
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface RefreshInternal extends OnStateChangedListener {
+    void onFinish();
+    void setPrimaryColors(int... colors);
+    @NonNull
+    View getView();
+    SpinnerStyle getSpinnerStyle();
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/SizeDefinition.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/SizeDefinition.java
new file mode 100644
index 0000000..bf1191f
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/api/SizeDefinition.java
@@ -0,0 +1,11 @@
+package com.scwang.smartrefreshlayout.api;
+
+/**
+ * 尺寸定义接口
+ * Created by SCWANG on 2017/6/1.
+ */
+
+public interface SizeDefinition {
+    int defineHeight();
+    int defineExtendHeight();
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/RefreshState.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/RefreshState.java
new file mode 100644
index 0000000..0496f8a
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/RefreshState.java
@@ -0,0 +1,5 @@
+package com.scwang.smartrefreshlayout.constant;
+
+public enum RefreshState {
+    None, PullDownRefresh, PullUpLoad, ReleaseRefresh, ReleaseLoad, Refreshing, Loading
+}
\ No newline at end of file
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/SpinnerStyle.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/SpinnerStyle.java
new file mode 100644
index 0000000..d2dd231
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/constant/SpinnerStyle.java
@@ -0,0 +1,11 @@
+package com.scwang.smartrefreshlayout.constant;
+
+/**
+ * 顶部和底部的组件在拖动时候的变换方式
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public enum SpinnerStyle {
+    Translate,//平行移动
+    Scale,//拉伸形变
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseFooter.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseFooter.java
new file mode 100644
index 0000000..c02ff70
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseFooter.java
@@ -0,0 +1,129 @@
+package com.scwang.smartrefreshlayout.footer.ballpulse;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.support.annotation.AttrRes;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.scwang.smartrefreshlayout.R;
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import static android.view.View.MeasureSpec.AT_MOST;
+import static android.view.View.MeasureSpec.getSize;
+import static android.view.View.MeasureSpec.makeMeasureSpec;
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+
+/**
+ * 球脉冲底部加载组件
+ * Created by SCWANG on 2017/5/30.
+ */
+
+public class BallPulseFooter extends ViewGroup implements RefreshFooter {
+
+    private BallPulseView mBallPulseView;
+
+    public BallPulseFooter(@NonNull Context context) {
+        super(context);
+        init(context, null, 0);
+    }
+
+    public BallPulseFooter(@NonNull Context context, @Nullable AttributeSet attrs) {
+        super(context, attrs);
+        init(context, attrs, 0);
+    }
+
+    public BallPulseFooter(@NonNull Context context, @Nullable AttributeSet attrs, @AttrRes int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        mBallPulseView = new BallPulseView(context);
+        addView(mBallPulseView, WRAP_CONTENT, WRAP_CONTENT);
+        setMinimumHeight(DensityUtil.dp2px(60));
+
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.BallPulseFooter);
+
+        int primaryColor = ta.getColor(R.styleable.BallPulseFooter_srlPrimaryColor, 0);
+        int accentColor = ta.getColor(R.styleable.BallPulseFooter_srlAccentColor, 0);
+        if (primaryColor != 0) {
+            mBallPulseView.setAnimatingColor(primaryColor);
+        }
+        if (accentColor != 0) {
+            mBallPulseView.setNormalColor(primaryColor);
+        }
+
+        ta.recycle();
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        if (mBallPulseView != null) {
+            int heightSpec = makeMeasureSpec(getSize(heightMeasureSpec), AT_MOST);
+            int widthSpec = makeMeasureSpec(getSize(widthMeasureSpec), AT_MOST);
+            mBallPulseView.measure(widthSpec, heightSpec);
+        }
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int l, int t, int r, int b) {
+        if (mBallPulseView != null) {
+            int pwidth = getMeasuredWidth();
+            int pheight = getMeasuredHeight();
+            int cwidth = mBallPulseView.getMeasuredWidth();
+            int cheight = mBallPulseView.getMeasuredHeight();
+            int left = pwidth / 2 - cwidth / 2;
+            int top = pheight / 2 - cheight / 2;
+            mBallPulseView.layout(left, top, left + cwidth, top + cheight);
+        }
+    }
+
+    @Override
+    public void onPullingUp(int offset, int bottomHeight, int extendHeight) {
+        mBallPulseView.onPullingUp(offset,bottomHeight,extendHeight);
+    }
+
+    @Override
+    public void onPullReleasing(int offset, int bottomHeight, int extendHeight) {
+        mBallPulseView.onPullReleasing(offset,bottomHeight,extendHeight);
+    }
+
+    @Override
+    public void startAnimator(int bottomHeight, int extendHeight) {
+        mBallPulseView.startAnimator(bottomHeight, extendHeight);
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+        mBallPulseView.onStateChanged(state);
+    }
+
+    @Override
+    public void onFinish() {
+        mBallPulseView.onFinish();
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        mBallPulseView.setPrimaryColors(colors);
+    }
+
+    @NonNull
+    @Override
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Translate;
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseView.java
new file mode 100644
index 0000000..9a11789
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/ballpulse/BallPulseView.java
@@ -0,0 +1,200 @@
+package com.scwang.smartrefreshlayout.footer.ballpulse;
+
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.support.annotation.ColorInt;
+import android.support.annotation.NonNull;
+import android.util.AttributeSet;
+import android.view.View;
+
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+public class BallPulseView extends View implements RefreshFooter {
+
+    public static final int DEFAULT_SIZE = 50; //dp
+    private float circleSpacing;
+
+    private float[] scaleFloats = new float[]{1f, 1f, 1f};
+
+    private ArrayList<ValueAnimator> mAnimators;
+    private Map<ValueAnimator, ValueAnimator.AnimatorUpdateListener> mUpdateListeners = new HashMap<>();
+    private Paint mPaint;
+
+    public BallPulseView(Context context) {
+        this(context, null);
+    }
+
+    public BallPulseView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public BallPulseView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+
+        circleSpacing = DensityUtil.dp2px(4);
+
+        mPaint = new Paint();
+        mPaint.setColor(Color.WHITE);
+        mPaint.setStyle(Paint.Style.FILL);
+        mPaint.setAntiAlias(true);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        int default_size = DensityUtil.dp2px(DEFAULT_SIZE);
+        setMeasuredDimension(resolveSize(default_size, widthMeasureSpec),
+                resolveSize(default_size, heightMeasureSpec));
+    }
+
+    public void setIndicatorColor(int color) {
+        mPaint.setColor(color);
+    }
+
+    private int normalColor = 0xffeeeeee;
+    private int animatingColor = 0xffe75946;
+
+    public void setNormalColor(@ColorInt int color) {
+        normalColor = color;
+    }
+
+    public void setAnimatingColor(@ColorInt int color) {
+        animatingColor = color;
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        if (colors.length > 0) {
+            setBackgroundColor(colors[0]);
+        }
+        if (colors.length > 1) {
+            setNormalColor(colors[1]);
+            setAnimatingColor(colors[1]);
+        }
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        float radius = (Math.min(getWidth(), getHeight()) - circleSpacing * 2) / 6;
+        float x = getWidth() / 2 - (radius * 2 + circleSpacing);
+        float y = getHeight() / 2;
+        for (int i = 0; i < 3; i++) {
+            canvas.save();
+            float translateX = x + (radius * 2) * i + circleSpacing * i;
+            canvas.translate(translateX, y);
+            canvas.scale(scaleFloats[i], scaleFloats[i]);
+            canvas.drawCircle(0, 0, radius, mPaint);
+            canvas.restore();
+        }
+    }
+
+    @Override
+    protected void onDetachedFromWindow() {
+        super.onDetachedFromWindow();
+        if (mAnimators != null) for (int i = 0; i < mAnimators.size(); i++) {
+            mAnimators.get(i).cancel();
+        }
+    }
+
+    public void startAnim() {
+        if (mAnimators == null) createAnimators();
+        if (mAnimators == null) return;
+        if (isStarted()) return;
+
+        for (int i = 0; i < mAnimators.size(); i++) {
+            ValueAnimator animator = mAnimators.get(i);
+
+            //when the animator restart , add the updateListener again because they was removed by animator stop .
+            ValueAnimator.AnimatorUpdateListener updateListener = mUpdateListeners.get(animator);
+            if (updateListener != null) {
+                animator.addUpdateListener(updateListener);
+            }
+            animator.start();
+        }
+        setIndicatorColor(animatingColor);
+    }
+
+    public void stopAnim() {
+        if (mAnimators != null) {
+            for (ValueAnimator animator : mAnimators) {
+                if (animator != null && animator.isStarted()) {
+                    animator.removeAllUpdateListeners();
+                    animator.end();
+                }
+            }
+        }
+        setIndicatorColor(normalColor);
+    }
+
+    private boolean isStarted() {
+        for (ValueAnimator animator : mAnimators) {
+            return animator.isStarted();
+        }
+        return false;
+    }
+
+    private void createAnimators() {
+        mAnimators = new ArrayList<>();
+        int[] delays = new int[]{120, 240, 360};
+        for (int i = 0; i < 3; i++) {
+            final int index = i;
+
+            ValueAnimator scaleAnim = ValueAnimator.ofFloat(1, 0.3f, 1);
+
+            scaleAnim.setDuration(750);
+            scaleAnim.setRepeatCount(ValueAnimator.INFINITE);
+            scaleAnim.setStartDelay(delays[i]);
+
+            mUpdateListeners.put(scaleAnim, animation -> {
+                scaleFloats[index] = (float) animation.getAnimatedValue();
+                postInvalidate();
+            });
+            mAnimators.add(scaleAnim);
+        }
+    }
+
+    @NonNull
+    @Override
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public void onFinish() {
+        stopAnim();
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return null;
+    }
+
+    @Override
+    public void onPullingUp(int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onPullReleasing(int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void startAnimator(int bottomHeight, int extendHeight) {
+        startAnim();
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/classics/ClassicsFooter.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/classics/ClassicsFooter.java
new file mode 100644
index 0000000..ff22ebd
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/footer/classics/ClassicsFooter.java
@@ -0,0 +1,139 @@
+package com.scwang.smartrefreshlayout.footer.classics;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+import android.support.v7.widget.AppCompatTextView;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.View;
+import android.view.animation.LinearInterpolator;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.internal.pathview.PathsView;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+
+/**
+ * 经典上拉底部组件
+ * Created by SCWANG on 2017/5/28.
+ */
+
+public class ClassicsFooter extends LinearLayout implements RefreshFooter {
+
+    private static final String REFRESH_BOTTOM_PULLUP = "上拉加载更多";
+    private static final String REFRESH_BOTTOM_RELEASE = "释放立即加载";
+    private static final String REFRESH_BOTTOM_LOADING = "正在加载...";
+
+    private TextView mBottomText;
+    private PathsView mProgressView;
+
+    public ClassicsFooter(Context context) {
+        super(context);
+        this.init(context, null, 0);
+    }
+
+    public ClassicsFooter(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        this.init(context, attrs, 0);
+    }
+
+    public ClassicsFooter(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        this.init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        DensityUtil density = new DensityUtil();
+
+//        int padding = density.dip2px(20);
+        setGravity(Gravity.CENTER);
+//        setPadding(padding,padding,padding,padding);
+        setMinimumHeight(density.dip2px(60));
+
+        mProgressView = new PathsView(context);
+//        mProgressView.parserPaths("M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z");
+        mProgressView.parserPaths("M176.5,63.5C162,49 142.1,40 120,40c-44.2,0 -79.9,35.8 -79.9,80s35.7,80 79.9,80c37.3,0 68.4,-25.5 77.3,-60h-20.8c-8.2,23.3 -30.4,40 -56.5,40 -33.1,0 -60,-26.9 -60,-60s26.9,-60 60,-60c16.6,0 31.4,06.9 42.2,17.8L130,110h70V40l-23.5,23.5z");
+        mProgressView.animate().setInterpolator(new LinearInterpolator());
+        mProgressView.parserColors(0xff666666);
+        LayoutParams lpPathView = new LayoutParams(density.dip2px(16), density.dip2px(16));
+        lpPathView.rightMargin = density.dip2px(10);
+        addView(mProgressView, lpPathView);
+
+        mBottomText = new AppCompatTextView(context, attrs, defStyleAttr);
+        mBottomText.setTextColor(0xff666666);
+        mBottomText.setTextSize(16);
+        mBottomText.setText(REFRESH_BOTTOM_PULLUP);
+
+        addView(mBottomText, WRAP_CONTENT, WRAP_CONTENT);
+
+        if (!isInEditMode()) {
+            mProgressView.setVisibility(GONE);
+        }
+    }
+
+    @Override
+    public void onPullingUp(int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onPullReleasing(int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+        mProgressView.setVisibility(VISIBLE);
+        mProgressView.animate().rotation(36000).setDuration(100000).start();
+    }
+
+    @Override
+    public void onFinish() {
+        mProgressView.animate().rotation(0).setDuration(300).start();
+        mProgressView.setVisibility(GONE);
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        if (colors.length > 0) {
+            setBackgroundColor(colors[0]);
+        }
+        if (colors.length > 1) {
+            mBottomText.setTextColor(colors[1]);
+            mProgressView.parserColors(colors[1]);
+        }
+    }
+
+
+    @NonNull
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Translate;
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+        switch (state) {
+            case PullUpLoad:
+            case None:
+                mBottomText.setText(REFRESH_BOTTOM_PULLUP);
+                break;
+            case Loading:
+                mBottomText.setText(REFRESH_BOTTOM_LOADING);
+                break;
+            case ReleaseLoad:
+                mBottomText.setText(REFRESH_BOTTOM_RELEASE);
+                break;
+        }
+    }
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/BezierHeader.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/BezierHeader.java
new file mode 100644
index 0000000..e02a9ff
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/BezierHeader.java
@@ -0,0 +1,220 @@
+package com.scwang.smartrefreshlayout.header.bezier;
+
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Color;
+import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
+import android.util.AttributeSet;
+import android.view.View;
+import android.view.animation.DecelerateInterpolator;
+import android.widget.FrameLayout;
+
+import com.scwang.smartrefreshlayout.R;
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+
+import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+
+/**
+ * 贝塞尔曲线风格刷新组件
+ * Created by lcodecore on 2016/10/2.
+ */
+
+public class BezierHeader extends FrameLayout implements RefreshHeader {
+
+    private WaveView mWaveView;
+    private RippleView mRippleView;
+    private RoundDotView mDotView;
+    private RoundProgressView mProgressView;
+
+    public BezierHeader(Context context) {
+        this(context,null);
+    }
+
+    public BezierHeader(Context context, AttributeSet attrs) {
+        this(context, attrs,0);
+    }
+
+    public BezierHeader(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init(context, attrs, defStyleAttr);
+    }
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+        if (getTag() instanceof String) {
+            String tag = getTag().toString();
+            String[] colors = tag.split("#");
+            for (String color : colors) {
+                if (color.matches("[0-9a-fA-F]{6,8}")) {
+                    if (color.equals(colors[colors.length - 1])) {
+                        setAccentColor(Color.parseColor("#"+color));
+                    } else {
+                        setPrimary(Color.parseColor("#"+color));
+                    }
+                }
+            }
+        }
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        /**
+         * 初始化headView
+         */
+        mWaveView = new WaveView(getContext());
+        mRippleView = new RippleView(getContext());
+        mDotView = new RoundDotView(getContext());
+        mProgressView = new RoundProgressView(getContext());
+        if (isInEditMode()) {
+            this.addView(mWaveView, MATCH_PARENT, MATCH_PARENT);
+            this.addView(mProgressView, MATCH_PARENT, MATCH_PARENT);
+            mWaveView.setHeadHeight(1000);
+        } else {
+            this.addView(mWaveView, MATCH_PARENT, WRAP_CONTENT);
+            this.addView(mDotView, MATCH_PARENT, WRAP_CONTENT);
+            this.addView(mProgressView, MATCH_PARENT, WRAP_CONTENT);
+            this.addView(mRippleView, MATCH_PARENT, WRAP_CONTENT);
+            mProgressView.setVisibility(View.GONE);
+        }
+
+
+        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.BezierHeader);
+
+        int primaryColor = ta.getColor(R.styleable.BezierHeader_srlPrimaryColor, 0);
+        int accentColor = ta.getColor(R.styleable.BezierHeader_srlAccentColor, 0);
+        if (primaryColor != 0) {
+            setPrimary(primaryColor);
+        }
+        if (accentColor != 0) {
+            setAccentColor(primaryColor);
+        }
+
+        ta.recycle();
+    }
+
+    public void setPrimary(int color) {
+        mWaveView.setWaveColor(color);
+        mProgressView.setBackColor(color);
+    }
+
+    public void setAccentColor(int color) {
+        mDotView.setDotColor(color);
+        mRippleView.setFrontColor(color);
+        mProgressView.setFrontColor(color);
+    }
+
+    public void setBackColorId(int colorId) {
+        setPrimary(ContextCompat.getColor(getContext(), colorId));
+    }
+
+    public void setFrontColorId(int colorId) {
+        setAccentColor(ContextCompat.getColor(getContext(), colorId));
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        if (colors.length > 0) {
+            setPrimary(colors[0]);
+        }
+        if (colors.length > 1) {
+            setAccentColor(colors[1]);
+        }
+    }
+
+    @NonNull
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Scale;
+    }
+
+    @Override
+    public void onPullingDown(int offset, int headHeight, int extendHeight) {
+        float fraction = 1f * offset / headHeight;
+        mWaveView.setHeadHeight(Math.min(headHeight, offset));
+        mWaveView.setWaveHeight((int)(1.8f*Math.max(0, offset - headHeight)));
+        mDotView.setFraction(fraction);
+    }
+
+    @Override
+    public void onReleasing(int offset, int headHeight, int extendHeight) {
+        float fraction = 1f * offset / headHeight;
+        mWaveView.setHeadHeight(Math.min(headHeight, offset));
+        mWaveView.setWaveHeight((int)(1.8f*Math.max(0, offset - headHeight)));
+        mDotView.setFraction(fraction);
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+        mWaveView.setHeadHeight(headHeight);
+        ValueAnimator animator = ValueAnimator.ofInt(
+                mWaveView.getWaveHeight(), 0,
+                -(int)(mWaveView.getWaveHeight()*0.8),0,
+                -(int)(mWaveView.getWaveHeight()*0.4),0);
+        animator.addUpdateListener(animation -> {
+            mWaveView.setWaveHeight((int) animation.getAnimatedValue()/2);
+            mWaveView.invalidate();
+        });
+        animator.setInterpolator(new DecelerateInterpolator());
+        animator.setDuration(800);
+        animator.start();
+        /*处理圈圈进度条**/
+        ValueAnimator valueAnimator = ValueAnimator.ofFloat(1, 0);
+        valueAnimator.addListener(new AnimatorListenerAdapter() {
+            @Override
+            public void onAnimationEnd(Animator animation) {
+                super.onAnimationEnd(animation);
+                mDotView.setVisibility(GONE);
+                mProgressView.setVisibility(View.VISIBLE);
+                mProgressView.animate().setDuration(300);
+                mProgressView.animate().scaleX((float) 1.0);
+                mProgressView.animate().scaleY((float) 1.0);
+                mProgressView.postDelayed(() -> {
+                    mProgressView.startAnim();
+                },200);
+            }
+        });
+
+        valueAnimator.setInterpolator(new DecelerateInterpolator());
+        valueAnimator.setDuration(300);
+        valueAnimator.addUpdateListener(animation -> mDotView.setAlpha((Float) animation.getAnimatedValue()));
+        valueAnimator.start();
+    }
+
+    @Override
+    public void onFinish() {
+        mProgressView.stopAnim();
+        mProgressView.animate().scaleX(0f);
+        mProgressView.animate().scaleY(0f);
+        mRippleView.startReveal();
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+        switch (state) {
+            case None:
+                break;
+            case PullDownRefresh:
+                mDotView.setAlpha(1);
+                mDotView.setVisibility(View.VISIBLE);
+                mProgressView.setVisibility(View.GONE);
+                break;
+            case PullUpLoad:
+                break;
+            case Refreshing:
+                break;
+            case Loading:
+                break;
+        }
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RippleView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RippleView.java
new file mode 100644
index 0000000..12e1eba
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RippleView.java
@@ -0,0 +1,59 @@
+package com.scwang.smartrefreshlayout.header.bezier;
+
+
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.view.View;
+
+/**
+ * cjj
+ */
+public class RippleView extends View {
+
+    private int mRadius;
+    private Paint mPaint;
+    private ValueAnimator mAnimator;
+
+    public RippleView(Context context) {
+        super(context);
+        mPaint = new Paint();
+        mPaint.setAntiAlias(true);
+        mPaint.setColor(0xffffffff);
+        mPaint.setStyle(Paint.Style.FILL);
+    }
+
+    public void setFrontColor(int color) {
+        mPaint.setColor(color);
+    }
+
+    public void startReveal() {
+        setVisibility(VISIBLE);
+        if (mAnimator == null) {
+            int bigRadius = (int) (Math.sqrt(Math.pow(getHeight(), 2) + Math.pow(getWidth(), 2)));
+            mAnimator = ValueAnimator.ofInt(0, bigRadius);
+            mAnimator.setDuration(400);
+            mAnimator.addUpdateListener(animation -> {
+                mRadius = (int) animation.getAnimatedValue();
+                invalidate();
+            });
+            mAnimator.addListener(new AnimatorListenerAdapter() {
+                @Override
+                public void onAnimationEnd(Animator animation) {
+                    setVisibility(GONE);
+                }
+            });
+        }
+        mAnimator.start();
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        canvas.drawCircle(getWidth() / 2, getHeight() / 2, mRadius, mPaint);
+    }
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundDotView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundDotView.java
new file mode 100644
index 0000000..f62b30c
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundDotView.java
@@ -0,0 +1,54 @@
+package com.scwang.smartrefreshlayout.header.bezier;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.view.View;
+
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+/**
+ *
+ * Created by cjj on 2015/8/27.
+ */
+public class RoundDotView extends View {
+
+    private int num = 7;
+    private Paint mPath;
+    private float mRadius;
+    private float fraction;
+
+    public RoundDotView(Context context) {
+        super(context);
+        mPath = new Paint();
+        mPath.setAntiAlias(true);
+        mPath.setColor(Color.WHITE);
+        mRadius = DensityUtil.dp2px(7);
+    }
+
+    public void setDotColor(int color) {
+        mPath.setColor(color);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        int width = getWidth();
+        int height = getHeight();
+        float wide = (width / num) * fraction-((fraction>1)?((fraction-1)*(width / num)/fraction):0);//y1 = t*(w/n)-(t>1)*((t-1)*(w/n)/t)
+        float high = height - ((fraction>1)?((fraction-1)*height/2/fraction):0);//y2 = x - (t>1)*((t-1)*x/t);
+        for (int i = 0 ; i < num; i++) {
+            float index = 1f + i - (1f + num) / 2;//y3 = (x + 1) - (n + 1)/2; 居中 index 变量：0 1 2 3 4 结果： -2 -1 0 1 2
+            float alpha = 255 * (1 - (2 * (Math.abs(index) / num)));//y4 = m * ( 1 - 2 * abs(y3) / n); 横向 alpha 差
+            float x = DensityUtil.px2dp(height);
+            mPath.setAlpha((int) (alpha * (1d - 1d / Math.pow((x / 800d + 1d), 15))));//y5 = y4 * (1-1/((x/800+1)^15));竖直 alpha 差
+            float radius = mRadius * (1-1/((x/10+1)));//y6 = mRadius*(1-1/(x/10+1));半径
+            canvas.drawCircle(width / 2- radius/2 + wide * index , high / 2, radius, mPath);
+        }
+    }
+
+    public void setFraction(float fraction) {
+        this.fraction = fraction;
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundProgressView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundProgressView.java
new file mode 100644
index 0000000..01c551b
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/RoundProgressView.java
@@ -0,0 +1,97 @@
+package com.scwang.smartrefreshlayout.header.bezier;
+
+import android.animation.ValueAnimator;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.view.View;
+import android.view.animation.AccelerateDecelerateInterpolator;
+
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+
+/**
+ * 中心圆形加载进度视图
+ * Created by Administrator on 2015/8/27.
+ */
+public class RoundProgressView extends View {
+
+    private Paint mPath;
+    private Paint mPantR;
+    private ValueAnimator mAnimator;
+    private int endAngle = 0;
+    private int stratAngle = 270;
+    private int mRadius = 0;
+    private int mOutsideCircle = 0;
+    private RectF mRect = new RectF(0,0,0,0);
+
+    public RoundProgressView(Context context) {
+        super(context);
+        init();
+    }
+
+    private void init() {
+        mPath = new Paint();
+        mPantR = new Paint();
+        mPath.setAntiAlias(true);
+        mPantR.setAntiAlias(true);
+        mPath.setColor(Color.WHITE);
+        mPantR.setColor(0x55000000);
+
+        DensityUtil density = new DensityUtil();
+        mRadius = density.dip2px(20);
+        mOutsideCircle = density.dip2px(7);
+        mPath.setStrokeWidth(density.dip2px(3));
+        mPantR.setStrokeWidth(density.dip2px(3));
+
+        mAnimator = ValueAnimator.ofInt(0,360);
+        mAnimator.setDuration(720);
+        mAnimator.addUpdateListener(animation -> {
+            endAngle = (int) animation.getAnimatedValue();
+            postInvalidate();
+        });
+        mAnimator.setRepeatCount(ValueAnimator.INFINITE);
+        mAnimator.setInterpolator(new AccelerateDecelerateInterpolator());
+    }
+
+    public void setBackColor(int backColor) {
+        mPantR.setColor(backColor&0x00ffffff|0x55000000);
+    }
+
+    public void setFrontColor(int color) {
+        mPath.setColor(color);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        int width = getWidth();
+        int height = getHeight();
+
+        mPath.setStyle(Paint.Style.FILL);
+        canvas.drawCircle(width / 2, height / 2, mRadius, mPath);
+
+        mPath.setStyle(Paint.Style.STROKE);//设置为空心
+        canvas.drawCircle(width / 2, height / 2, mRadius + mOutsideCircle, mPath);
+
+        mPantR.setStyle(Paint.Style.FILL);
+        mRect.set(width/2- mRadius, height/2- mRadius, width/2+ mRadius, height/2+ mRadius);
+        canvas.drawArc(mRect, stratAngle, endAngle, true, mPantR);
+
+        mRadius += mOutsideCircle;
+        mPantR.setStyle(Paint.Style.STROKE);
+        mRect.set(width/2- mRadius, height/2- mRadius, width/2+ mRadius, height/2+ mRadius);
+        canvas.drawArc(mRect, stratAngle, endAngle, false, mPantR);
+        mRadius -= mOutsideCircle;
+    }
+
+    public void startAnim(){
+        if (mAnimator !=null) mAnimator.start();
+    }
+
+    public void stopAnim(){
+        if (mAnimator !=null && mAnimator.isRunning()) mAnimator.cancel();
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/WaveView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/WaveView.java
new file mode 100644
index 0000000..fc62497
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/bezier/WaveView.java
@@ -0,0 +1,73 @@
+package com.scwang.smartrefreshlayout.header.bezier;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.util.AttributeSet;
+import android.view.View;
+
+/**
+ * Created by cjj on 2015/8/5.
+ * 绘制贝塞尔来绘制波浪形
+ */
+public class WaveView extends View {
+
+    private int waveHeight;
+    private int headHeight;
+    private Path path;
+    private Paint paint;
+
+    public WaveView(Context context) {
+        this(context, null, 0);
+    }
+
+    public WaveView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public WaveView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init();
+    }
+
+    private void init() {
+        path = new Path();
+        paint = new Paint();
+        paint.setColor(0xff1F2426);
+        paint.setAntiAlias(true);
+    }
+
+    public void setWaveColor(int color) {
+        paint.setColor(color);
+    }
+
+    public int getHeadHeight() {
+        return headHeight;
+    }
+
+    public void setHeadHeight(int headHeight) {
+        this.headHeight = headHeight;
+    }
+
+    public int getWaveHeight() {
+        return waveHeight;
+    }
+
+    public void setWaveHeight(int waveHeight) {
+        this.waveHeight = waveHeight;
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        //重置画笔
+        path.reset();
+        path.lineTo(0, headHeight);
+        //绘制贝塞尔曲线
+        path.quadTo(getMeasuredWidth() / 2, headHeight + waveHeight, getMeasuredWidth(), headHeight);
+        path.lineTo(getMeasuredWidth(), 0);
+        canvas.drawPath(path, paint);
+    }
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/classics/ClassicsHeader.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/classics/ClassicsHeader.java
new file mode 100644
index 0000000..e6a5d3e
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/header/classics/ClassicsHeader.java
@@ -0,0 +1,174 @@
+package com.scwang.smartrefreshlayout.header.classics;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.View;
+import android.view.animation.LinearInterpolator;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+import com.scwang.smartrefreshlayout.internal.pathview.PathsView;
+import com.scwang.smartrefreshlayout.util.DensityUtil;
+
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
+
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+
+/**
+ * 经典下拉头部
+ * Created by SCWANG on 2017/5/28.
+ */
+public class ClassicsHeader extends RelativeLayout implements RefreshHeader {
+
+    private static final int CIRCLE_BG_LIGHT = 0xFFFAFAFA;
+    private static final String REFRESH_HEADER_PULLDOWN = "下拉可以刷新";
+    private static final String REFRESH_HEADER_REFRESHING = "正在刷新...";
+    private static final String REFRESH_HEADER_RELEASE = "释放立即刷新";
+
+    private TextView mHeaderText;
+    private TextView mLastUpdateText;
+    private PathsView mArrowView;
+    private PathsView mProgressView;
+    private DateFormat mFormat = new SimpleDateFormat("上次更新 HH:mm", Locale.CHINA);
+
+    public ClassicsHeader(Context context) {
+        super(context);
+        this.init(context, null, 0);
+    }
+
+    public ClassicsHeader(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        this.init(context, attrs, 0);
+    }
+
+    public ClassicsHeader(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        this.init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        DensityUtil density = new DensityUtil();
+
+        setMinimumHeight(density.dip2px(80));
+
+        mProgressView = new PathsView(context);
+        mProgressView.parserColors(0xff666666);
+//        mProgressView.parserPaths("M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z");
+        mProgressView.parserPaths("M176.5,63.5C162,49 142.1,40 120,40c-44.2,0 -79.9,35.8 -79.9,80s35.7,80 79.9,80c37.3,0 68.4,-25.5 77.3,-60h-20.8c-8.2,23.3 -30.4,40 -56.5,40 -33.1,0 -60,-26.9 -60,-60s26.9,-60 60,-60c16.6,0 31.4,06.9 42.2,17.8L130,110h70V40l-23.5,23.5z");
+        mProgressView.animate().setDuration(1000*5).setInterpolator(new LinearInterpolator());
+        LayoutParams lpProgress = new LayoutParams(density.dip2px(20), density.dip2px(20));
+        lpProgress.leftMargin = density.dip2px(80);
+        lpProgress.addRule(CENTER_VERTICAL);
+        lpProgress.addRule(ALIGN_PARENT_LEFT);
+        addView(mProgressView, lpProgress);
+
+        mArrowView = new PathsView(context);
+        mArrowView.parserColors(0xff666666);
+        //mArrowView.parserPaths("M20,12l-1.41,-1.41L13,16.17V4h-2v12.17l-5.58,-5.59L4,12l8,8 8,-8z");
+//        mArrowView.parserPaths("M200,120l-14.1,-14.1L130,161.7V40h-20v121.7l-55.8,-55.9L40,120l80,80 80,-80z");
+        mArrowView.parserPaths("M60.68,16.15l-0.13,-0.11c-1.09,-0.76 -2.63,-1.16 -4.47,-1.16c-2.92,0 -5.95,0.99 -7.32,1.92l-10.76,7.35l-20.97,4.45c-0.18,0.04 -0.35,0.11 -0.51,0.22c-0.41,0.28 -0.64,0.76 -0.62,1.25c0.04,0.71 0.58,1.27 1.28,1.34l8.87,0.89l-8.65,5.9c-2.57,-1.18 -5.02,-2.33 -7.27,-3.4c-3.48,-1.67 -5.76,-1.96 -6.83,-0.89c-1.11,1.11 -0.39,3.02 0.01,3.6l8.33,10.8c0.28,0.41 0.6,0.64 0.99,0.71c0.64,0.11 1.2,-0.27 1.78,-0.68l2.11,-1.45l11.72,-5.69l-1.71,6.12c-0.19,0.68 0.14,1.38 0.78,1.68c0.18,0.08 0.39,0.13 0.59,0.13c0.29,0 0.57,-0.09 0.81,-0.25c0.16,-0.1 0.28,-0.23 0.38,-0.39l6.7,-10.19l4.1,-4.8L58.08,21.08c0.28,-0.19 0.55,-0.36 0.82,-0.54c0.63,-0.4 1.22,-0.78 1.65,-1.21C61.47,18.41 61.52,17.39 60.68,16.15z");
+        addView(mArrowView, lpProgress);
+
+        LinearLayout layout = new LinearLayout(context, attrs, defStyleAttr);
+        layout.setGravity(Gravity.CENTER_HORIZONTAL);
+        layout.setOrientation(LinearLayout.VERTICAL);
+        mHeaderText = new TextView(context);
+        mHeaderText.setText(REFRESH_HEADER_PULLDOWN);
+        mHeaderText.setTextColor(0xff666666);
+        mHeaderText.setTextSize(16);
+
+        mLastUpdateText = new TextView(context);
+        mLastUpdateText.setText(mFormat.format(new Date()));
+        mLastUpdateText.setTextColor(0xff7c7c7c);
+        mLastUpdateText.setTextSize(12);
+        LinearLayout.LayoutParams lpHeaderText = new LinearLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpHeaderText.leftMargin = density.dip2px(20);
+        lpHeaderText.rightMargin = density.dip2px(20);
+        layout.addView(mHeaderText, lpHeaderText);
+        LinearLayout.LayoutParams lpUpdateText = new LinearLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        layout.addView(mLastUpdateText, lpUpdateText);
+
+        LayoutParams lpHeaderLayout = new LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpHeaderLayout.addRule(CENTER_IN_PARENT);
+        addView(layout,lpHeaderLayout);
+
+        mProgressView.setVisibility(GONE);
+    }
+
+    public void setLastUpdateTime(Date time) {
+        mLastUpdateText.setText(mFormat.format(time));
+    }
+
+    @Override
+    public void onPullingDown(int offset, int headHeight, int extendHeight) {
+    }
+
+    @Override
+    public void onReleasing(int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+        mProgressView.animate().rotation(36000).setDuration(100000).start();
+    }
+
+    @Override
+    public void onFinish() {
+        mProgressView.animate().rotation(0).setDuration(300).start();
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+        if (colors.length > 0) {
+            setBackgroundColor(colors[0]);
+        }
+        if (colors.length > 1) {
+            mHeaderText.setTextColor(colors[1]);
+            mArrowView.parserColors(colors[1]);
+            mProgressView.parserColors(colors[1]);
+            mLastUpdateText.setTextColor(colors[1]&0x00ffffff|0x99000000);
+        }
+    }
+
+    @NonNull
+    public View getView() {
+        return this;
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        return SpinnerStyle.Translate;
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+        switch (state) {
+            case PullDownRefresh:
+            case None:
+                mHeaderText.setText(REFRESH_HEADER_PULLDOWN);
+                mArrowView.setVisibility(VISIBLE);
+                mProgressView.setVisibility(GONE);
+                mArrowView.animate().rotation(0).start();
+                break;
+            case Refreshing:
+                mHeaderText.setText(REFRESH_HEADER_REFRESHING);
+                mProgressView.setVisibility(VISIBLE);
+                mArrowView.setVisibility(GONE);
+                break;
+            case ReleaseRefresh:
+                mHeaderText.setText(REFRESH_HEADER_RELEASE);
+                mArrowView.animate().rotation(180).start();
+                break;
+        }
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshBottomWrapper.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshBottomWrapper.java
new file mode 100644
index 0000000..604592b
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshBottomWrapper.java
@@ -0,0 +1,72 @@
+package com.scwang.smartrefreshlayout.impl;
+
+import android.support.annotation.NonNull;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+
+/**
+ * 刷新底部包装
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public class RefreshBottomWrapper implements RefreshFooter {
+    private View mWrapperView;
+    private SpinnerStyle mSpinnerStyle;
+
+    public RefreshBottomWrapper(View wrapper) {
+        this.mWrapperView = wrapper;
+    }
+
+    @NonNull
+    public View getView() {
+        return mWrapperView;
+    }
+
+    @Override
+    public void onFinish() {
+
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+
+    }
+
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        if (mSpinnerStyle != null) {
+            return mSpinnerStyle;
+        }
+        ViewGroup.LayoutParams params = mWrapperView.getLayoutParams();
+        if (params != null) {
+            if (params.height == 0) {
+                return mSpinnerStyle = SpinnerStyle.Scale;
+            }
+        }
+        return mSpinnerStyle = SpinnerStyle.Translate;
+    }
+
+    @Override
+    public void onPullingUp(int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onPullReleasing(int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void startAnimator(int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshContentWrapper.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshContentWrapper.java
new file mode 100644
index 0000000..41781b8
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshContentWrapper.java
@@ -0,0 +1,247 @@
+package com.scwang.smartrefreshlayout.impl;
+
+import android.content.Context;
+import android.database.DataSetObserver;
+import android.support.annotation.NonNull;
+import android.support.v4.app.Fragment;
+import android.support.v4.view.NestedScrollingChild;
+import android.support.v4.view.NestedScrollingParent;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.PagerAdapterWrapper;
+import android.support.v4.view.ScrollingView;
+import android.support.v4.view.ViewPager;
+import android.view.View;
+import android.view.ViewGroup;
+import android.webkit.WebView;
+import android.widget.AbsListView;
+import android.widget.ScrollView;
+
+import com.scwang.smartrefreshlayout.api.RefreshContent;
+
+import java.util.Collections;
+import java.util.Queue;
+import java.util.concurrent.LinkedBlockingQueue;
+
+/**
+ * 刷新内容包装
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public class RefreshContentWrapper implements RefreshContent {
+
+    private View mContentView;
+    private View mScrollableView;
+
+    public RefreshContentWrapper(View view) {
+        this.mContentView = view;
+        this.findScrollableView(view);
+    }
+
+    public RefreshContentWrapper(Context context) {
+        this.mContentView = new View(context);
+        this.findScrollableView(mContentView);
+    }
+
+    private void findScrollableView(View content) {
+        mScrollableView = findScrollableViewInternal(content, true);
+        if (mScrollableView instanceof NestedScrollingParent
+                && !(mScrollableView instanceof NestedScrollingChild)) {
+            mScrollableView = findScrollableViewInternal(mScrollableView, false);
+        }
+        if (mScrollableView instanceof ViewPager) {
+            wrapperViewPager((ViewPager) this.mScrollableView);
+        }
+//        if (content instanceof CoordinatorLayout) {
+//            AppBarLayout layout = $.query(content).$(AppBarLayout.class).view();
+//            if (layout != null) {
+////                setRealContentView(new AppBarLayoutWrapper(layout, contentView));
+//                layout.addOnOffsetChangedListener((appBarLayout, verticalOffset) -> {
+//                    if (verticalOffset >= 0) {
+//                        mTwinkling.setTwinklingEnabled(true);
+//                    } else {
+//                        mTwinkling.setTwinklingEnabled(false);
+//                    }
+//                });
+//                return;
+//            }
+//        }
+    }
+
+    private void wrapperViewPager(final ViewPager viewPager) {
+        wrapperViewPager(viewPager, null);
+    }
+
+    private void wrapperViewPager(final ViewPager viewPager, PagerPrimaryAdapter primaryAdapter) {
+        viewPager.post(new Runnable() {
+            int count = 0;
+            PagerPrimaryAdapter mAdapter = primaryAdapter;
+            @Override
+            public void run() {
+                count++;
+                PagerAdapter adapter = viewPager.getAdapter();
+                if (adapter != null) {
+                    if (adapter instanceof PagerPrimaryAdapter) {
+                        if (adapter == primaryAdapter) {
+                            viewPager.postDelayed(this, 500);
+                        }
+                    } else {
+                        if (mAdapter == null) {
+                            mAdapter = new PagerPrimaryAdapter(adapter);
+                        } else {
+                            mAdapter.wrapper(adapter);
+                        }
+                        mAdapter.attachViewPager(viewPager);
+                    }
+                } else if (count < 10) {
+                    viewPager.postDelayed(this, 500);
+                }
+            }
+        });
+    }
+
+    private View findScrollableViewInternal(View content, boolean selfable) {
+        View scrollableView = null;
+        Queue<View> views = new LinkedBlockingQueue<>(Collections.singletonList(content));
+        while (!views.isEmpty() && scrollableView == null) {
+            View view = views.poll();
+            if (view != null) {
+                if ((selfable || view != content) && (view instanceof AbsListView
+                        || view instanceof ScrollView
+                        || view instanceof ScrollingView
+                        || view instanceof NestedScrollingChild
+                        || view instanceof NestedScrollingParent
+                        || view instanceof WebView
+                        || view instanceof ViewPager)) {
+                    scrollableView = view;
+                } else if (view instanceof ViewGroup) {
+                    ViewGroup group = (ViewGroup) view;
+                    for (int j = 0; j < group.getChildCount(); j++) {
+                        views.add(group.getChildAt(j));
+                    }
+                }
+            }
+        }
+        return scrollableView;
+    }
+
+    @NonNull
+    public View getView() {
+        return mContentView;
+    }
+
+    @Override
+    public void moveSpinner(int driftValue) {
+        mContentView.setTranslationY(driftValue);
+    }
+
+    @Override
+    public boolean canScrollUp() {
+        if (mScrollableView == null) {
+            mScrollableView = mContentView;
+        }
+        if (android.os.Build.VERSION.SDK_INT < 14) {
+            if (mScrollableView instanceof AbsListView) {
+                final AbsListView absListView = (AbsListView) mScrollableView;
+                return absListView.getChildCount() > 0
+                        && (absListView.getFirstVisiblePosition() > 0 || absListView.getChildAt(0)
+                        .getTop() < absListView.getPaddingTop());
+            } else {
+                return mScrollableView.getScrollY() > 0;
+            }
+        } else {
+            return mScrollableView.canScrollVertically(-1);
+        }
+    }
+
+    @Override
+    public boolean canScrollDown() {
+        if (mScrollableView == null) {
+            mScrollableView = mContentView;
+        }
+        if (android.os.Build.VERSION.SDK_INT < 14) {
+            if (mScrollableView instanceof AbsListView) {
+                final AbsListView absListView = (AbsListView) mScrollableView;
+                return absListView.getChildCount() > 0
+                        && (absListView.getLastVisiblePosition() < absListView.getChildCount() - 1
+                        || absListView.getChildAt(absListView.getChildCount() - 1).getBottom() > absListView.getPaddingBottom());
+            } else {
+                return mScrollableView.getScrollY() < 0;
+            }
+        } else {
+            return mScrollableView.canScrollVertically(1);
+        }
+    }
+
+    @Override
+    public void measure(int widthSpec, int heightSpec) {
+        mContentView.measure(widthSpec, heightSpec);
+    }
+
+    @Override
+    public ViewGroup.LayoutParams getLayoutParams() {
+        return mContentView.getLayoutParams();
+    }
+
+    @Override
+    public int getMeasuredWidth() {
+        return mContentView.getMeasuredWidth();
+    }
+
+    @Override
+    public int getMeasuredHeight() {
+        return mContentView.getMeasuredHeight();
+    }
+
+    @Override
+    public void layout(int left, int top, int right, int bottom) {
+        mContentView.layout(left, top, right, bottom);
+    }
+
+    @Override
+    public View getScrollableView() {
+        return mScrollableView;
+    }
+
+    private class PagerPrimaryAdapter extends PagerAdapterWrapper {
+        private ViewPager mViewPager;
+
+        PagerPrimaryAdapter(PagerAdapter wrapped) {
+            super(wrapped);
+        }
+
+        void wrapper(PagerAdapter adapter) {
+            wrapped = adapter;
+        }
+
+        @Override
+        public void attachViewPager(ViewPager viewPager) {
+            mViewPager = viewPager;
+            super.attachViewPager(viewPager);
+        }
+
+        @Override
+        public void setViewPagerObserver(DataSetObserver observer) {
+            super.setViewPagerObserver(observer);
+            if (observer == null) {
+                wrapperViewPager(mViewPager, this);
+            }
+        }
+
+        @Override
+        public void setPrimaryItem(ViewGroup container, int position, Object object) {
+            super.setPrimaryItem(container, position, object);
+            if (object instanceof View) {
+                mScrollableView = ((View) object);
+            } else if (object instanceof Fragment) {
+                mScrollableView = ((Fragment) object).getView();
+            }
+            if (mScrollableView != null) {
+                mScrollableView = findScrollableViewInternal(mScrollableView, true);
+                if (mScrollableView instanceof NestedScrollingParent
+                        && !(mScrollableView instanceof NestedScrollingChild)) {
+                    mScrollableView = findScrollableViewInternal(mScrollableView, false);
+                }
+            }
+        }
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshHeaderWrapper.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshHeaderWrapper.java
new file mode 100644
index 0000000..2a65220
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/impl/RefreshHeaderWrapper.java
@@ -0,0 +1,73 @@
+package com.scwang.smartrefreshlayout.impl;
+
+import android.support.annotation.NonNull;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+import com.scwang.smartrefreshlayout.constant.SpinnerStyle;
+
+/**
+ * 刷新头部包装
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public class RefreshHeaderWrapper implements RefreshHeader {
+    private View mWrapperView;
+    private SpinnerStyle mSpinnerStyle;
+
+    public RefreshHeaderWrapper(View wrapper) {
+        this.mWrapperView = wrapper;
+    }
+
+    @NonNull
+    public View getView() {
+        return mWrapperView;
+    }
+
+    @Override
+    public void onFinish() {
+
+    }
+
+    @Override
+    public void setPrimaryColors(int... colors) {
+
+    }
+
+    @NonNull
+    @Override
+    public SpinnerStyle getSpinnerStyle() {
+        if (mSpinnerStyle != null) {
+            return mSpinnerStyle;
+        }
+        ViewGroup.LayoutParams params = mWrapperView.getLayoutParams();
+        if (params != null) {
+            if (params.height == 0) {
+                return mSpinnerStyle = SpinnerStyle.Scale;
+            }
+        }
+        return mSpinnerStyle = SpinnerStyle.Translate;
+    }
+
+    @Override
+    public void onPullingDown(int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onReleasing(int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void startAnimator(int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/CircleImageView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/CircleImageView.java
new file mode 100644
index 0000000..f6e1505
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/CircleImageView.java
@@ -0,0 +1,158 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.scwang.smartrefreshlayout.internal;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.RadialGradient;
+import android.graphics.Shader;
+import android.graphics.drawable.ShapeDrawable;
+import android.graphics.drawable.shapes.OvalShape;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.ViewCompat;
+import android.view.View;
+import android.view.animation.Animation;
+import android.widget.ImageView;
+
+/**
+ * Private class created to work around issues with AnimationListeners being
+ * called before the animation is actually complete and support shadows on older
+ * platforms.
+ */
+public class CircleImageView extends ImageView {
+
+    private static final int KEY_SHADOW_COLOR = 0x1E000000;
+    private static final int FILL_SHADOW_COLOR = 0x3D000000;
+    // PX
+    private static final float X_OFFSET = 0f;
+    private static final float Y_OFFSET = 1.75f;
+    private static final float SHADOW_RADIUS = 3.5f;
+    private static final int SHADOW_ELEVATION = 4;
+
+    private Animation.AnimationListener mListener;
+    int mShadowRadius;
+
+    public CircleImageView(Context context, int color) {
+        super(context);
+        final float density = getContext().getResources().getDisplayMetrics().density;
+        final int shadowYOffset = (int) (density * Y_OFFSET);
+        final int shadowXOffset = (int) (density * X_OFFSET);
+
+        mShadowRadius = (int) (density * SHADOW_RADIUS);
+
+        ShapeDrawable circle;
+        if (elevationSupported()) {
+            circle = new ShapeDrawable(new OvalShape());
+            ViewCompat.setElevation(this, SHADOW_ELEVATION * density);
+        } else {
+            OvalShape oval = new OvalShadow(mShadowRadius);
+            circle = new ShapeDrawable(oval);
+            setLayerType(View.LAYER_TYPE_SOFTWARE, circle.getPaint());
+            circle.getPaint().setShadowLayer(mShadowRadius, shadowXOffset, shadowYOffset,
+                    KEY_SHADOW_COLOR);
+            final int padding = mShadowRadius;
+            // set padding so the inner image sits correctly within the shadow.
+            setPadding(padding, padding, padding, padding);
+        }
+        circle.getPaint().setColor(color);
+        ViewCompat.setBackground(this, circle);
+    }
+
+    private boolean elevationSupported() {
+        return android.os.Build.VERSION.SDK_INT >= 21;
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        if (!elevationSupported()) {
+            setMeasuredDimension(getMeasuredWidth() + mShadowRadius * 2, getMeasuredHeight()
+                    + mShadowRadius * 2);
+        }
+    }
+
+    public void setAnimationListener(Animation.AnimationListener listener) {
+        mListener = listener;
+    }
+
+    @Override
+    public void onAnimationStart() {
+        super.onAnimationStart();
+        if (mListener != null) {
+            mListener.onAnimationStart(getAnimation());
+        }
+    }
+
+    @Override
+    public void onAnimationEnd() {
+        super.onAnimationEnd();
+        if (mListener != null) {
+            mListener.onAnimationEnd(getAnimation());
+        }
+    }
+
+    /**
+     * Update the background color of the circle image view.
+     *
+     * @param colorRes Id of a color resource.
+     */
+    public void setBackgroundColorRes(int colorRes) {
+        setBackgroundColor(ContextCompat.getColor(getContext(), colorRes));
+    }
+
+    @Override
+    public void setBackgroundColor(int color) {
+        if (getBackground() instanceof ShapeDrawable) {
+            ((ShapeDrawable) getBackground()).getPaint().setColor(color);
+        }
+    }
+
+    private class OvalShadow extends OvalShape {
+        private RadialGradient mRadialGradient;
+        private Paint mShadowPaint;
+
+        OvalShadow(int shadowRadius) {
+            super();
+            mShadowPaint = new Paint();
+            mShadowRadius = shadowRadius;
+            updateRadialGradient((int) rect().width());
+        }
+
+        @Override
+        protected void onResize(float width, float height) {
+            super.onResize(width, height);
+            updateRadialGradient((int) width);
+        }
+
+        @Override
+        public void draw(Canvas canvas, Paint paint) {
+            final int viewWidth = CircleImageView.this.getWidth();
+            final int viewHeight = CircleImageView.this.getHeight();
+            canvas.drawCircle(viewWidth / 2, viewHeight / 2, viewWidth / 2, mShadowPaint);
+            canvas.drawCircle(viewWidth / 2, viewHeight / 2, viewWidth / 2 - mShadowRadius, paint);
+        }
+
+        private void updateRadialGradient(int diameter) {
+            mRadialGradient = new RadialGradient(diameter / 2, diameter / 2,
+                    mShadowRadius, new int[] { FILL_SHADOW_COLOR, Color.TRANSPARENT },
+                    null, Shader.TileMode.CLAMP);
+            mShadowPaint.setShader(mRadialGradient);
+        }
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/MaterialProgressDrawable.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/MaterialProgressDrawable.java
new file mode 100644
index 0000000..e21f7a8
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/MaterialProgressDrawable.java
@@ -0,0 +1,791 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.scwang.smartrefreshlayout.internal;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.ColorFilter;
+import android.graphics.Paint;
+import android.graphics.Paint.Style;
+import android.graphics.Path;
+import android.graphics.PixelFormat;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.graphics.drawable.Animatable;
+import android.graphics.drawable.Drawable;
+import android.support.annotation.IntDef;
+import android.support.annotation.NonNull;
+import android.support.v4.view.animation.FastOutSlowInInterpolator;
+import android.util.DisplayMetrics;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.Interpolator;
+import android.view.animation.LinearInterpolator;
+import android.view.animation.Transformation;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.util.ArrayList;
+
+/**
+ * Fancy progress indicator for Material theme.
+ */
+public class MaterialProgressDrawable extends Drawable implements Animatable {
+    private static final Interpolator LINEAR_INTERPOLATOR = new LinearInterpolator();
+    static final Interpolator MATERIAL_INTERPOLATOR = new FastOutSlowInInterpolator();
+
+    private static final float FULL_ROTATION = 1080.0f;
+
+    @Retention(RetentionPolicy.SOURCE)
+    @IntDef({LARGE, DEFAULT})
+    public @interface ProgressDrawableSize {}
+
+    // Maps to ProgressBar.Large style
+    static final int LARGE = 0;
+    // Maps to ProgressBar default style
+    static final int DEFAULT = 1;
+
+    // Maps to ProgressBar default style
+    private static final int CIRCLE_DIAMETER = 40;
+    private static final float CENTER_RADIUS = 8.75f; //should add up to 10 when + stroke_width
+    private static final float STROKE_WIDTH = 2.5f;
+
+    // Maps to ProgressBar.Large style
+    private static final int CIRCLE_DIAMETER_LARGE = 56;
+    private static final float CENTER_RADIUS_LARGE = 12.5f;
+    private static final float STROKE_WIDTH_LARGE = 3f;
+
+    private static final int[] COLORS = new int[] {
+        Color.BLACK
+    };
+
+    /**
+     * The value in the linear interpolator for animating the drawable at which
+     * the color transition should start
+     */
+    private static final float COLOR_START_DELAY_OFFSET = 0.75f;
+    private static final float END_TRIM_START_DELAY_OFFSET = 0.5f;
+    private static final float START_TRIM_DURATION_OFFSET = 0.5f;
+
+    /** The duration of a single progress spin in milliseconds. */
+    private static final int ANIMATION_DURATION = 1332;
+
+    /** The number of points in the progress "star". */
+    private static final float NUM_POINTS = 5f;
+    /** The list of animators operating on this drawable. */
+    private final ArrayList<Animation> mAnimators = new ArrayList<Animation>();
+
+    /** The indicator ring, used to manage animation state. */
+    private final Ring mRing;
+
+    /** Canvas rotation in degrees. */
+    private float mRotation;
+
+    /** Layout info for the arrowhead in dp */
+    private static final int ARROW_WIDTH = 10;
+    private static final int ARROW_HEIGHT = 5;
+    private static final float ARROW_OFFSET_ANGLE = 5;
+
+    /** Layout info for the arrowhead for the large spinner in dp */
+    private static final int ARROW_WIDTH_LARGE = 12;
+    private static final int ARROW_HEIGHT_LARGE = 6;
+    private static final float MAX_PROGRESS_ARC = .8f;
+
+    private Resources mResources;
+    private View mParent;
+    private Animation mAnimation;
+    float mRotationCount;
+    private double mWidth;
+    private double mHeight;
+    boolean mFinishing;
+
+    public MaterialProgressDrawable(Context context, View parent) {
+        mParent = parent;
+        mResources = context.getResources();
+
+        mRing = new Ring(mCallback);
+        mRing.setColors(COLORS);
+
+        updateSizes(DEFAULT);
+        setupAnimators();
+    }
+
+    private void setSizeParameters(double progressCircleWidth, double progressCircleHeight,
+            double centerRadius, double strokeWidth, float arrowWidth, float arrowHeight) {
+        final Ring ring = mRing;
+        final DisplayMetrics metrics = mResources.getDisplayMetrics();
+        final float screenDensity = metrics.density;
+
+        mWidth = progressCircleWidth * screenDensity;
+        mHeight = progressCircleHeight * screenDensity;
+        ring.setStrokeWidth((float) strokeWidth * screenDensity);
+        ring.setCenterRadius(centerRadius * screenDensity);
+        ring.setColorIndex(0);
+        ring.setArrowDimensions(arrowWidth * screenDensity, arrowHeight * screenDensity);
+        ring.setInsets((int) mWidth, (int) mHeight);
+    }
+
+    /**
+     * Set the overall size for the progress spinner. This updates the radius
+     * and stroke width of the ring.
+     *
+     * @param size One of {@link MaterialProgressDrawable.LARGE} or
+     *            {@link MaterialProgressDrawable.DEFAULT}
+     */
+    public void updateSizes(@ProgressDrawableSize int size) {
+        if (size == LARGE) {
+            setSizeParameters(CIRCLE_DIAMETER_LARGE, CIRCLE_DIAMETER_LARGE, CENTER_RADIUS_LARGE,
+                    STROKE_WIDTH_LARGE, ARROW_WIDTH_LARGE, ARROW_HEIGHT_LARGE);
+        } else {
+            setSizeParameters(CIRCLE_DIAMETER, CIRCLE_DIAMETER, CENTER_RADIUS, STROKE_WIDTH,
+                    ARROW_WIDTH, ARROW_HEIGHT);
+        }
+    }
+
+    /**
+     * @param show Set to true to display the arrowhead on the progress spinner.
+     */
+    public void showArrow(boolean show) {
+        mRing.setShowArrow(show);
+    }
+
+    /**
+     * @param scale Set the scale of the arrowhead for the spinner.
+     */
+    public void setArrowScale(float scale) {
+        mRing.setArrowScale(scale);
+    }
+
+    /**
+     * Set the start and end trim for the progress spinner arc.
+     *
+     * @param startAngle start angle
+     * @param endAngle end angle
+     */
+    public void setStartEndTrim(float startAngle, float endAngle) {
+        mRing.setStartTrim(startAngle);
+        mRing.setEndTrim(endAngle);
+    }
+
+    /**
+     * Set the amount of rotation to apply to the progress spinner.
+     *
+     * @param rotation Rotation is from [0..1]
+     */
+    public void setProgressRotation(float rotation) {
+        mRing.setRotation(rotation);
+    }
+
+    /**
+     * Update the background color of the circle image view.
+     */
+    public void setBackgroundColor(int color) {
+        mRing.setBackgroundColor(color);
+    }
+
+    /**
+     * Set the colors used in the progress animation from color resources.
+     * The first color will also be the color of the bar that grows in response
+     * to a user swipe gesture.
+     *
+     * @param colors
+     */
+    public void setColorSchemeColors(int... colors) {
+        mRing.setColors(colors);
+        mRing.setColorIndex(0);
+    }
+
+    @Override
+    public int getIntrinsicHeight() {
+        return (int) mHeight;
+    }
+
+    @Override
+    public int getIntrinsicWidth() {
+        return (int) mWidth;
+    }
+
+    @Override
+    public void draw(Canvas c) {
+        final Rect bounds = getBounds();
+        final int saveCount = c.save();
+        c.rotate(mRotation, bounds.exactCenterX(), bounds.exactCenterY());
+        mRing.draw(c, bounds);
+        c.restoreToCount(saveCount);
+    }
+
+    @Override
+    public void setAlpha(int alpha) {
+        mRing.setAlpha(alpha);
+    }
+
+    public int getAlpha() {
+        return mRing.getAlpha();
+    }
+
+    @Override
+    public void setColorFilter(ColorFilter colorFilter) {
+        mRing.setColorFilter(colorFilter);
+    }
+
+    @SuppressWarnings("unused")
+    void setRotation(float rotation) {
+        mRotation = rotation;
+        invalidateSelf();
+    }
+
+    @SuppressWarnings("unused")
+    private float getRotation() {
+        return mRotation;
+    }
+
+    @Override
+    public int getOpacity() {
+        return PixelFormat.TRANSLUCENT;
+    }
+
+    @Override
+    public boolean isRunning() {
+        final ArrayList<Animation> animators = mAnimators;
+        final int N = animators.size();
+        for (int i = 0; i < N; i++) {
+            final Animation animator = animators.get(i);
+            if (animator.hasStarted() && !animator.hasEnded()) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    @Override
+    public void start() {
+        mAnimation.reset();
+        mRing.storeOriginals();
+        // Already showing some part of the ring
+        if (mRing.getEndTrim() != mRing.getStartTrim()) {
+            mFinishing = true;
+            mAnimation.setDuration(ANIMATION_DURATION / 2);
+            mParent.startAnimation(mAnimation);
+        } else {
+            mRing.setColorIndex(0);
+            mRing.resetOriginals();
+            mAnimation.setDuration(ANIMATION_DURATION);
+            mParent.startAnimation(mAnimation);
+        }
+    }
+
+    @Override
+    public void stop() {
+        mParent.clearAnimation();
+        setRotation(0);
+        mRing.setShowArrow(false);
+        mRing.setColorIndex(0);
+        mRing.resetOriginals();
+    }
+
+    float getMinProgressArc(Ring ring) {
+        return (float) Math.toRadians(
+                ring.getStrokeWidth() / (2 * Math.PI * ring.getCenterRadius()));
+    }
+
+    // Adapted from ArgbEvaluator.java
+    private int evaluateColorChange(float fraction, int startValue, int endValue) {
+        int startInt = (Integer) startValue;
+        int startA = (startInt >> 24) & 0xff;
+        int startR = (startInt >> 16) & 0xff;
+        int startG = (startInt >> 8) & 0xff;
+        int startB = startInt & 0xff;
+
+        int endInt = (Integer) endValue;
+        int endA = (endInt >> 24) & 0xff;
+        int endR = (endInt >> 16) & 0xff;
+        int endG = (endInt >> 8) & 0xff;
+        int endB = endInt & 0xff;
+
+        return (int) ((startA + (int) (fraction * (endA - startA))) << 24)
+                | (int) ((startR + (int) (fraction * (endR - startR))) << 16)
+                | (int) ((startG + (int) (fraction * (endG - startG))) << 8)
+                | (int) ((startB + (int) (fraction * (endB - startB))));
+    }
+
+    /**
+     * Update the ring color if this is within the last 25% of the animation.
+     * The new ring color will be a translation from the starting ring color to
+     * the next color.
+     */
+    void updateRingColor(float interpolatedTime, Ring ring) {
+        if (interpolatedTime > COLOR_START_DELAY_OFFSET) {
+            // scale the interpolatedTime so that the full
+            // transformation from 0 - 1 takes place in the
+            // remaining time
+            ring.setColor(evaluateColorChange((interpolatedTime - COLOR_START_DELAY_OFFSET)
+                    / (1.0f - COLOR_START_DELAY_OFFSET), ring.getStartingColor(),
+                    ring.getNextColor()));
+        }
+    }
+
+    void applyFinishTranslation(float interpolatedTime, Ring ring) {
+        // shrink back down and complete a full rotation before
+        // starting other circles
+        // Rotation goes between [0..1].
+        updateRingColor(interpolatedTime, ring);
+        float targetRotation = (float) (Math.floor(ring.getStartingRotation() / MAX_PROGRESS_ARC)
+                + 1f);
+        final float minProgressArc = getMinProgressArc(ring);
+        final float startTrim = ring.getStartingStartTrim()
+                + (ring.getStartingEndTrim() - minProgressArc - ring.getStartingStartTrim())
+                * interpolatedTime;
+        ring.setStartTrim(startTrim);
+        ring.setEndTrim(ring.getStartingEndTrim());
+        final float rotation = ring.getStartingRotation()
+                + ((targetRotation - ring.getStartingRotation()) * interpolatedTime);
+        ring.setRotation(rotation);
+    }
+
+    private void setupAnimators() {
+        final Ring ring = mRing;
+        final Animation animation = new Animation() {
+                @Override
+            public void applyTransformation(float interpolatedTime, Transformation t) {
+                if (mFinishing) {
+                    applyFinishTranslation(interpolatedTime, ring);
+                } else {
+                    // The minProgressArc is calculated from 0 to create an
+                    // angle that matches the stroke width.
+                    final float minProgressArc = getMinProgressArc(ring);
+                    final float startingEndTrim = ring.getStartingEndTrim();
+                    final float startingTrim = ring.getStartingStartTrim();
+                    final float startingRotation = ring.getStartingRotation();
+
+                    updateRingColor(interpolatedTime, ring);
+
+                    // Moving the start trim only occurs in the first 50% of a
+                    // single ring animation
+                    if (interpolatedTime <= START_TRIM_DURATION_OFFSET) {
+                        // scale the interpolatedTime so that the full
+                        // transformation from 0 - 1 takes place in the
+                        // remaining time
+                        final float scaledTime = (interpolatedTime)
+                                / (1.0f - START_TRIM_DURATION_OFFSET);
+                        final float startTrim = startingTrim
+                                + ((MAX_PROGRESS_ARC - minProgressArc) * MATERIAL_INTERPOLATOR
+                                        .getInterpolation(scaledTime));
+                        ring.setStartTrim(startTrim);
+                    }
+
+                    // Moving the end trim starts after 50% of a single ring
+                    // animation completes
+                    if (interpolatedTime > END_TRIM_START_DELAY_OFFSET) {
+                        // scale the interpolatedTime so that the full
+                        // transformation from 0 - 1 takes place in the
+                        // remaining time
+                        final float minArc = MAX_PROGRESS_ARC - minProgressArc;
+                        float scaledTime = (interpolatedTime - START_TRIM_DURATION_OFFSET)
+                                / (1.0f - START_TRIM_DURATION_OFFSET);
+                        final float endTrim = startingEndTrim
+                                + (minArc * MATERIAL_INTERPOLATOR.getInterpolation(scaledTime));
+                        ring.setEndTrim(endTrim);
+                    }
+
+                    final float rotation = startingRotation + (0.25f * interpolatedTime);
+                    ring.setRotation(rotation);
+
+                    float groupRotation = ((FULL_ROTATION / NUM_POINTS) * interpolatedTime)
+                            + (FULL_ROTATION * (mRotationCount / NUM_POINTS));
+                    setRotation(groupRotation);
+                }
+            }
+        };
+        animation.setRepeatCount(Animation.INFINITE);
+        animation.setRepeatMode(Animation.RESTART);
+        animation.setInterpolator(LINEAR_INTERPOLATOR);
+        animation.setAnimationListener(new Animation.AnimationListener() {
+
+                @Override
+            public void onAnimationStart(Animation animation) {
+                mRotationCount = 0;
+            }
+
+                @Override
+            public void onAnimationEnd(Animation animation) {
+                // do nothing
+            }
+
+                @Override
+            public void onAnimationRepeat(Animation animation) {
+                ring.storeOriginals();
+                ring.goToNextColor();
+                ring.setStartTrim(ring.getEndTrim());
+                if (mFinishing) {
+                    // finished closing the last ring from the swipe gesture; go
+                    // into progress mode
+                    mFinishing = false;
+                    animation.setDuration(ANIMATION_DURATION);
+                    ring.setShowArrow(false);
+                } else {
+                    mRotationCount = (mRotationCount + 1) % (NUM_POINTS);
+                }
+            }
+        });
+        mAnimation = animation;
+    }
+
+    private final Callback mCallback = new Callback() {
+        @Override
+        public void invalidateDrawable(Drawable d) {
+            invalidateSelf();
+        }
+
+        @Override
+        public void scheduleDrawable(Drawable d, Runnable what, long when) {
+            scheduleSelf(what, when);
+        }
+
+        @Override
+        public void unscheduleDrawable(Drawable d, Runnable what) {
+            unscheduleSelf(what);
+        }
+    };
+
+    private static class Ring {
+        private final RectF mTempBounds = new RectF();
+        private final Paint mPaint = new Paint();
+        private final Paint mArrowPaint = new Paint();
+
+        private final Callback mCallback;
+
+        private float mStartTrim = 0.0f;
+        private float mEndTrim = 0.0f;
+        private float mRotation = 0.0f;
+        private float mStrokeWidth = 5.0f;
+        private float mStrokeInset = 2.5f;
+
+        private int[] mColors;
+        // mColorIndex represents the offset into the available mColors that the
+        // progress circle should currently display. As the progress circle is
+        // animating, the mColorIndex moves by one to the next available color.
+        private int mColorIndex;
+        private float mStartingStartTrim;
+        private float mStartingEndTrim;
+        private float mStartingRotation;
+        private boolean mShowArrow;
+        private Path mArrow;
+        private float mArrowScale;
+        private double mRingCenterRadius;
+        private int mArrowWidth;
+        private int mArrowHeight;
+        private int mAlpha;
+        private final Paint mCirclePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private int mBackgroundColor;
+        private int mCurrentColor;
+
+        Ring(Callback callback) {
+            mCallback = callback;
+
+            mPaint.setStrokeCap(Paint.Cap.SQUARE);
+            mPaint.setAntiAlias(true);
+            mPaint.setStyle(Style.STROKE);
+
+            mArrowPaint.setStyle(Style.FILL);
+            mArrowPaint.setAntiAlias(true);
+        }
+
+        public void setBackgroundColor(int color) {
+            mBackgroundColor = color;
+        }
+
+        /**
+         * Set the dimensions of the arrowhead.
+         *
+         * @param width Width of the hypotenuse of the arrow head
+         * @param height Height of the arrow point
+         */
+        public void setArrowDimensions(float width, float height) {
+            mArrowWidth = (int) width;
+            mArrowHeight = (int) height;
+        }
+
+        /**
+         * Draw the progress spinner
+         */
+        public void draw(Canvas c, Rect bounds) {
+            final RectF arcBounds = mTempBounds;
+            arcBounds.set(bounds);
+            arcBounds.inset(mStrokeInset, mStrokeInset);
+
+            final float startAngle = (mStartTrim + mRotation) * 360;
+            final float endAngle = (mEndTrim + mRotation) * 360;
+            float sweepAngle = endAngle - startAngle;
+
+            mPaint.setColor(mCurrentColor);
+            c.drawArc(arcBounds, startAngle, sweepAngle, false, mPaint);
+
+            drawTriangle(c, startAngle, sweepAngle, bounds);
+
+            if (mAlpha < 255) {
+                mCirclePaint.setColor(mBackgroundColor);
+                mCirclePaint.setAlpha(255 - mAlpha);
+                c.drawCircle(bounds.exactCenterX(), bounds.exactCenterY(), bounds.width() / 2,
+                        mCirclePaint);
+            }
+        }
+
+        private void drawTriangle(Canvas c, float startAngle, float sweepAngle, Rect bounds) {
+            if (mShowArrow) {
+                if (mArrow == null) {
+                    mArrow = new Path();
+                    mArrow.setFillType(Path.FillType.EVEN_ODD);
+                } else {
+                    mArrow.reset();
+                }
+
+                // Adjust the position of the triangle so that it is inset as
+                // much as the arc, but also centered on the arc.
+                float inset = (int) mStrokeInset / 2 * mArrowScale;
+                float x = (float) (mRingCenterRadius * Math.cos(0) + bounds.exactCenterX());
+                float y = (float) (mRingCenterRadius * Math.sin(0) + bounds.exactCenterY());
+
+                // Update the path each time. This works around an issue in SKIA
+                // where concatenating a rotation matrix to a scale matrix
+                // ignored a starting negative rotation. This appears to have
+                // been fixed as of API 21.
+                mArrow.moveTo(0, 0);
+                mArrow.lineTo(mArrowWidth * mArrowScale, 0);
+                mArrow.lineTo((mArrowWidth * mArrowScale / 2), (mArrowHeight
+                        * mArrowScale));
+                mArrow.offset(x - inset, y);
+                mArrow.close();
+                // draw a triangle
+                mArrowPaint.setColor(mCurrentColor);
+                c.rotate(startAngle + sweepAngle - ARROW_OFFSET_ANGLE, bounds.exactCenterX(),
+                        bounds.exactCenterY());
+                c.drawPath(mArrow, mArrowPaint);
+            }
+        }
+
+        /**
+         * Set the colors the progress spinner alternates between.
+         *
+         * @param colors Array of integers describing the colors. Must be non-<code>null</code>.
+         */
+        public void setColors(@NonNull int[] colors) {
+            mColors = colors;
+            // if colors are reset, make sure to reset the color index as well
+            setColorIndex(0);
+        }
+
+        /**
+         * Set the absolute color of the progress spinner. This is should only
+         * be used when animating between current and next color when the
+         * spinner is rotating.
+         *
+         * @param color int describing the color.
+         */
+        public void setColor(int color) {
+            mCurrentColor = color;
+        }
+
+        /**
+         * @param index Index into the color array of the color to display in
+         *            the progress spinner.
+         */
+        public void setColorIndex(int index) {
+            mColorIndex = index;
+            mCurrentColor = mColors[mColorIndex];
+        }
+
+        /**
+         * @return int describing the next color the progress spinner should use when drawing.
+         */
+        public int getNextColor() {
+            return mColors[getNextColorIndex()];
+        }
+
+        private int getNextColorIndex() {
+            return (mColorIndex + 1) % (mColors.length);
+        }
+
+        /**
+         * Proceed to the next available ring color. This will automatically
+         * wrap back to the beginning of colors.
+         */
+        public void goToNextColor() {
+            setColorIndex(getNextColorIndex());
+        }
+
+        public void setColorFilter(ColorFilter filter) {
+            mPaint.setColorFilter(filter);
+            invalidateSelf();
+        }
+
+        /**
+         * @param alpha Set the alpha of the progress spinner and associated arrowhead.
+         */
+        public void setAlpha(int alpha) {
+            mAlpha = alpha;
+        }
+
+        /**
+         * @return Current alpha of the progress spinner and arrowhead.
+         */
+        public int getAlpha() {
+            return mAlpha;
+        }
+
+        /**
+         * @param strokeWidth Set the stroke width of the progress spinner in pixels.
+         */
+        public void setStrokeWidth(float strokeWidth) {
+            mStrokeWidth = strokeWidth;
+            mPaint.setStrokeWidth(strokeWidth);
+            invalidateSelf();
+        }
+
+        @SuppressWarnings("unused")
+        public float getStrokeWidth() {
+            return mStrokeWidth;
+        }
+
+        @SuppressWarnings("unused")
+        public void setStartTrim(float startTrim) {
+            mStartTrim = startTrim;
+            invalidateSelf();
+        }
+
+        @SuppressWarnings("unused")
+        public float getStartTrim() {
+            return mStartTrim;
+        }
+
+        public float getStartingStartTrim() {
+            return mStartingStartTrim;
+        }
+
+        public float getStartingEndTrim() {
+            return mStartingEndTrim;
+        }
+
+        public int getStartingColor() {
+            return mColors[mColorIndex];
+        }
+
+        @SuppressWarnings("unused")
+        public void setEndTrim(float endTrim) {
+            mEndTrim = endTrim;
+            invalidateSelf();
+        }
+
+        @SuppressWarnings("unused")
+        public float getEndTrim() {
+            return mEndTrim;
+        }
+
+        @SuppressWarnings("unused")
+        public void setRotation(float rotation) {
+            mRotation = rotation;
+            invalidateSelf();
+        }
+
+        @SuppressWarnings("unused")
+        public float getRotation() {
+            return mRotation;
+        }
+
+        public void setInsets(int width, int height) {
+            final float minEdge = (float) Math.min(width, height);
+            float insets;
+            if (mRingCenterRadius <= 0 || minEdge < 0) {
+                insets = (float) Math.ceil(mStrokeWidth / 2.0f);
+            } else {
+                insets = (float) (minEdge / 2.0f - mRingCenterRadius);
+            }
+            mStrokeInset = insets;
+        }
+
+        @SuppressWarnings("unused")
+        public float getInsets() {
+            return mStrokeInset;
+        }
+
+        /**
+         * @param centerRadius Inner radius in px of the circle the progress
+         *            spinner arc traces.
+         */
+        public void setCenterRadius(double centerRadius) {
+            mRingCenterRadius = centerRadius;
+        }
+
+        public double getCenterRadius() {
+            return mRingCenterRadius;
+        }
+
+        /**
+         * @param show Set to true to show the arrow head on the progress spinner.
+         */
+        public void setShowArrow(boolean show) {
+            if (mShowArrow != show) {
+                mShowArrow = show;
+                invalidateSelf();
+            }
+        }
+
+        /**
+         * @param scale Set the scale of the arrowhead for the spinner.
+         */
+        public void setArrowScale(float scale) {
+            if (scale != mArrowScale) {
+                mArrowScale = scale;
+                invalidateSelf();
+            }
+        }
+
+        /**
+         * @return The amount the progress spinner is currently rotated, between [0..1].
+         */
+        public float getStartingRotation() {
+            return mStartingRotation;
+        }
+
+        /**
+         * If the start / end trim are offset to begin with, store them so that
+         * animation starts from that offset.
+         */
+        public void storeOriginals() {
+            mStartingStartTrim = mStartTrim;
+            mStartingEndTrim = mEndTrim;
+            mStartingRotation = mRotation;
+        }
+
+        /**
+         * Reset the progress spinner to default rotation, start and end angles.
+         */
+        public void resetOriginals() {
+            mStartingStartTrim = 0;
+            mStartingEndTrim = 0;
+            mStartingRotation = 0;
+            setStartTrim(0);
+            setEndTrim(0);
+            setRotation(0);
+        }
+
+        private void invalidateSelf() {
+            mCallback.invalidateDrawable(null);
+        }
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Box.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Box.java
new file mode 100644
index 0000000..a574561
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Box.java
@@ -0,0 +1,42 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+import android.graphics.RectF;
+
+public class Box implements Cloneable {
+
+    public float minX, minY, width, height;
+
+    public Box(float minX, float minY, float width, float height) {
+        this.minX = minX;
+        this.minY = minY;
+        this.width = width;
+        this.height = height;
+    }
+
+    public static Box fromLimits(float minX, float minY, float maxX, float maxY) {
+        return new Box(minX, minY, maxX - minX, maxY - minY);
+    }
+
+    public RectF toRectF() {
+        return new RectF(minX, minY, maxX(), maxY());
+    }
+
+    public float maxX() {
+        return minX + width;
+    }
+
+    public float maxY() {
+        return minY + height;
+    }
+
+    public void union(Box other) {
+        if (other.minX < minX) minX = other.minX;
+        if (other.minY < minY) minY = other.minY;
+        if (other.maxX() > maxX()) width = other.maxX() - minX;
+        if (other.maxY() > maxY()) height = other.maxY() - minY;
+    }
+
+    public String toString() {
+        return "[" + minX + " " + minY + " " + width + " " + height + "]";
+    }
+}
\ No newline at end of file
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/IntegerParser.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/IntegerParser.java
new file mode 100644
index 0000000..e492794
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/IntegerParser.java
@@ -0,0 +1,177 @@
+/*
+   Copyright 2014 Paul LeBeau, Cave Rock Software Ltd.
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+*/
+
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+/**
+ * Parse a SVG/CSS 'integer' or hex number from a String.
+ * 
+ * We use our own parser to gain a bit of speed.  This routine is
+ * around twice as fast as the system one.
+ * 
+ */
+
+public class IntegerParser
+{
+   int      pos;
+   boolean  isNegative;
+   long     value;
+
+
+   public  IntegerParser(boolean isNegative, long value, int pos)
+   {
+      this.isNegative = isNegative;
+      this.value = value;
+      this.pos = pos;
+   }
+
+
+   /*
+    * Return the value of pos after the parse.
+    */
+   public int  getEndPos()
+   {
+      return this.pos;
+   }
+
+
+   /*
+    * Scan the string for an SVG integer.
+    */
+   public static IntegerParser  parseInt(String str)
+   {
+      return parseInt(str, 0, str.length());
+   }
+
+
+   /*
+    * Scan the string for an SVG integer.
+    * Assumes maxPos will not be greater than input.length().
+    */
+   public static IntegerParser  parseInt(String input, int startpos, int len)
+   {
+      int      pos = startpos;
+      boolean  isNegative = false;
+      long     value = 0;
+      int      sigStart = 0;
+
+
+      if (pos >= len)
+        return null;  // String is empty - no number found
+
+      char  ch = input.charAt(pos);
+      switch (ch) {
+         case '-': isNegative = true;
+                   // fall through
+         case '+': pos++;
+      }
+
+      sigStart = pos;
+
+      while (pos < len)
+      {
+         ch = input.charAt(pos);
+         if (ch >= '0' && ch <= '9')
+         {
+            if (isNegative) {
+               value = value * 10 - ((int)ch - (int)'0');
+               if (value < Integer.MIN_VALUE)
+                  return null;
+            } else {
+               value = value * 10 + ((int)ch - (int)'0');
+               if (value > Integer.MAX_VALUE)
+                  return null;
+            }
+         }
+         else
+            break;
+         pos++;
+      }
+
+      // Have we seen anything number-ish at all so far?
+      if (pos == sigStart) {
+         return null;
+      }
+
+      return new IntegerParser(isNegative, value, pos);
+   }
+
+
+   /*
+    * Return the parsed value as an actual float.
+    */
+   public int  value()
+   {
+      return (int)value;
+   }
+
+
+   /*
+    * Scan the string for an SVG hex integer.
+    */
+   public static IntegerParser  parseHex(String str)
+   {
+      return parseHex(str, 0, str.length());
+   }
+
+
+   /*
+    * Scan the string for an SVG hex integer.
+    * Assumes maxPos will not be greater than input.length().
+    */
+   public static IntegerParser  parseHex(String input, int startpos, int len)
+   {
+      int   pos = startpos;
+      long  value = 0;
+      char  ch;
+
+
+      if (pos >= len)
+        return null;  // String is empty - no number found
+
+      while (pos < len)
+      {
+         ch = input.charAt(pos);
+         if (ch >= '0' && ch <= '9')
+         {
+            value = value * 16 + ((int)ch - (int)'0');
+         }
+         else if (ch >= 'A' && ch <= 'F')
+         {
+            value = value * 16 + ((int)ch - (int)'A') + 10;
+         }
+         else if (ch >= 'a' && ch <= 'f')
+         {
+            value = value * 16 + ((int)ch - (int)'a') + 10;
+         }
+         else
+            break;
+
+         if (value > 0xffffffffL)
+            return null;
+
+         pos++;
+      }
+
+      // Have we seen anything number-ish at all so far?
+      if (pos == startpos) {
+         return null;
+      }
+
+      return new IntegerParser(false, value, pos);
+   }
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Length.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Length.java
new file mode 100644
index 0000000..9753984
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Length.java
@@ -0,0 +1,66 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+class Length implements Cloneable
+    {
+        float  value = 0;
+        Unit unit = Unit.px;
+
+        public Length(float value, Unit unit)
+        {
+            this.value = value;
+            this.unit = unit;
+        }
+
+        public Length(float value)
+        {
+            this.value = value;
+            this.unit = Unit.px;
+        }
+
+        public float floatValue()
+        {
+            return value;
+        }
+
+        // For situations (like calculating the initial viewport) when we can only rely on
+        // physical real world units.
+        public float floatValue(float dpi)
+        {
+            switch (unit)
+            {
+                case px:
+                    return value;
+                case in:
+                    return value * dpi;
+                case cm:
+                    return value * dpi / 2.54f;
+                case mm:
+                    return value * dpi / 25.4f;
+                case pt: // 1 point = 1/72 in
+                    return value * dpi / 72f;
+                case pc: // 1 pica = 1/6 in
+                    return value * dpi / 6f;
+                case em:
+                case ex:
+                case percent:
+                default:
+                    return value;
+            }
+        }
+
+        public boolean isZero()
+        {
+            return value == 0f;
+        }
+
+        public boolean isNegative()
+        {
+            return value < 0f;
+        }
+
+        @Override
+        public String toString()
+        {
+            return String.valueOf(value) + unit;
+        }
+    }
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/NumberParser.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/NumberParser.java
new file mode 100644
index 0000000..760e964
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/NumberParser.java
@@ -0,0 +1,280 @@
+/*
+   Copyright 2014 Paul LeBeau, Cave Rock Software Ltd.
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+*/
+
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+/**
+ * Parse a SVG 'number' or a CSS 'number' from a String.
+ * 
+ * We use our own parser because the one in Android (from Harmony I think) is slow.
+ * 
+ * An SVG 'number' is defined as
+ *   integer ([Ee] integer)?
+ *   | [+-]? [0-9]* "." [0-9]+ ([Ee] integer)?
+ * Where 'integer' is
+ *   [+-]? [0-9]+
+ * CSS numbers were different, but have now been updated to a compatible definition (see 2.1 Errata)
+ *   [+-]?([0-9]+|[0-9]*\.[0-9]+)(e[+-]?[0-9]+)?
+ * 
+ */
+
+public class NumberParser
+{
+   int      pos;
+
+   static long  TOO_BIG = Long.MAX_VALUE / 10;
+
+
+   /*
+    * Return the value of pos after the parse.
+    */
+   public int  getEndPos()
+   {
+      return this.pos;
+   }
+
+
+   /*
+    * Scan the string for an SVG number.
+    */
+   public float  parseNumber(String str)
+   {
+      return parseNumber(str, 0, str.length());
+   }
+
+
+   /*
+    * Scan the string for an SVG number.
+    * Assumes maxPos will not be greater than str.length().
+    */
+   public float  parseNumber(String input, int startpos, int len)
+   {
+      boolean  isNegative = false;
+      long     significand = 0;
+      int      numDigits = 0;
+      int      numLeadingZeroes = 0;
+      int      numTrailingZeroes = 0;
+      boolean  decimalSeen = false;
+      int      sigStart = 0;
+      int      decimalPos = 0;
+      int      exponent = 0;
+
+      pos = startpos;
+
+      if (pos >= len)
+        return Float.NaN;  // String is empty - no number found
+
+      char  ch = input.charAt(pos);
+      switch (ch) {
+         case '-': isNegative = true;
+                   // fall through
+         case '+': pos++;
+      }
+
+      sigStart = pos;
+
+      while (pos < len)
+      {
+         ch = input.charAt(pos);
+         if (ch == '0')
+         {
+            if (numDigits == 0) {
+               numLeadingZeroes++;
+            } else {
+               // We potentially skip trailing zeroes. Keep count for now.
+               numTrailingZeroes++;
+            }
+         }
+         else if (ch >= '1' && ch <= '9')
+         {
+            // Multiply any skipped zeroes into buffer
+            numDigits += numTrailingZeroes;
+            while (numTrailingZeroes > 0) {
+               if (significand > TOO_BIG) {
+                  //Log.e("Number is too large");
+                  return Float.NaN;
+               }
+               significand *= 10;
+               numTrailingZeroes--;
+            }
+
+            if (significand > TOO_BIG) {
+               // We will overflow if we continue...
+               //Log.e("Number is too large");
+               return Float.NaN;
+            }
+            significand = significand * 10 + ((int)ch - (int)'0');
+            numDigits++;
+            
+            if (significand < 0)
+               return Float.NaN;  // overflowed from +ve to -ve
+         }
+         else if (ch == '.')
+         {
+            if (decimalSeen) {
+               // Stop parsing here.  We may be looking at a new number.
+               break;
+            }
+            decimalPos = pos - sigStart;
+            decimalSeen = true;
+         }
+         else
+            break;
+         pos++;
+      }
+
+      if (decimalSeen && pos == (decimalPos + 1)) {
+         // No digits following decimal point (eg. "1.")
+         //Log.e("Missing fraction part of number");
+         return Float.NaN;
+      }
+
+      // Have we seen anything number-ish at all so far?
+      if (numDigits == 0) {
+         if (numLeadingZeroes == 0) {
+            //Log.e("Number not found");
+            return Float.NaN;
+         }
+         // Leading zeroes have been seen though, so we
+         // treat that as a '0'.
+         numDigits = 1;
+      }
+
+      if (decimalSeen) {
+         exponent = decimalPos - numLeadingZeroes - numDigits;
+      } else {
+         exponent = numTrailingZeroes;
+      }
+
+      // Now look for exponent
+      if (pos < len)
+      {
+         ch = input.charAt(pos);
+         if (ch == 'E' || ch == 'e')
+         {
+            boolean  expIsNegative = false;
+            int      expVal = 0;
+            boolean  abortExponent = false;
+
+            pos++;
+            if (pos == len) {
+               // Incomplete exponent.
+               //Log.e("Incomplete exponent of number");
+               return Float.NaN;
+            }
+
+            switch (input.charAt(pos)) {
+               case '-': expIsNegative = true;
+                  // fall through
+               case '+': pos++;
+                  break;
+               case '0': case '1': case '2': case '3': case '4':
+               case '5': case '6': case '7': case '8': case '9':
+                   break; // acceptable next char
+               default:
+                  // any other character is a failure, ie no exponent.
+                  // Could be something legal like "em" though.
+                  abortExponent = true;
+                  pos--;  // reset pos to position of 'E'/'e'
+            }
+
+            if (!abortExponent)
+            {
+               int  expStart = pos;
+
+               while (pos < len)
+               {
+                  ch = input.charAt(pos);
+                  if (ch >= '0' && ch <= '9')
+                  {
+                     if (expVal > TOO_BIG) {
+                        // We will overflow if we continue...
+                        //Log.e("Exponent of number is too large");
+                        return Float.NaN;
+                     }
+                     expVal = expVal * 10 + ((int)ch - (int)'0');
+                     pos++;
+                  }
+                  else
+                     break;
+               }
+
+               // Check that at least some exponent digits were read
+               if (pos == expStart) {
+                  //Log.e(""Incomplete exponent of number"");
+                  return Float.NaN;
+               }
+
+               if (expIsNegative)
+                  exponent -= expVal;
+               else
+                  exponent += expVal;
+            }
+         }
+      }
+
+      // Quick check to eliminate huge exponents.
+      // Biggest float is (2 - 2^23) . 2^127 ~== 3.4e38
+      // Biggest negative float is 2^-149 ~== 1.4e-45
+      // Some numbers that will overflow will get through the scan
+      // and be returned as 'valid', yet fail when value() is called.
+      // However they will be very rare and not worth slowing down
+      // the parse for.
+      if ((exponent + numDigits) > 39 || (exponent + numDigits) < -44)
+         return Float.NaN;
+
+      float  f = (float) significand;
+
+      if (significand != 0)
+      {
+         // Do exponents > 0
+         if (exponent > 0)
+         {
+            f *= positivePowersOf10[exponent];
+         }
+         else if (exponent < 0)
+         {
+            // Some valid numbers can have an exponent greater than the max (ie. < -38)
+            // for a float.  For example, significand=123, exponent=-40
+            // If that's the case, we need to apply the exponent in two steps.
+            if (exponent < -38) {
+               // Long.MAX_VALUE is 19 digits, so taking 20 off the exponent should be enough. 
+               f *= 1e-20;
+               exponent += 20;
+            }
+            // Do exponents < 0
+            f *= negativePowersOf10[-exponent];
+         }
+      }
+
+      return (isNegative) ? -f : f;
+   }
+
+
+   private static final float  positivePowersOf10[] = {
+      1e0f,  1e1f,  1e2f,  1e3f,  1e4f,  1e5f,  1e6f,  1e7f,  1e8f,  1e9f,
+      1e10f, 1e11f, 1e12f, 1e13f, 1e14f, 1e15f, 1e16f, 1e17f, 1e18f, 1e19f,
+      1e20f, 1e21f, 1e22f, 1e23f, 1e24f, 1e25f, 1e26f, 1e27f, 1e28f, 1e29f,
+      1e30f, 1e31f, 1e32f, 1e33f, 1e34f, 1e35f, 1e36f, 1e37f, 1e38f
+   };
+   private static final float  negativePowersOf10[] = {
+      1e0f,   1e-1f,  1e-2f,  1e-3f,  1e-4f,  1e-5f,  1e-6f,  1e-7f,  1e-8f,  1e-9f,
+      1e-10f, 1e-11f, 1e-12f, 1e-13f, 1e-14f, 1e-15f, 1e-16f, 1e-17f, 1e-18f, 1e-19f,
+      1e-20f, 1e-21f, 1e-22f, 1e-23f, 1e-24f, 1e-25f, 1e-26f, 1e-27f, 1e-28f, 1e-29f,
+      1e-30f, 1e-31f, 1e-32f, 1e-33f, 1e-34f, 1e-35f, 1e-36f, 1e-37f, 1e-38f
+   };
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsDrawable.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsDrawable.java
new file mode 100644
index 0000000..35f9126
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsDrawable.java
@@ -0,0 +1,166 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+import android.graphics.Canvas;
+import android.graphics.ColorFilter;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.PixelFormat;
+import android.graphics.Rect;
+import android.graphics.Region;
+import android.graphics.drawable.Drawable;
+import android.support.annotation.NonNull;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.scwang.smartrefreshlayout.internal.pathview.TextScanner.parserPath;
+
+/**
+ * 路径
+ * Created by SCWANG on 2017/6/1.
+ */
+
+public class PathsDrawable extends Drawable {
+
+    private Paint mPaint;
+    private List<Path> mPaths;
+    private List<Integer> mColors;
+    private int mWidth = 1,mHeight = 1;
+    private int mStartX = 0,mStartY = 0;
+    private static final Region REGION = new Region();
+    private static final Region MAX_CLIP = new Region(Integer.MIN_VALUE,
+            Integer.MIN_VALUE,Integer.MAX_VALUE, Integer.MAX_VALUE);
+    private String[] mOrginPaths;
+
+    public PathsDrawable() {
+        mPaint = new Paint();
+        mPaint.setColor(0xff11bbff);
+        mPaint.setAntiAlias(true);
+    }
+
+    protected void onMeasure() {
+        int suggestedMinimumWidth = 1;
+        int suggestedMinimumHeight = 1;
+        mWidth = mHeight = 1;
+        mStartX = mStartY = -1;
+        if (mPaths != null) {
+            for (Path path : mPaths) {
+                REGION.setPath(path, MAX_CLIP);
+                Rect bounds = REGION.getBounds();
+                if (suggestedMinimumWidth < bounds.width()) {
+                    mWidth = suggestedMinimumWidth = bounds.width();
+                }
+                if (suggestedMinimumHeight < bounds.height()) {
+                    mHeight = suggestedMinimumHeight = bounds.height();
+                }
+                if (mStartX == -1 || mStartX > bounds.left) {
+                    mStartX = bounds.left;
+                }
+                if (mStartY == -1 || mStartY > bounds.top) {
+                    mStartY = bounds.top;
+                }
+            }
+        }
+        if (mStartX == -1) {
+            mStartX = 0;
+        }
+        if (mStartY == -1) {
+            mStartY = 0;
+        }
+        super.setBounds(0, 0, mWidth, mHeight);
+    }
+
+    @Override
+    public void setBounds(int left, int top, int right, int bottom) {
+        this.setBounds(new Rect(left, top, right, bottom));
+    }
+
+    @Override
+    public void setBounds(@NonNull Rect bounds) {
+        if (mOrginPaths != null && mOrginPaths.length > 0) {
+            if (bounds.width() != mWidth || bounds.height() != mHeight) {
+                float ratioWidth = 1f * bounds.width() / mWidth;
+                float ratioHeight = 1f * bounds.height() / mHeight;
+                String[] paths = zoomPaths(mOrginPaths, ratioWidth, ratioHeight);
+                mPaths = new ArrayList<>();
+                for (String path : paths) {
+                    Path parser = parserPath(path);
+                    mPaths.add(parser);
+                }
+                onMeasure();
+            }
+        }
+    }
+
+    private String[] zoomPaths(String[] paths, float ratioWidth, float ratioHeight) {
+        String[] outpaths = new String[paths.length];
+        for (int i = 0; i < paths.length; i++) {
+            outpaths[i] = zoomPath(paths[i], ratioWidth, ratioHeight);
+        }
+        return outpaths;
+    }
+
+    private String zoomPath(String path, float ratioWidth, float ratioHeight) {
+        return TextScanner.zoomPath(path, ratioWidth, ratioHeight).toString();
+    }
+
+    public void parserPaths(String... paths) {
+        mOrginPaths = paths;
+        mPaths = new ArrayList<>();
+        for (String path : paths) {
+            Path parser = parserPath(path);
+            mPaths.add(parser);
+        }
+        onMeasure();
+    }
+
+    public void parserColors(int... colors) {
+        mColors = new ArrayList<>();
+        for (int color : colors) {
+            mColors.add(color);
+        }
+    }
+
+    @Override
+    public void draw(@NonNull Canvas canvas) {
+        canvas.save();
+        Rect bounds = getBounds();
+        int width = bounds.width();
+        int height = bounds.height();
+        canvas.translate(bounds.left, bounds.top);
+        canvas.scale(1f * width / mWidth, 1f * height / mHeight);
+        canvas.translate(-mStartX, -mStartY);
+        if (mPaths != null) {
+            for (int i = 0; i < mPaths.size(); i++) {
+                if (mColors != null && i < mColors.size()) {
+                    mPaint.setColor(mColors.get(i));
+                }
+                canvas.drawPath(mPaths.get(i), mPaint);
+            }
+        }
+        canvas.restore();
+    }
+
+    @Override
+    public void setAlpha(int alpha) {
+        mPaint.setAlpha(alpha);
+    }
+
+    @Override
+    public void setColorFilter(ColorFilter cf) {
+        mPaint.setColorFilter(cf);
+    }
+
+    @Override
+    public int getOpacity() {
+        return PixelFormat.TRANSLUCENT;
+    }
+
+    public int width() {
+        return getBounds().width();
+    }
+
+    public int height() {
+        return getBounds().height();
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsView.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsView.java
new file mode 100644
index 0000000..f62e272
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/PathsView.java
@@ -0,0 +1,130 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.Rect;
+import android.graphics.Region;
+import android.util.AttributeSet;
+import android.view.View;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.scwang.smartrefreshlayout.internal.pathview.TextScanner.parserPath;
+
+/**
+ * 路径视图
+ * Created by SCWANG on 2017/5/29.
+ */
+
+public class PathsView extends View {
+
+    private Paint mPaint;
+    private List<Path> mPaths;
+    private List<Integer> mColors;
+    private int mWidth = 1,mHeight = 1;
+    private int mStartX = 0,mStartY = 0;
+    private static final Region REGION = new Region();
+    private static final Region MAX_CLIP = new Region(Integer.MIN_VALUE,
+            Integer.MIN_VALUE,Integer.MAX_VALUE, Integer.MAX_VALUE);
+
+    public PathsView(Context context) {
+        super(context);
+        this.init(context, null, 0);
+    }
+
+    public PathsView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        this.init(context, attrs, 0);
+    }
+
+    public PathsView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        this.init(context, attrs, defStyleAttr);
+    }
+
+    private void init(Context context, AttributeSet attrs, int defStyleAttr) {
+        mPaint = new Paint();
+        mPaint.setColor(0xffffbb11);
+        mPaint.setAntiAlias(true);
+    }
+
+    @Override
+    protected void onFinishInflate() {
+        super.onFinishInflate();
+        if (getTag() instanceof String) {
+            parserPaths(getTag().toString());
+        }
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        int suggestedMinimumWidth = 1;
+        int suggestedMinimumHeight = 1;
+        mWidth = mHeight = 1;
+        mStartX = mStartY = 0;
+        if (mPaths != null) {
+            for (Path path : mPaths) {
+                REGION.setPath(path, MAX_CLIP);
+                Rect bounds = REGION.getBounds();
+                if (suggestedMinimumWidth < bounds.width()) {
+                    mWidth = suggestedMinimumWidth = bounds.width();
+                }
+                if (suggestedMinimumHeight < bounds.height()) {
+                    mHeight = suggestedMinimumHeight = bounds.height();
+                }
+                if (mStartX == 0 || mStartX > bounds.left) {
+                    mStartX = bounds.left;
+                }
+                if (mStartY == 0 || mStartY > bounds.top) {
+                    mStartY = bounds.top;
+                }
+            }
+        }
+        setMeasuredDimension(getDefaultSize(suggestedMinimumWidth+getPaddingLeft()+getPaddingRight(), widthMeasureSpec),
+                getDefaultSize(suggestedMinimumHeight+getPaddingTop()+getPaddingBottom(), heightMeasureSpec));
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        canvas.save();
+        final int paddingLeft = getPaddingLeft();
+        final int paddingRight = getPaddingRight();
+        final int paddingTop = getPaddingTop();
+        final int paddingBottom = getPaddingBottom();
+        int width = getWidth() - paddingLeft - paddingRight;
+        int height = getHeight() - paddingTop - paddingBottom;
+        canvas.translate(paddingLeft,paddingRight);
+        canvas.scale(1f * width / mWidth, 1f * height / mHeight);
+        canvas.translate(-mStartX, -mStartY);
+        if (mPaths != null) {
+            for (int i = 0; i < mPaths.size(); i++) {
+                if (mColors != null && i < mColors.size()) {
+                    mPaint.setColor(mColors.get(i));
+                }
+                canvas.drawPath(mPaths.get(i), mPaint);
+            }
+        }
+        canvas.restore();
+    }
+
+    public void parserPaths(String... paths) {
+        mPaths = new ArrayList<>();
+        for (String path : paths) {
+            Path parser = parserPath(path);
+            mPaths.add(parser);
+        }
+    }
+
+    public void parserColors(int... colors) {
+        mColors = new ArrayList<>();
+        for (int color : colors) {
+            mColors.add(color);
+        }
+    }
+
+
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/TextScanner.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/TextScanner.java
new file mode 100644
index 0000000..5766f1f
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/TextScanner.java
@@ -0,0 +1,706 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+import android.graphics.Path;
+import android.graphics.RectF;
+
+import java.util.Locale;
+
+class TextScanner {
+
+    protected String input;
+    protected int position = 0;
+    protected int inputLength = 0;
+
+    private NumberParser numberParser = new NumberParser();
+
+
+    public TextScanner(String input) {
+        this.input = input.trim();
+        this.inputLength = this.input.length();
+    }
+
+    /**
+     * Returns true if we have reached the end of the input.
+     */
+    public boolean empty() {
+        return (position == inputLength);
+    }
+
+    protected boolean isWhitespace(int c) {
+        return (c == ' ' || c == '\n' || c == '\r' || c == '\t');
+    }
+
+    public void skipWhitespace() {
+        while (position < inputLength) {
+            if (!isWhitespace(input.charAt(position)))
+                break;
+            position++;
+        }
+    }
+
+    protected boolean isEOL(int c) {
+        return (c == '\n' || c == '\r');
+    }
+
+    // Skip the sequence: <space>*(<comma><space>)?
+    // Returns true if we found a comma in there.
+    public boolean skipCommaWhitespace() {
+        skipWhitespace();
+        if (position == inputLength)
+            return false;
+        if (!(input.charAt(position) == ','))
+            return false;
+        position++;
+        skipWhitespace();
+        return true;
+    }
+
+
+    public float nextFloat() {
+        float val = numberParser.parseNumber(input, position, inputLength);
+        if (!Float.isNaN(val))
+            position = numberParser.getEndPos();
+        return val;
+    }
+
+    /*
+     * Scans for a comma-whitespace sequence with a float following it.
+     * If found, the float is returned. Otherwise null is returned and
+     * the scan position left as it was.
+     */
+    public float possibleNextFloat() {
+        skipCommaWhitespace();
+        float val = numberParser.parseNumber(input, position, inputLength);
+        if (!Float.isNaN(val))
+            position = numberParser.getEndPos();
+        return val;
+    }
+
+    /*
+     * Scans for comma-whitespace sequence with a float following it.
+     * But only if the provided 'lastFloat' (representing the last coord
+     * scanned was non-null (ie parsed correctly).
+     */
+    public float checkedNextFloat(float lastRead) {
+        if (Float.isNaN(lastRead)) {
+            return Float.NaN;
+        }
+        skipCommaWhitespace();
+        return nextFloat();
+    }
+
+    public Integer nextInteger() {
+        IntegerParser ip = IntegerParser.parseInt(input, position, inputLength);
+        if (ip == null)
+            return null;
+        position = ip.getEndPos();
+        return ip.value();
+    }
+
+    public Integer nextChar() {
+        if (position == inputLength)
+            return null;
+        return (int) input.charAt(position++);
+    }
+
+    public Length nextLength() {
+        float scalar = nextFloat();
+        if (Float.isNaN(scalar))
+            return null;
+        Unit unit = nextUnit();
+        if (unit == null)
+            return new Length(scalar, Unit.px);
+        else
+            return new Length(scalar, unit);
+    }
+
+    /*
+     * Scan for a 'flag'. A flag is a '0' or '1' digit character.
+     */
+    public Boolean nextFlag() {
+        if (position == inputLength)
+            return null;
+        char ch = input.charAt(position);
+        if (ch == '0' || ch == '1') {
+            position++;
+            return Boolean.valueOf(ch == '1');
+        }
+        return null;
+    }
+
+    /*
+     * Like checkedNextFloat, but reads a flag (see path definition parser)
+     */
+    public Boolean checkedNextFlag(Object lastRead) {
+        if (lastRead == null) {
+            return null;
+        }
+        skipCommaWhitespace();
+        return nextFlag();
+    }
+
+    public boolean consume(char ch) {
+        boolean found = (position < inputLength && input.charAt(position) == ch);
+        if (found)
+            position++;
+        return found;
+    }
+
+
+    public boolean consume(String str) {
+        int len = str.length();
+        boolean found = (position <= (inputLength - len) && input.substring(position, position + len).equals(str));
+        if (found)
+            position += len;
+        return found;
+    }
+
+
+    protected int advanceChar() {
+        if (position == inputLength)
+            return -1;
+        position++;
+        if (position < inputLength)
+            return input.charAt(position);
+        else
+            return -1;
+    }
+
+
+    /*
+     * Scans the input starting immediately at 'position' for the next token.
+     * A token is a sequence of characters terminating at a whitespace character.
+     * Note that this routine only checks for whitespace characters.  Use nextToken(char)
+     * if token might end with another character.
+     */
+    public String nextToken() {
+        return nextToken(' ');
+    }
+
+    /*
+     * Scans the input starting immediately at 'position' for the next token.
+     * A token is a sequence of characters terminating at either a whitespace character
+     * or the supplied terminating character.
+     */
+    public String nextToken(char terminator) {
+        if (empty())
+            return null;
+
+        int ch = input.charAt(position);
+        if (isWhitespace(ch) || ch == terminator)
+            return null;
+
+        int start = position;
+        ch = advanceChar();
+        while (ch != -1 && ch != terminator && !isWhitespace(ch)) {
+            ch = advanceChar();
+        }
+        return input.substring(start, position);
+    }
+
+    /*
+     * Scans the input starting immediately at 'position' for the a sequence
+     * of letter characters terminated by an open bracket.  The function
+     * name is returned.
+     */
+    public String nextFunction() {
+        if (empty())
+            return null;
+        int start = position;
+
+        int ch = input.charAt(position);
+        while ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z'))
+            ch = advanceChar();
+        int end = position;
+        while (isWhitespace(ch))
+            ch = advanceChar();
+        if (ch == '(') {
+            position++;
+            return input.substring(start, end);
+        }
+        position = start;
+        return null;
+    }
+
+    /*
+     * Get the next few chars. Mainly used for error messages.
+     */
+    public String ahead() {
+        int start = position;
+        while (!empty() && !isWhitespace(input.charAt(position)))
+            position++;
+        String str = input.substring(start, position);
+        position = start;
+        return str;
+    }
+
+    public Unit nextUnit() {
+        if (empty())
+            return null;
+        int ch = input.charAt(position);
+        if (ch == '%') {
+            position++;
+            return Unit.percent;
+        }
+        if (position > (inputLength - 2))
+            return null;
+        try {
+            Unit result = Unit.valueOf(input.substring(position, position + 2).toLowerCase(Locale.US));
+            position += 2;
+            return result;
+        } catch (IllegalArgumentException e) {
+            return null;
+        }
+    }
+
+    /*
+     * Check whether the next character is a letter.
+     */
+    public boolean hasLetter() {
+        if (position == inputLength)
+            return false;
+        char ch = input.charAt(position);
+        return ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z'));
+    }
+
+    /*
+     * Extract a quoted string from the input.
+     */
+    public String nextQuotedString() {
+        if (empty())
+            return null;
+        int start = position;
+        int ch = input.charAt(position);
+        int endQuote = ch;
+        if (ch != '\'' && ch != '"')
+            return null;
+        ch = advanceChar();
+        while (ch != -1 && ch != endQuote)
+            ch = advanceChar();
+        if (ch == -1) {
+            position = start;
+            return null;
+        }
+        position++;
+        return input.substring(start + 1, position - 1);
+    }
+
+    /*
+     * Return the remaining input as a string.
+     */
+    public String restOfText() {
+        if (empty())
+            return null;
+
+        int start = position;
+        position = inputLength;
+        return input.substring(start);
+    }
+
+    public static Path parserPath(String val) {
+        TextScanner scan = new TextScanner(val);
+
+        int pathCommand = '?';
+        float currentX = 0f, currentY = 0f;    // The last point visited in the subpath
+        float lastMoveX = 0f, lastMoveY = 0f;  // The initial point of current subpath
+        float lastControlX = 0f, lastControlY = 0f;  // Last control point of the just completed bezier curve.
+        float x, y, x1, y1, x2, y2;
+        float rx, ry, xAxisRotation;
+        Boolean largeArcFlag, sweepFlag;
+
+        Path path = new Path();
+
+        if (scan.empty())
+            return path;
+
+        pathCommand = scan.nextChar();
+
+        if (pathCommand != 'M' && pathCommand != 'm')
+            return path;  // Invalid path - doesn't start with a move
+
+        while (true) {
+            scan.skipWhitespace();
+
+            switch (pathCommand) {
+                // Move
+                case 'M':
+                case 'm':
+                    x = scan.nextFloat();
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    // Relative moveto at the start of a path is treated as an absolute moveto.
+                    if (pathCommand == 'm' && !path.isEmpty()) {
+                        x += currentX;
+                        y += currentY;
+                    }
+                    path.moveTo(x, y);
+                    currentX = lastMoveX = lastControlX = x;
+                    currentY = lastMoveY = lastControlY = y;
+                    // Any subsequent coord pairs should be treated as a lineto.
+                    pathCommand = (pathCommand == 'm') ? 'l' : 'L';
+                    break;
+
+                // Line
+                case 'L':
+                case 'l':
+                    x = scan.nextFloat();
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'l') {
+                        x += currentX;
+                        y += currentY;
+                    }
+                    path.lineTo(x, y);
+                    currentX = lastControlX = x;
+                    currentY = lastControlY = y;
+                    break;
+
+                // Cubic bezier
+                case 'C':
+                case 'c':
+                    x1 = scan.nextFloat();
+                    y1 = scan.checkedNextFloat(x1);
+                    x2 = scan.checkedNextFloat(y1);
+                    y2 = scan.checkedNextFloat(x2);
+                    x = scan.checkedNextFloat(y2);
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'c') {
+                        x += currentX;
+                        y += currentY;
+                        x1 += currentX;
+                        y1 += currentY;
+                        x2 += currentX;
+                        y2 += currentY;
+                    }
+                    path.cubicTo(x1, y1, x2, y2, x, y);
+                    lastControlX = x2;
+                    lastControlY = y2;
+                    currentX = x;
+                    currentY = y;
+                    break;
+
+                // Smooth curve (first control point calculated)
+                case 'S':
+                case 's':
+                    x1 = 2 * currentX - lastControlX;
+                    y1 = 2 * currentY - lastControlY;
+                    x2 = scan.nextFloat();
+                    y2 = scan.checkedNextFloat(x2);
+                    x = scan.checkedNextFloat(y2);
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 's') {
+                        x += currentX;
+                        y += currentY;
+                        x2 += currentX;
+                        y2 += currentY;
+                    }
+                    path.cubicTo(x1, y1, x2, y2, x, y);
+                    lastControlX = x2;
+                    lastControlY = y2;
+                    currentX = x;
+                    currentY = y;
+                    break;
+
+                // Close path
+                case 'Z':
+                case 'z':
+                    path.close();
+                    currentX = lastControlX = lastMoveX;
+                    currentY = lastControlY = lastMoveY;
+                    break;
+
+                // Horizontal line
+                case 'H':
+                case 'h':
+                    x = scan.nextFloat();
+                    if (Float.isNaN(x)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'h') {
+                        x += currentX;
+                    }
+                    path.lineTo(x, currentY);
+                    currentX = lastControlX = x;
+                    break;
+
+                // Vertical line
+                case 'V':
+                case 'v':
+                    y = scan.nextFloat();
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'v') {
+                        y += currentY;
+                    }
+                    path.lineTo(currentX, y);
+                    currentY = lastControlY = y;
+                    break;
+
+                // Quadratic bezier
+                case 'Q':
+                case 'q':
+                    x1 = scan.nextFloat();
+                    y1 = scan.checkedNextFloat(x1);
+                    x = scan.checkedNextFloat(y1);
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'q') {
+                        x += currentX;
+                        y += currentY;
+                        x1 += currentX;
+                        y1 += currentY;
+                    }
+                    path.quadTo(x1, y1, x, y);
+                    lastControlX = x1;
+                    lastControlY = y1;
+                    currentX = x;
+                    currentY = y;
+                    break;
+
+                // Smooth quadratic bezier
+                case 'T':
+                case 't':
+                    x1 = 2 * currentX - lastControlX;
+                    y1 = 2 * currentY - lastControlY;
+                    x = scan.nextFloat();
+                    y = scan.checkedNextFloat(x);
+                    if (Float.isNaN(y)) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 't') {
+                        x += currentX;
+                        y += currentY;
+                    }
+                    path.quadTo(x1, y1, x, y);
+                    lastControlX = x1;
+                    lastControlY = y1;
+                    currentX = x;
+                    currentY = y;
+                    break;
+
+                // Arc
+                case 'A':
+                case 'a':
+                    rx = scan.nextFloat();
+                    ry = scan.checkedNextFloat(rx);
+                    xAxisRotation = scan.checkedNextFloat(ry);
+                    largeArcFlag = scan.checkedNextFlag(xAxisRotation);
+                    sweepFlag = scan.checkedNextFlag(largeArcFlag);
+                    if (sweepFlag == null)
+                        x = y = Float.NaN;
+                    else {
+                        x = scan.possibleNextFloat();
+                        y = scan.checkedNextFloat(x);
+                    }
+                    if (Float.isNaN(y) || rx < 0 || ry < 0) {
+                        //Log.e(TAG, "Bad path coords for "+((char)pathCommand)+" path segment");
+                        return path;
+                    }
+                    if (pathCommand == 'a') {
+                        x += currentX;
+                        y += currentY;
+                    }
+                    path.arcTo(new RectF(rx, ry, x, y), xAxisRotation, xAxisRotation);
+                    //path.arcTo(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y);
+                    currentX = lastControlX = x;
+                    currentY = lastControlY = y;
+                    break;
+
+                default:
+                    return path;
+            }
+
+            scan.skipCommaWhitespace();
+            if (scan.empty())
+                break;
+
+            // Test to see if there is another set of coords for the current path command
+            if (scan.hasLetter()) {
+                // Nope, so get the new path command instead
+                pathCommand = scan.nextChar();
+            }
+        }
+        return path;
+    }
+
+    public static CharSequence zoomPath(String val, float ratioWidth, float ratioHeight) {
+        TextScanner scan = new TextScanner(val);
+
+        int pathCommand;
+        float xAxisRotation;
+        Boolean largeArcFlag, sweepFlag;
+
+        StringBuilder path = new StringBuilder();
+
+        if (scan.empty())
+            return path;
+
+        pathCommand = scan.nextChar();
+
+        if (pathCommand != 'M' && pathCommand != 'm')
+            return path;  // Invalid path - doesn't start with a move
+
+        while (true) {
+            scan.skipWhitespace();
+
+            switch (pathCommand) {
+                // Move
+                case 'M':
+                case 'm':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    // Any subsequent coord pairs should be treated as a lineto.
+                    pathCommand = (pathCommand == 'm') ? 'l' : 'L';
+                    break;
+                // Line
+                case 'L':
+                case 'l':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    break;
+
+                // Cubic bezier
+                case 'C':
+                case 'c':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    path.append(' ');
+                    path.append(scan.checkedNextFloat(0)*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    path.append(' ');
+                    path.append(scan.checkedNextFloat(0)*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    break;
+
+                // Smooth curve (first control point calculated)
+                case 'S':
+                case 's':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    path.append(' ');
+                    path.append(scan.checkedNextFloat(0)*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    break;
+
+                // Close path
+                case 'Z':
+                case 'z':
+                    path.append((char) pathCommand);
+                    break;
+
+                // Horizontal line
+                case 'H':
+                case 'h':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    break;
+
+                // Vertical line
+                case 'V':
+                case 'v':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioHeight);
+                    break;
+
+                // Quadratic bezier
+                case 'Q':
+                case 'q':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    path.append(' ');
+                    path.append(scan.checkedNextFloat(0)*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    break;
+
+                // Smooth quadratic bezier
+                case 'T':
+                case 't':
+                    path.append((char) pathCommand);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    break;
+
+                // Arc
+                case 'A':
+                case 'a':
+                    path.append((char) pathCommand);
+//                    rx = scan.nextFloat();
+//                    ry = scan.checkedNextFloat(rx);
+                    path.append(scan.nextFloat()*ratioWidth);
+                    path.append(',');
+                    path.append(scan.checkedNextFloat(0)*ratioHeight);
+
+
+                    xAxisRotation = scan.checkedNextFloat(0);
+                    largeArcFlag = scan.checkedNextFlag(xAxisRotation);
+                    sweepFlag = scan.checkedNextFlag(largeArcFlag);
+                    path.append(' ');
+                    path.append(xAxisRotation);
+                    path.append(' ');
+                    path.append(largeArcFlag == null ? 0 : 1);
+                    path.append(',');
+                    path.append(sweepFlag == null ? 0 : 1);
+
+                    if (sweepFlag != null) {
+//                        x = scan.possibleNextFloat();
+//                        y = scan.checkedNextFloat(x);
+                        path.append(' ');
+                        path.append(scan.possibleNextFloat()*ratioWidth);
+                        path.append(',');
+                        path.append(scan.checkedNextFloat(0)*ratioHeight);
+                    }
+                    break;
+
+                default:
+                    return path;
+            }
+
+            scan.skipCommaWhitespace();
+            if (scan.empty())
+                break;
+
+            // Test to see if there is another set of coords for the current path command
+            if (scan.hasLetter()) {
+                // Nope, so get the new path command instead
+                pathCommand = scan.nextChar();
+            }
+        }
+        return path;
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Unit.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Unit.java
new file mode 100644
index 0000000..b402509
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/internal/pathview/Unit.java
@@ -0,0 +1,13 @@
+package com.scwang.smartrefreshlayout.internal.pathview;
+
+enum Unit {
+    px,
+    em,
+    ex,
+    in,
+    cm,
+    mm,
+    pt,
+    pc,
+    percent
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnLoadmoreListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnLoadmoreListener.java
new file mode 100644
index 0000000..3f282ed
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnLoadmoreListener.java
@@ -0,0 +1,12 @@
+package com.scwang.smartrefreshlayout.listener;
+
+import com.scwang.smartrefreshlayout.SmartRefreshLayout;
+
+/**
+ * 加载更多监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface OnLoadmoreListener {
+    void onLoadmore(SmartRefreshLayout refreshlayout);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnMultiPurposeListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnMultiPurposeListener.java
new file mode 100644
index 0000000..6ca27a0
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnMultiPurposeListener.java
@@ -0,0 +1,21 @@
+package com.scwang.smartrefreshlayout.listener;
+
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+
+/**
+ * 多功能监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface OnMultiPurposeListener extends OnRefreshLoadmoreListener, OnStateChangedListener {
+    void onHeaderPulling(RefreshHeader header, int offset, int bottomHeight, int extendHeight);
+    void onHeaderReleasing(RefreshHeader header, int offset, int bottomHeight, int extendHeight);
+    void onHeaderStartAnimator(RefreshHeader header, int bottomHeight, int extendHeight);
+    void onHeaderFinish(RefreshHeader header);
+
+    void onFooterPulling(RefreshFooter footer, int offset, int headHeight, int extendHeight);
+    void onFooterReleasing(RefreshFooter footer, int offset, int headHeight, int extendHeight);
+    void onFooterStartAnimator(RefreshFooter footer, int headHeight, int extendHeight);
+    void onFooterFinish(RefreshFooter footer);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshListener.java
new file mode 100644
index 0000000..272eefa
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshListener.java
@@ -0,0 +1,12 @@
+package com.scwang.smartrefreshlayout.listener;
+
+import com.scwang.smartrefreshlayout.SmartRefreshLayout;
+
+/**
+ * 刷新监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface OnRefreshListener {
+    void onRefresh(SmartRefreshLayout refreshlayout);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshLoadmoreListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshLoadmoreListener.java
new file mode 100644
index 0000000..53c75c5
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnRefreshLoadmoreListener.java
@@ -0,0 +1,9 @@
+package com.scwang.smartrefreshlayout.listener;
+
+/**
+ * 刷新加载组合监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface OnRefreshLoadmoreListener extends OnRefreshListener, OnLoadmoreListener{
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnStateChangedListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnStateChangedListener.java
new file mode 100644
index 0000000..d3eaead
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/OnStateChangedListener.java
@@ -0,0 +1,13 @@
+package com.scwang.smartrefreshlayout.listener;
+
+
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+
+/**
+ * 刷新状态改变监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public interface OnStateChangedListener {
+    void onStateChanged(RefreshState state);
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/SimpleMultiPurposeListener.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/SimpleMultiPurposeListener.java
new file mode 100644
index 0000000..b121325
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/listener/SimpleMultiPurposeListener.java
@@ -0,0 +1,69 @@
+package com.scwang.smartrefreshlayout.listener;
+
+import com.scwang.smartrefreshlayout.SmartRefreshLayout;
+import com.scwang.smartrefreshlayout.api.RefreshFooter;
+import com.scwang.smartrefreshlayout.api.RefreshHeader;
+import com.scwang.smartrefreshlayout.constant.RefreshState;
+
+/**
+ * 多功能监听器
+ * Created by SCWANG on 2017/5/26.
+ */
+
+public class SimpleMultiPurposeListener implements OnMultiPurposeListener {
+
+    @Override
+    public void onHeaderPulling(RefreshHeader header, int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onHeaderReleasing(RefreshHeader header, int offset, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onHeaderStartAnimator(RefreshHeader header, int bottomHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onHeaderFinish(RefreshHeader header) {
+
+    }
+
+    @Override
+    public void onFooterPulling(RefreshFooter footer, int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onFooterReleasing(RefreshFooter footer, int offset, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onFooterStartAnimator(RefreshFooter footer, int headHeight, int extendHeight) {
+
+    }
+
+    @Override
+    public void onFooterFinish(RefreshFooter footer) {
+
+    }
+
+    @Override
+    public void onLoadmore(SmartRefreshLayout refreshlayout) {
+
+    }
+
+    @Override
+    public void onRefresh(SmartRefreshLayout refreshlayout) {
+
+    }
+
+    @Override
+    public void onStateChanged(RefreshState state) {
+
+    }
+}
diff --git a/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/util/DensityUtil.java b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/util/DensityUtil.java
new file mode 100644
index 0000000..d01adae
--- /dev/null
+++ b/refresh-layout/src/main/java/com/scwang/smartrefreshlayout/util/DensityUtil.java
@@ -0,0 +1,40 @@
+package com.scwang.smartrefreshlayout.util;
+
+import android.content.res.Resources;
+
+public class DensityUtil {
+
+    float density;
+
+    public DensityUtil() {
+        density = Resources.getSystem().getDisplayMetrics().density;
+    }
+
+    /**
+     * 根据手机的分辨率从 dp 的单位 转成为 px(像素) 
+     */
+    public static int dp2px(float dpValue) {
+        return (int) (0.5f + dpValue * Resources.getSystem().getDisplayMetrics().density);
+    }
+
+    /**
+     * 根据手机的分辨率从 px(像素) 的单位 转成为 dp 
+     */
+    public static float px2dp(float pxValue) {
+        return (pxValue / Resources.getSystem().getDisplayMetrics().density);
+    }
+
+    /**
+     * 根据手机的分辨率从 dp 的单位 转成为 px(像素)
+     */
+    public int dip2px(float dpValue) {
+        return (int) (0.5f + dpValue * density);
+    }
+
+    /**
+     * 根据手机的分辨率从 px(像素) 的单位 转成为 dp
+     */
+    public float px2dip(float pxValue) {
+        return (pxValue / density);
+    }
+}  
\ No newline at end of file
diff --git a/refresh-layout/src/main/res/values/attrs.xml b/refresh-layout/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..b7e6c01
--- /dev/null
+++ b/refresh-layout/src/main/res/values/attrs.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <attr name="srlPrimaryColor" format="color"/>
+    <attr name="srlAccentColor" format="color"/>
+
+    <declare-styleable name="SmartRefreshLayout">
+        <attr name="srlPrimaryColor"/>
+        <attr name="srlAccentColor"/>
+        <attr name="srlReboundDuration" format="integer"/>
+        <attr name="srlHeaderHeight" format="dimension"/>
+        <attr name="srlFooterHeight" format="dimension"/>
+        <attr name="srlHeaderExtendHeight" format="dimension"/>
+        <attr name="srlFooterExtendHeight" format="dimension"/>
+        <attr name="srlEnableRefresh" format="boolean"/>
+        <attr name="srlEnableLoadmore" format="boolean"/>
+        <attr name="srlEnableTranslationContent" format="boolean"/>
+        <attr name="srlDisableContentWhenRefresh" format="boolean"/>
+    </declare-styleable>
+
+    <declare-styleable name="BezierHeader">
+        <attr name="srlPrimaryColor"/>
+        <attr name="srlAccentColor"/>
+    </declare-styleable>
+
+    <declare-styleable name="BallPulseFooter">
+        <attr name="srlPrimaryColor"/>
+        <attr name="srlAccentColor"/>
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
diff --git a/refresh-layout/src/main/res/values/strings.xml b/refresh-layout/src/main/res/values/strings.xml
new file mode 100644
index 0000000..b5b95a5
--- /dev/null
+++ b/refresh-layout/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">SmartRefreshLayout</string>
+</resources>
diff --git a/refresh-layout/src/test/java/com/scwang/smartrefreshlayout/ExampleUnitTest.java b/refresh-layout/src/test/java/com/scwang/smartrefreshlayout/ExampleUnitTest.java
new file mode 100644
index 0000000..b02ba48
--- /dev/null
+++ b/refresh-layout/src/test/java/com/scwang/smartrefreshlayout/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package com.scwang.smartrefreshlayout;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
new file mode 100644
index 0000000..9f7d430
--- /dev/null
+++ b/settings.gradle
@@ -0,0 +1 @@
+include ':app', ':refresh-layout', ':refresh-header', ':refresh-footer'
--
Working Copy 3.2.8

